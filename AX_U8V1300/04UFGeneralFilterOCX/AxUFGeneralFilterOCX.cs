//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Reflection.AssemblyVersion("1.16.0.0")]
[assembly: System.Windows.Forms.AxHost.TypeLibraryTimeStamp("05/15/2017 17:12:26")]

namespace AxUFGeneralFilterOCX {
    
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{f240f1f0-a307-4813-99f3-e93285961ca6}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("FilterClick")]
    public class AxFilterControlOCX : System.Windows.Forms.AxHost {
        
        private UFGeneralFilterOCX._FilterControlOCX ocx;
        
        private AxFilterControlOCXEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxFilterControlOCX() : 
                base("f240f1f0-a307-4813-99f3-e93285961ca6") {
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027079)]
        public virtual bool ConditionVisiable {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ConditionVisiable", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ConditionVisiable;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ConditionVisiable", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ConditionVisiable = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027078)]
        public virtual bool SolutionVisiable {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SolutionVisiable", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SolutionVisiable;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SolutionVisiable", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SolutionVisiable = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027080)]
        public virtual UFGeneralFilterOCX.UseMode Mode {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Mode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Mode = value;
            }
        }
        
        public event @__FilterControlOCX_FilterClickEventHandler FilterClick;
        
        public event System.EventHandler QuickItemCountChange;
        
        public virtual object Init(ref object fld) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Init", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.Init(ref fld)));
            return returnValue;
        }
        
        public virtual object SimpleFilter() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SimpleFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SimpleFilter(((bool)(true)))));
            return returnValue;
        }
        
        public virtual object SimpleFilter(bool isInterrelateUI) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SimpleFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SimpleFilter(isInterrelateUI)));
            return returnValue;
        }
        
        public virtual object Layout() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Layout", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.Layout()));
            return returnValue;
        }
        
        public virtual bool MoreFilter() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoreFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.MoreFilter()));
            return returnValue;
        }
        
        public virtual bool SetReportView(string viewName, ref string errStr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetReportView", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SetReportView(viewName, ref errStr)));
            return returnValue;
        }
        
        public virtual bool SetReportGroup(string groupName, ref string errStr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetReportGroup", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SetReportGroup(groupName, ref errStr)));
            return returnValue;
        }
        
        public virtual bool AddReportView(string viewName, ref string errStr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddReportView", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.AddReportView(viewName, ref errStr)));
            return returnValue;
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxFilterControlOCXEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(UFGeneralFilterOCX.@__FilterControlOCX));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((UFGeneralFilterOCX._FilterControlOCX)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnFilterClick(object sender, @__FilterControlOCX_FilterClickEvent e) {
            if ((this.FilterClick != null)) {
                this.FilterClick(sender, e);
            }
        }
        
        internal void RaiseOnQuickItemCountChange(object sender, System.EventArgs e) {
            if ((this.QuickItemCountChange != null)) {
                this.QuickItemCountChange(sender, e);
            }
        }
    }
    
    public delegate void @__FilterControlOCX_FilterClickEventHandler(object sender, @__FilterControlOCX_FilterClickEvent e);
    
    public class @__FilterControlOCX_FilterClickEvent {
        
        public object fldsrv;
        
        public bool isInterrelateUI;
        
        public @__FilterControlOCX_FilterClickEvent(object fldsrv, bool isInterrelateUI) {
            this.fldsrv = fldsrv;
            this.isInterrelateUI = isInterrelateUI;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxFilterControlOCXEventMulticaster : UFGeneralFilterOCX.@__FilterControlOCX {
        
        private AxFilterControlOCX parent;
        
        public AxFilterControlOCXEventMulticaster(AxFilterControlOCX parent) {
            this.parent = parent;
        }
        
        public virtual void FilterClick(ref object fldsrv, bool isInterrelateUI) {
            @__FilterControlOCX_FilterClickEvent filterclickEvent = new @__FilterControlOCX_FilterClickEvent(fldsrv, isInterrelateUI);
            this.parent.RaiseOnFilterClick(this.parent, filterclickEvent);
            fldsrv = filterclickEvent.fldsrv;
        }
        
        public virtual void QuickItemCountChange() {
            System.EventArgs quickitemcountchangeEvent = new System.EventArgs();
            this.parent.RaiseOnQuickItemCountChange(this.parent, quickitemcountchangeEvent);
        }
    }
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{92380fbe-9b55-4a83-be7c-dab3c4108536}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("SimpleFilterEvent")]
    public class AxFilterCondition : System.Windows.Forms.AxHost {
        
        private UFGeneralFilterOCX._FilterCondition ocx;
        
        private AxFilterConditionEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxFilterCondition() : 
                base("92380fbe-9b55-4a83-be7c-dab3c4108536") {
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938433)]
        public virtual UFGeneralFilterPub.Edits editControls {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("editControls", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.editControls;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("editControls", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.editControls = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938434)]
        public virtual short FilterCols {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilterCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FilterCols;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilterCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FilterCols = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938446)]
        public virtual bool RunOnce {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RunOnce", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RunOnce;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RunOnce", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RunOnce = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027079)]
        public virtual UFGeneralFilterOCX.UseMode Mode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Mode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Mode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Mode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Mode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027076)]
        public virtual short RefEdtCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RefEdtCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RefEdtCount;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027217)]
        public virtual object IsExistShowItem {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsExistShowItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsExistShowItem;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938646)]
        public virtual string sViewXML {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("sViewXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.sViewXML;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("sViewXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.sViewXML = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938647)]
        public virtual string sGroupID {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("sGroupID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.sGroupID;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("sGroupID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.sGroupID = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938648)]
        public virtual bool ShowSumType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowSumType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowSumType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowSumType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowSumType = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938649)]
        public virtual bool isReportFilter {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("isReportFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.isReportFilter;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("isReportFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.isReportFilter = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938650)]
        public virtual bool DispDetail {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DispDetail", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DispDetail;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DispDetail", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DispDetail = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938651)]
        public virtual short ReportPageRows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReportPageRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ReportPageRows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReportPageRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ReportPageRows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938652)]
        public virtual string sViewID {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("sViewID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.sViewID;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("sViewID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.sViewID = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938653)]
        public virtual bool bCanceled {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("bCanceled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.bCanceled;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("bCanceled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.bCanceled = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938654)]
        public virtual bool HasReportFilterCache {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HasReportFilterCache", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.HasReportFilterCache;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HasReportFilterCache", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HasReportFilterCache = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938655)]
        public virtual short ShowAdvancePage {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowAdvancePage", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowAdvancePage;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowAdvancePage", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowAdvancePage = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027291)]
        public virtual short QuickItemCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("QuickItemCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.QuickItemCount;
            }
        }
        
        public event System.EventHandler OKFilter;
        
        public event System.EventHandler CancelFilter;
        
        public event @__FilterCondition_SimpleFilterEventHandler SimpleFilterEvent;
        
        public event @__FilterCondition_CheckCommonInputEventEventHandler CheckCommonInputEvent;
        
        public event @__FilterCondition_EdtTextChangeEventHandler EdtTextChange;
        
        public event @__FilterCondition_SwitchConditionEventEventHandler SwitchConditionEvent;
        
        public event System.EventHandler QuickItemCountChange;
        
        public virtual object GetReportFilterInfoFromUI(ref string viewId, ref string groupId, ref string pageRowCount) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetReportFilterInfoFromUI", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.GetReportFilterInfoFromUI(ref viewId, ref groupId, ref pageRowCount)));
            return returnValue;
        }
        
        public virtual bool SetReportView(string viewName, ref string errStr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetReportView", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SetReportView(viewName, ref errStr)));
            return returnValue;
        }
        
        public virtual bool SetReportGroup(string groupName, ref string errStr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetReportGroup", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SetReportGroup(groupName, ref errStr)));
            return returnValue;
        }
        
        public virtual bool AddReportView(string viewName, ref string errStr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddReportView", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.AddReportView(viewName, ref errStr)));
            return returnValue;
        }
        
        public virtual UFGeneralFilterOCX.ConditionSetType get_condSetType() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_condSetType", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            UFGeneralFilterOCX.ConditionSetType returnValue = ((UFGeneralFilterOCX.ConditionSetType)(this.ocx.get_condSetType()));
            return returnValue;
        }
        
        public virtual void set_condSetType(ref UFGeneralFilterOCX.ConditionSetType param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_condSetType", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_condSetType(ref param0);
        }
        
        public virtual object Layout() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Layout", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.Layout(((bool)(true)))));
            return returnValue;
        }
        
        public virtual object Layout(bool isTimer) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Layout", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.Layout(isTimer)));
            return returnValue;
        }
        
        public virtual void set_AdvanceFilter(ref UFGeneralFilterOCX.clsAdvanceFilter param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_AdvanceFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_AdvanceFilter(ref param0);
        }
        
        public virtual UFGeneralFilterOCX.clsAdvanceFilter get_AdvanceFilter() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_AdvanceFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            UFGeneralFilterOCX.clsAdvanceFilter returnValue = ((UFGeneralFilterOCX.clsAdvanceFilter)(this.ocx.get_AdvanceFilter()));
            return returnValue;
        }
        
        public virtual object Init(ref object fld) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Init", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.Init(ref fld)));
            return returnValue;
        }
        
        public virtual object SwitchCondition(UFGeneralFilterOCX.ConditionSetType condSetType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SwitchCondition", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SwitchCondition(condSetType)));
            return returnValue;
        }
        
        public virtual object SynAdvanceXML(ref object errInfo) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SynAdvanceXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SynAdvanceXML(ref errInfo)));
            return returnValue;
        }
        
        public virtual object SimpleFilter() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SimpleFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SimpleFilter(((bool)(true)))));
            return returnValue;
        }
        
        public virtual object SimpleFilter(bool isInterrelateUI) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SimpleFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SimpleFilter(isInterrelateUI)));
            return returnValue;
        }
        
        public virtual object MoreFilter() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoreFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.MoreFilter()));
            return returnValue;
        }
        
        public virtual void ActivateControl() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ActivateControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ActivateControl();
        }
        
        public virtual object ReLoadCommonSolution(ref object sSolutionID) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReLoadCommonSolution", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.ReLoadCommonSolution(ref sSolutionID)));
            return returnValue;
        }
        
        public virtual object ReLoadAdvanceSolution(ref object sSolutionID, bool loadDefault) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReLoadAdvanceSolution", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.ReLoadAdvanceSolution(ref sSolutionID, loadDefault)));
            return returnValue;
        }
        
        public virtual void UnloadObject(ref short cancel) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UnloadObject", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.UnloadObject(ref cancel);
        }
        
        public virtual void RefreshAdvanceCellText() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RefreshAdvanceCellText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RefreshAdvanceCellText();
        }
        
        public virtual object HiddenGroup(string groupNum, bool bHidden) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HiddenGroup", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.HiddenGroup(groupNum, bHidden)));
            return returnValue;
        }
        
        public virtual object HiddenGroupRow(string groupNum, bool bHidden) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HiddenGroupRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.HiddenGroupRow(groupNum, bHidden)));
            return returnValue;
        }
        
        public virtual string GetCommonXML() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetCommonXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetCommonXML()));
            return returnValue;
        }
        
        public virtual void DisplayCellEdit(short row, short col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisplayCellEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DisplayCellEdit(row, col);
        }
        
        public virtual string get_EdtValue(short index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_EdtValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_EdtValue(index)));
            return returnValue;
        }
        
        public virtual void set_EdtValue(short index, ref string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_EdtValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_EdtValue(index, ref param0);
        }
        
        public virtual void set_edtVisible(short index, ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_edtVisible", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_edtVisible(index, ref param0);
        }
        
        public virtual void set_EdtEnabled(short index, bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_EdtEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_EdtEnabled(index, param0);
        }
        
        public virtual void set_CommonGridText(short row, short col, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_CommonGridText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_CommonGridText(row, col, param0);
        }
        
        public virtual string get_CommonGridText(short row, short col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_CommonGridText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_CommonGridText(row, col)));
            return returnValue;
        }
        
        public virtual void set_CommonGridRowHidden(short row, bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_CommonGridRowHidden", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_CommonGridRowHidden(row, param0);
        }
        
        public virtual object ReserveGridText(short row, short col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReserveGridText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.ReserveGridText(row, col)));
            return returnValue;
        }
        
        public virtual object ReloadGridText(short row, short col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReloadGridText", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.ReloadGridText(row, col)));
            return returnValue;
        }
        
        public virtual object ResizeFilterWidthNoBorder() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ResizeFilterWidthNoBorder", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.ResizeFilterWidthNoBorder()));
            return returnValue;
        }
        
        public virtual object SetItemWidth(short captionWidth, ref short inputWidth) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetItemWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetItemWidth(captionWidth, ref inputWidth)));
            return returnValue;
        }
        
        public virtual object MoveEdit(ref short keyCode, short shift) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoveEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.MoveEdit(ref keyCode, shift)));
            return returnValue;
        }
        
        public virtual object AddCustomForm(object frm) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddCustomForm", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.AddCustomForm(frm)));
            return returnValue;
        }
        
        public virtual object AddCustomControl(string controlName, string asName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddCustomControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    controlName,
                    asName,
                    System.Reflection.Missing.Value};
            System.Type typeVar = typeof(UFGeneralFilterOCX._FilterCondition);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("AddCustomControl");
            object returnValue = ((object)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual object AddCustomControl(string controlName, string asName, object visible) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddCustomControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.AddCustomControl(controlName, asName, visible)));
            return returnValue;
        }
        
        public virtual void ShowChildControl() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowChildControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ShowChildControl();
        }
        
        public virtual object GetAdvanceXML() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetAdvanceXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.GetAdvanceXML()));
            return returnValue;
        }
        
        public virtual bool BuildAdvanceDom(string sXML) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BuildAdvanceDom", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.BuildAdvanceDom(sXML)));
            return returnValue;
        }
        
        public virtual object ClearAdvanceXML() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClearAdvanceXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.ClearAdvanceXML()));
            return returnValue;
        }
        
        public virtual bool SynUIDataToObj() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SynUIDataToObj", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SynUIDataToObj(((bool)(true)))));
            return returnValue;
        }
        
        public virtual bool SynUIDataToObj(bool isShowMsg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SynUIDataToObj", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SynUIDataToObj(isShowMsg)));
            return returnValue;
        }
        
        public virtual string Execute_Web(string filterID, string sType, string solutionId, ref object errInfo) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Execute_Web", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    filterID,
                    sType,
                    solutionId,
                    errInfo,
                    null,
                    ""};
            System.Type typeVar = typeof(UFGeneralFilterOCX._FilterCondition);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("Execute_Web");
            string returnValue = ((string)(methodToInvoke.Invoke(this.ocx, paramArray)));
            errInfo = ((object)(paramArray[3]));
            return returnValue;
        }
        
        public virtual string Execute_Web(string filterID, string sType, string solutionId, ref object errInfo, ref ADODB.Recordset rs, ref string sViewID) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Execute_Web", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.Execute_Web(filterID, sType, solutionId, ref errInfo, ref rs, ref sViewID)));
            return returnValue;
        }
        
        public virtual object SetValue(object key, ref object sValue) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetValue(key, ref sValue)));
            return returnValue;
        }
        
        public virtual object SetEditFilter(object key, ref object sFilterXML, ref object sSql) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetEditFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetEditFilter(key, ref sFilterXML, ref sSql)));
            return returnValue;
        }
        
        public virtual object HiddenCondition(object key, ref bool bHidden) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HiddenCondition", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.HiddenCondition(key, ref bHidden)));
            return returnValue;
        }
        
        public virtual object DisableCondition(object key, ref bool bDisable) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisableCondition", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.DisableCondition(key, ref bDisable)));
            return returnValue;
        }
        
        public virtual object SetItemRefID(object key, ref object sValue, string sReturnField) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetItemRefID", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetItemRefID(key, ref sValue, sReturnField)));
            return returnValue;
        }
        
        public virtual object SetItemEnumType(object key, string sEnumType, string sExpresstion) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetItemEnumType", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetItemEnumType(key, sEnumType, sExpresstion)));
            return returnValue;
        }
        
        public virtual object SetItemEnumString(object key, string sEnumString) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetItemEnumString", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetItemEnumString(key, sEnumString)));
            return returnValue;
        }
        
        public virtual object SetItemCaption(object key, string caption) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetItemCaption", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetItemCaption(key, caption)));
            return returnValue;
        }
        
        public virtual object SetItemFieldName(object key, string fieldName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetItemFieldName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetItemFieldName(key, fieldName)));
            return returnValue;
        }
        
        public virtual object SetItemFilterSQL(object key, string sSql) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetItemFilterSQL", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    key,
                    sSql,
                    "",
                    null};
            System.Type typeVar = typeof(UFGeneralFilterOCX._FilterCondition);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("SetItemFilterSQL");
            object returnValue = ((object)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual object SetItemFilterSQL(object key, string sSql, string sFieldSet, MSXML2.IXMLDOMElement nodColumnset) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetItemFilterSQL", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetItemFilterSQL(key, sSql, sFieldSet, nodColumnset)));
            return returnValue;
        }
        
        public virtual object SetItemReadonly(object key, bool isReadonly) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetItemReadonly", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetItemReadonly(key, isReadonly)));
            return returnValue;
        }
        
        public virtual object RestoreFilter(ref string reportSetting, ref bool isFirstReportCall, ref bool bShowSumType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RestoreFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.RestoreFilter(ref reportSetting, ref isFirstReportCall, ref bShowSumType)));
            return returnValue;
        }
        
        public virtual object CacheFilter(string reportSetting, bool showSumType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CacheFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.CacheFilter(reportSetting, showSumType)));
            return returnValue;
        }
        
        public virtual object ClearCondition() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClearCondition", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.ClearCondition()));
            return returnValue;
        }
        
        public virtual object ReloadSolution(string sSolutionID) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReloadSolution", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.ReloadSolution(sSolutionID)));
            return returnValue;
        }
        
        public virtual void FilterClick(bool cancelEvent) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilterClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FilterClick(cancelEvent);
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxFilterConditionEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(UFGeneralFilterOCX.@__FilterCondition));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((UFGeneralFilterOCX._FilterCondition)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnOKFilter(object sender, System.EventArgs e) {
            if ((this.OKFilter != null)) {
                this.OKFilter(sender, e);
            }
        }
        
        internal void RaiseOnCancelFilter(object sender, System.EventArgs e) {
            if ((this.CancelFilter != null)) {
                this.CancelFilter(sender, e);
            }
        }
        
        internal void RaiseOnSimpleFilterEvent(object sender, @__FilterCondition_SimpleFilterEvent e) {
            if ((this.SimpleFilterEvent != null)) {
                this.SimpleFilterEvent(sender, e);
            }
        }
        
        internal void RaiseOnCheckCommonInputEvent(object sender, @__FilterCondition_CheckCommonInputEventEvent e) {
            if ((this.CheckCommonInputEvent != null)) {
                this.CheckCommonInputEvent(sender, e);
            }
        }
        
        internal void RaiseOnEdtTextChange(object sender, @__FilterCondition_EdtTextChangeEvent e) {
            if ((this.EdtTextChange != null)) {
                this.EdtTextChange(sender, e);
            }
        }
        
        internal void RaiseOnSwitchConditionEvent(object sender, @__FilterCondition_SwitchConditionEventEvent e) {
            if ((this.SwitchConditionEvent != null)) {
                this.SwitchConditionEvent(sender, e);
            }
        }
        
        internal void RaiseOnQuickItemCountChange(object sender, System.EventArgs e) {
            if ((this.QuickItemCountChange != null)) {
                this.QuickItemCountChange(sender, e);
            }
        }
    }
    
    public delegate void @__FilterCondition_SimpleFilterEventHandler(object sender, @__FilterCondition_SimpleFilterEvent e);
    
    public class @__FilterCondition_SimpleFilterEvent {
        
        public object fldsrv;
        
        public bool isInterrelateUI;
        
        public @__FilterCondition_SimpleFilterEvent(object fldsrv, bool isInterrelateUI) {
            this.fldsrv = fldsrv;
            this.isInterrelateUI = isInterrelateUI;
        }
    }
    
    public delegate void @__FilterCondition_CheckCommonInputEventEventHandler(object sender, @__FilterCondition_CheckCommonInputEventEvent e);
    
    public class @__FilterCondition_CheckCommonInputEventEvent {
        
        public bool result;
        
        public @__FilterCondition_CheckCommonInputEventEvent(bool result) {
            this.result = result;
        }
    }
    
    public delegate void @__FilterCondition_EdtTextChangeEventHandler(object sender, @__FilterCondition_EdtTextChangeEvent e);
    
    public class @__FilterCondition_EdtTextChangeEvent {
        
        public string edtName;
        
        public object fldsrv;
        
        public @__FilterCondition_EdtTextChangeEvent(string edtName, object fldsrv) {
            this.edtName = edtName;
            this.fldsrv = fldsrv;
        }
    }
    
    public delegate void @__FilterCondition_SwitchConditionEventEventHandler(object sender, @__FilterCondition_SwitchConditionEventEvent e);
    
    public class @__FilterCondition_SwitchConditionEventEvent {
        
        public UFGeneralFilterOCX.ConditionSetType condSetType;
        
        public @__FilterCondition_SwitchConditionEventEvent(UFGeneralFilterOCX.ConditionSetType condSetType) {
            this.condSetType = condSetType;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxFilterConditionEventMulticaster : UFGeneralFilterOCX.@__FilterCondition {
        
        private AxFilterCondition parent;
        
        public AxFilterConditionEventMulticaster(AxFilterCondition parent) {
            this.parent = parent;
        }
        
        public virtual void OKFilter() {
            System.EventArgs okfilterEvent = new System.EventArgs();
            this.parent.RaiseOnOKFilter(this.parent, okfilterEvent);
        }
        
        public virtual void CancelFilter() {
            System.EventArgs cancelfilterEvent = new System.EventArgs();
            this.parent.RaiseOnCancelFilter(this.parent, cancelfilterEvent);
        }
        
        public virtual void SimpleFilter(ref object fldsrv, bool isInterrelateUI) {
            @__FilterCondition_SimpleFilterEvent simplefilterEvent = new @__FilterCondition_SimpleFilterEvent(fldsrv, isInterrelateUI);
            this.parent.RaiseOnSimpleFilterEvent(this.parent, simplefilterEvent);
            fldsrv = simplefilterEvent.fldsrv;
        }
        
        public virtual void CheckCommonInputEvent(ref bool result) {
            @__FilterCondition_CheckCommonInputEventEvent checkcommoninputeventEvent = new @__FilterCondition_CheckCommonInputEventEvent(result);
            this.parent.RaiseOnCheckCommonInputEvent(this.parent, checkcommoninputeventEvent);
            result = checkcommoninputeventEvent.result;
        }
        
        public virtual void EdtTextChange(string edtName, ref object fldsrv) {
            @__FilterCondition_EdtTextChangeEvent edttextchangeEvent = new @__FilterCondition_EdtTextChangeEvent(edtName, fldsrv);
            this.parent.RaiseOnEdtTextChange(this.parent, edttextchangeEvent);
            fldsrv = edttextchangeEvent.fldsrv;
        }
        
        public virtual void SwitchConditionEvent(UFGeneralFilterOCX.ConditionSetType condSetType) {
            @__FilterCondition_SwitchConditionEventEvent switchconditioneventEvent = new @__FilterCondition_SwitchConditionEventEvent(condSetType);
            this.parent.RaiseOnSwitchConditionEvent(this.parent, switchconditioneventEvent);
        }
        
        public virtual void QuickItemCountChange() {
            System.EventArgs quickitemcountchangeEvent = new System.EventArgs();
            this.parent.RaiseOnQuickItemCountChange(this.parent, quickitemcountchangeEvent);
        }
    }
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{e613a26a-7edd-40ff-a8f8-e38ae352539c}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("SolutionSelected")]
    public class AxFilterSolution : System.Windows.Forms.AxHost {
        
        private UFGeneralFilterOCX._FilterSolution ocx;
        
        private AxFilterSolutionEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxFilterSolution() : 
                base("e613a26a-7edd-40ff-a8f8-e38ae352539c") {
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027073)]
        public virtual UFGeneralFilterOCX.UseMode Mode {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Mode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Mode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027075)]
        public virtual bool IsExistSolution {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsExistSolution", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsExistSolution;
            }
        }
        
        public event @__FilterSolution_SolutionSelectedEventHandler SolutionSelected;
        
        public virtual object Init(ref object fld) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Init", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.Init(ref fld)));
            return returnValue;
        }
        
        public virtual object Layout() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Layout", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.Layout()));
            return returnValue;
        }
        
        public virtual object GetSolutionData() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSolutionData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.GetSolutionData()));
            return returnValue;
        }
        
        public virtual object ChangeSolution(string solutionId) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ChangeSolution", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.ChangeSolution(solutionId)));
            return returnValue;
        }
        
        public virtual void AdjustLayout(bool isLayouting) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AdjustLayout", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AdjustLayout(isLayouting);
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxFilterSolutionEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(UFGeneralFilterOCX.@__FilterSolution));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((UFGeneralFilterOCX._FilterSolution)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnSolutionSelected(object sender, @__FilterSolution_SolutionSelectedEvent e) {
            if ((this.SolutionSelected != null)) {
                this.SolutionSelected(sender, e);
            }
        }
    }
    
    public delegate void @__FilterSolution_SolutionSelectedEventHandler(object sender, @__FilterSolution_SolutionSelectedEvent e);
    
    public class @__FilterSolution_SolutionSelectedEvent {
        
        public string solutionId;
        
        public @__FilterSolution_SolutionSelectedEvent(string solutionId) {
            this.solutionId = solutionId;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxFilterSolutionEventMulticaster : UFGeneralFilterOCX.@__FilterSolution {
        
        private AxFilterSolution parent;
        
        public AxFilterSolutionEventMulticaster(AxFilterSolution parent) {
            this.parent = parent;
        }
        
        public virtual void SolutionSelected(string solutionId) {
            @__FilterSolution_SolutionSelectedEvent solutionselectedEvent = new @__FilterSolution_SolutionSelectedEvent(solutionId);
            this.parent.RaiseOnSolutionSelected(this.parent, solutionselectedEvent);
        }
    }
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{351a1621-9d11-45cf-89d5-d0d2a1cc6f71}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("ClickEvent")]
    public class AxFilterSolutionLabel : System.Windows.Forms.AxHost {
        
        private UFGeneralFilterOCX._FilterSolutionLabel ocx;
        
        private AxFilterSolutionLabelEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxFilterSolutionLabel() : 
                base("351a1621-9d11-45cf-89d5-d0d2a1cc6f71") {
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027074)]
        public virtual string SolutionId {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SolutionId", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SolutionId;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SolutionId", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SolutionId = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027073)]
        public virtual UFGeneralFilterOCX.Status Status {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Status", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Status;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Status", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Status = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027072)]
        public virtual string Caption {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Caption", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Caption = value;
            }
        }
        
        public event System.EventHandler ClickEvent;
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxFilterSolutionLabelEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(UFGeneralFilterOCX.@__FilterSolutionLabel));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((UFGeneralFilterOCX._FilterSolutionLabel)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnClickEvent(object sender, System.EventArgs e) {
            if ((this.ClickEvent != null)) {
                this.ClickEvent(sender, e);
            }
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxFilterSolutionLabelEventMulticaster : UFGeneralFilterOCX.@__FilterSolutionLabel {
        
        private AxFilterSolutionLabel parent;
        
        public AxFilterSolutionLabelEventMulticaster(AxFilterSolutionLabel parent) {
            this.parent = parent;
        }
        
        public virtual void Click() {
            System.EventArgs clickEvent = new System.EventArgs();
            this.parent.RaiseOnClickEvent(this.parent, clickEvent);
        }
    }
}
