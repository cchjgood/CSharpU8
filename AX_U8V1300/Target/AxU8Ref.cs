//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Reflection.AssemblyVersion("10.37.0.0")]
[assembly: System.Windows.Forms.AxHost.TypeLibraryTimeStamp("12/26/2017 11:51:42")]

namespace AxU8Ref {
    
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{4fbf0ee6-29a7-4186-bfca-a30b2c7c75fd}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("Change")]
    [System.ComponentModel.DefaultProperty("Text")]
    public class AxRefEdit : System.Windows.Forms.AxHost {
        
        private U8Ref._RefEdit ocx;
        
        private AxRefEditEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxRefEdit() : 
                base("4fbf0ee6-29a7-4186-bfca-a30b2c7c75fd") {
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027110)]
        public virtual U8Ref.AlignmentCOnstants Alignment {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Alignment", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Alignment;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Alignment", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Alignment = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027109)]
        public virtual short Appearance {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Appearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Appearance;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Appearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Appearance = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027108)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CtlBackColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.BackColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BackColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027107)]
        public virtual string BadStr {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BadStr", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BadStr;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BadStr", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BadStr = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027106)]
        public virtual string BadStrEx {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BadStrEx", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BadStrEx;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BadStrEx", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BadStrEx = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027105)]
        public virtual string BadStrException {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BadStrException", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BadStrException;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BadStrException", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BadStrException = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027104)]
        public virtual U8Ref.DISPID_BORDERSTYLE BorderStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BorderStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BorderStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027103)]
        public virtual bool BottomLine {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BottomLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BottomLine;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BottomLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BottomLine = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027102)]
        public virtual string DateFormatStr {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DateFormatStr", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DateFormatStr;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DateFormatStr", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DateFormatStr = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027101)]
        public virtual bool CtlEnabled {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Enabled;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Enabled = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027100)]
        public virtual bool EstopCancel {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EstopCancel", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EstopCancel = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027099)]
        public virtual bool EstopCursor {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EstopCursor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EstopCursor = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027098)]
        public virtual bool EstopPaste {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EstopPaste", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.EstopPaste;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EstopPaste", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EstopPaste = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027097)]
        public virtual bool EstopTab {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EstopTab", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EstopTab = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027096)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("stdole.StdFont")]
        public virtual System.Drawing.Font CtlFont {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlFont", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetFontFromIFont(this.ocx.Font);
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlFont", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Font = ((stdole.StdFont)(GetIFontFromFont(value)));
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027095)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.UInt32")]
        public virtual System.Drawing.Color CtlForeColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetColorFromOleColor(((uint)(this.ocx.ForeColor)));
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ForeColor = ((uint)(GetOleColorFromColor(value)));
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027094)]
        [System.Runtime.InteropServices.ComAliasNameAttribute("System.Int32")]
        public virtual int hwnd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("hwnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return (this.ocx.hwnd);
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027093)]
        public virtual EDITLib.LockTypes Locked {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Locked", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Locked;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Locked", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Locked = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027092)]
        public virtual int MaxLength {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxLength", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MaxLength;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxLength", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MaxLength = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027091)]
        public virtual bool MaxLengthInBytes {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxLengthInBytes", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MaxLengthInBytes;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MaxLengthInBytes", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MaxLengthInBytes = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027090)]
        public virtual bool MultiLine {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultiLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MultiLine;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultiLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MultiLine = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027089)]
        public virtual short NumPoint {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NumPoint", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.NumPoint;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NumPoint", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.NumPoint = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027088)]
        public virtual bool OkCancel {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OkCancel", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.OkCancel;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OkCancel", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.OkCancel = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027087)]
        public virtual string PasswordChar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PasswordChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PasswordChar;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PasswordChar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PasswordChar = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027086)]
        public virtual U8Ref.EditTypes Property {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Property", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Property;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Property", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Property = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027085)]
        public virtual int PropertyReMark {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PropertyReMark", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PropertyReMark;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PropertyReMark", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PropertyReMark = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027084)]
        public virtual int Reserved {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Reserved", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Reserved;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Reserved", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Reserved = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027083)]
        public virtual U8Ref.ScrollBarConstants ScrollBars {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBars", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScrollBars;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScrollBars", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScrollBars = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027082)]
        public virtual int SelLength {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelLength", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelLength;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelLength", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelLength = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027081)]
        public virtual int SelStart {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelStart", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelStart;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelStart", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelStart = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027080)]
        public virtual string SelText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027079)]
        public virtual string UTooltipText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UTooltipText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UTooltipText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UTooltipText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.UTooltipText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027078)]
        public virtual bool AutoDisplayText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoDisplayText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoDisplayText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoDisplayText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoDisplayText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027077)]
        public virtual bool AutoHideCmd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoHideCmd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoHideCmd;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoHideCmd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoHideCmd = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027076)]
        public virtual string DisplayText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisplayText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DisplayText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisplayText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DisplayText = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027075)]
        public virtual MSXML2.IXMLDOMElement MultiTextElement {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultiTextElement", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MultiTextElement;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027074)]
        public virtual object RegObj {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RegObj", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RegObj;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RegObj", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RegObj = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027073)]
        public virtual U8Ref.RefTypes RefType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RefType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RefType;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RefType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RefType = value;
            }
        }
        
        [System.ComponentModel.Browsable(true)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(0)]
        public override string Text {
            get {
                if (((this.ocx != null) 
                            && (this.PropsValid() == true))) {
                    return this.ocx.Text;
                }
                else {
                    return base.Text;
                }
            }
            set {
                base.Text = value;
                if ((this.ocx != null)) {
                    this.ocx.Text = value;
                }
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027072)]
        public virtual bool Valid {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Valid", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Valid;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Valid", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Valid = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027163)]
        public virtual string FontName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027162)]
        public virtual double FontSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FontSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FontSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FontSize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027161)]
        public virtual U8Ref.LanguageIDs LanguageID {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LanguageID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LanguageID;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LanguageID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LanguageID = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027186)]
        public virtual bool AutoExchangeText {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoExchangeText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoExchangeText;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoExchangeText", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoExchangeText = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027220)]
        public virtual U8Ref.MultiRetStyles MultiRetStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultiRetStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MultiRetStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultiRetStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MultiRetStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027221)]
        public virtual bool RememberLastRst {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RememberLastRst", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RememberLastRst;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RememberLastRst", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RememberLastRst = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027263)]
        public virtual string CustomFormat {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CustomFormat", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CustomFormat;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CustomFormat", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CustomFormat = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027264)]
        public virtual U8Ref.CheckModes CheckMode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CheckMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CheckMode;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027265)]
        public virtual U8Ref.RetStyles RetStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RetStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RetStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RetStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RetStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027266)]
        public virtual string RefID {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RefID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RefID;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027292)]
        public virtual bool LockedEdit {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LockedEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LockedEdit;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LockedEdit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LockedEdit = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027294)]
        public virtual string EnumTypeString {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EnumTypeString", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.EnumTypeString;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EnumTypeString", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EnumTypeString = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027293)]
        public virtual bool IsEnum {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsEnum", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsEnum;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsEnum", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsEnum = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027296)]
        public virtual string InputValue {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InputValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.InputValue;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027348)]
        public virtual string WebRootURL {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("WebRootURL", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.WebRootURL;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("WebRootURL", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.WebRootURL = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027349)]
        public virtual bool IsUserDefArch {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsUserDefArch", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsUserDefArch;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsUserDefArch", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsUserDefArch = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027356)]
        public virtual bool AutoFormatDouble {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoFormatDouble", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AutoFormatDouble;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoFormatDouble", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoFormatDouble = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027415)]
        public virtual bool CancelMatchRefWnd {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CancelMatchRefWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CancelMatchRefWnd;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CancelMatchRefWnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CancelMatchRefWnd = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027414)]
        public virtual U8Ref.MessageStyles MessageStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MessageStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MessageStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MessageStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MessageStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027422)]
        public virtual bool CheckedValid {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CheckedValid", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CheckedValid;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027429)]
        public virtual bool IsEditArch {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsEditArch", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsEditArch;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsEditArch", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsEditArch = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027498)]
        public virtual string skinStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("skinStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.skinStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("skinStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.skinStyle = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027579)]
        public virtual string FilterSQL {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FilterSQL", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FilterSQL = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027580)]
        public virtual bool StopSkin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StopSkin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.StopSkin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StopSkin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.StopSkin = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027581)]
        public virtual bool AutoCompleteAuth {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoCompleteAuth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoCompleteAuth = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027582)]
        public virtual bool AutoCompleteFlag {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoCompleteFlag", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AutoCompleteFlag = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027670)]
        public virtual bool IsCancelled {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsCancelled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsCancelled;
            }
        }
        
        public event System.EventHandler ActiveSaveBtn;
        
        public event System.EventHandler Change;
        
        public event System.EventHandler ClickEvent;
        
        public event @__RefEdit_CustKeyDownEventHandler CustKeyDown;
        
        public event System.EventHandler DblClick;
        
        public event System.EventHandler Error;
        
        public event @__RefEdit_KeyDownEventHandler KeyDownEvent;
        
        public event @__RefEdit_KeyPressEventHandler KeyPressEvent;
        
        public event @__RefEdit_KeyUpEventHandler KeyUpEvent;
        
        public event @__RefEdit_MouseDownEventHandler MouseDownEvent;
        
        public event @__RefEdit_MouseMoveEventHandler MouseMoveEvent;
        
        public event @__RefEdit_MouseUpEventHandler MouseUpEvent;
        
        public event @__RefEdit_BeforeBrowseEventHandler BeforeBrowse;
        
        public event @__RefEdit_BeforeBrowseWebEventHandler BeforeBrowseWeb;
        
        public event @__RefEdit_AfterBrowseEventHandler AfterBrowse;
        
        public event @__RefEdit_GetFilterRefingEventHandler GetFilterRefing;
        
        public event @__RefEdit_FillDataEventHandler FillData;
        
        public event @__RefEdit_UFValidateEventHandler UFValidate;
        
        public event @__RefEdit_UserBrowseEventHandler UserBrowse;
        
        public event System.EventHandler TextChange;
        
        public virtual void Refresh() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Refresh", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Refresh();
        }
        
        public virtual bool SetXMLFilterPara(ref string sXMLFilterPara, ref string sSQL) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetXMLFilterPara", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    sXMLFilterPara,
                    sSQL,
                    ""};
            System.Type typeVar = typeof(U8Ref._RefEdit);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("SetXMLFilterPara");
            bool returnValue = ((bool)(methodToInvoke.Invoke(this.ocx, paramArray)));
            sXMLFilterPara = ((string)(paramArray[0]));
            sSQL = ((string)(paramArray[1]));
            return returnValue;
        }
        
        public virtual bool SetXMLFilterPara(ref string sXMLFilterPara, ref string sSQL, ref string sMsg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetXMLFilterPara", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SetXMLFilterPara(ref sXMLFilterPara, ref sSQL, ref sMsg)));
            return returnValue;
        }
        
        public virtual string UFFormatDate(string strDate) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UFFormatDate", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.UFFormatDate(strDate)));
            return returnValue;
        }
        
        public virtual void DoClick() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoClick", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DoClick();
        }
        
        public virtual void set_MultiTextXML(ref string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_MultiTextXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_MultiTextXML(ref param0);
        }
        
        public virtual string GetAttribute(ref string attrName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetAttribute", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    attrName,
                    System.Reflection.Missing.Value};
            System.Type typeVar = typeof(U8Ref._RefEdit);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("GetAttribute");
            string returnValue = ((string)(methodToInvoke.Invoke(this.ocx, paramArray)));
            attrName = ((string)(paramArray[0]));
            return returnValue;
        }
        
        public virtual string GetAttribute(ref string attrName, ref object vDefaultVal) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetAttribute", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetAttribute(ref attrName, ref vDefaultVal)));
            return returnValue;
        }
        
        public virtual string SetAttribute(ref string attrName, ref string attrValue) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetAttribute", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.SetAttribute(ref attrName, ref attrValue)));
            return returnValue;
        }
        
        public virtual void ShowRef() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowRef", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ShowRef();
        }
        
        public virtual bool CheckValidForce() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CheckValidForce", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.CheckValidForce()));
            return returnValue;
        }
        
        public virtual int GetEditHwnd() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetEditHwnd", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetEditHwnd()));
            return returnValue;
        }
        
        public virtual int RefreshAutoCompleteData(string tableName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RefreshAutoCompleteData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.RefreshAutoCompleteData(tableName)));
            return returnValue;
        }
        
        public virtual void ClearAutoCompleteForm() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClearAutoCompleteForm", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ClearAutoCompleteForm();
        }
        
        public virtual void CloseAutoComplete() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CloseAutoComplete", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CloseAutoComplete();
        }
        
        public virtual string CheckDateStr(ref string text, ref string format, ref string standard, ref int errorno) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CheckDateStr", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.CheckDateStr(ref text, ref format, ref standard, ref errorno)));
            return returnValue;
        }
        
        public virtual bool Init(ref object oLogin, ref string sRefID) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Init", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    oLogin,
                    sRefID,
                    ((bool)(false)),
                    ""};
            System.Type typeVar = typeof(U8Ref._RefEdit);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("Init");
            bool returnValue = ((bool)(methodToInvoke.Invoke(this.ocx, paramArray)));
            oLogin = ((object)(paramArray[0]));
            sRefID = ((string)(paramArray[1]));
            return returnValue;
        }
        
        public virtual bool Init(ref object oLogin, ref string sRefID, ref bool bWeb, ref string sMetaXML) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Init", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.Init(ref oLogin, ref sRefID, ref bWeb, ref sMetaXML)));
            return returnValue;
        }
        
        public virtual void Clear() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Clear", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Clear();
        }
        
        public virtual bool SetFilterXML(ref string sXML) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetFilterXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    sXML,
                    ""};
            System.Type typeVar = typeof(U8Ref._RefEdit);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("SetFilterXML");
            bool returnValue = ((bool)(methodToInvoke.Invoke(this.ocx, paramArray)));
            sXML = ((string)(paramArray[0]));
            return returnValue;
        }
        
        public virtual bool SetFilterXML(ref string sXML, ref string sMsg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetFilterXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SetFilterXML(ref sXML, ref sMsg)));
            return returnValue;
        }
        
        public virtual object TxtValue(ref object var) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TxtValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    var,
                    System.Reflection.Missing.Value};
            System.Type typeVar = typeof(U8Ref._RefEdit);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("TxtValue");
            object returnValue = ((object)(methodToInvoke.Invoke(this.ocx, paramArray)));
            var = ((object)(paramArray[0]));
            return returnValue;
        }
        
        public virtual object TxtValue(ref object var, ref object vDefault) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TxtValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.TxtValue(ref var, ref vDefault)));
            return returnValue;
        }
        
        public virtual bool CheckValid() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CheckValid", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.CheckValid()));
            return returnValue;
        }
        
        public virtual bool GetRefMeta(ref object oLogin, ref string sXML, ref MSXML2.IXMLDOMElement eleMeta, ref string sMsg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetRefMeta", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.GetRefMeta(ref oLogin, ref sXML, ref eleMeta, ref sMsg)));
            return returnValue;
        }
        
        public virtual bool GetData(ref object oLogin, ref string sXML, ref MSXML2.IXMLDOMElement eleMeta, ref ADODB.Recordset rstClass, ref ADODB.Recordset rstGrid, ref ADODB.Recordset rstColSet, ref string sMsg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.GetData(ref oLogin, ref sXML, ref eleMeta, ref rstClass, ref rstGrid, ref rstColSet, ref sMsg)));
            return returnValue;
        }
        
        public virtual bool ColSetSrv_GetColInfo(ref object oLogin, string cKey, ref string cFormat) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColSetSrv_GetColInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    oLogin,
                    cKey,
                    cFormat,
                    ((byte)(0)),
                    ""};
            System.Type typeVar = typeof(U8Ref._RefEdit);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("ColSetSrv_GetColInfo");
            bool returnValue = ((bool)(methodToInvoke.Invoke(this.ocx, paramArray)));
            oLogin = ((object)(paramArray[0]));
            cFormat = ((string)(paramArray[2]));
            return returnValue;
        }
        
        public virtual bool ColSetSrv_GetColInfo(ref object oLogin, string cKey, ref string cFormat, byte iReturnMode, ref string sMsg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColSetSrv_GetColInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.ColSetSrv_GetColInfo(ref oLogin, cKey, ref cFormat, iReturnMode, ref sMsg)));
            return returnValue;
        }
        
        public virtual bool ColSetSrv_Save(ref object oLogin, ref string sXML, ref string sMsg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColSetSrv_Save", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.ColSetSrv_Save(ref oLogin, ref sXML, ref sMsg)));
            return returnValue;
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxRefEditEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(U8Ref.@__RefEdit));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((U8Ref._RefEdit)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnActiveSaveBtn(object sender, System.EventArgs e) {
            if ((this.ActiveSaveBtn != null)) {
                this.ActiveSaveBtn(sender, e);
            }
        }
        
        internal void RaiseOnChange(object sender, System.EventArgs e) {
            if ((this.Change != null)) {
                this.Change(sender, e);
            }
        }
        
        internal void RaiseOnClickEvent(object sender, System.EventArgs e) {
            if ((this.ClickEvent != null)) {
                this.ClickEvent(sender, e);
            }
        }
        
        internal void RaiseOnCustKeyDown(object sender, @__RefEdit_CustKeyDownEvent e) {
            if ((this.CustKeyDown != null)) {
                this.CustKeyDown(sender, e);
            }
        }
        
        internal void RaiseOnDblClick(object sender, System.EventArgs e) {
            if ((this.DblClick != null)) {
                this.DblClick(sender, e);
            }
        }
        
        internal void RaiseOnError(object sender, System.EventArgs e) {
            if ((this.Error != null)) {
                this.Error(sender, e);
            }
        }
        
        internal void RaiseOnKeyDownEvent(object sender, @__RefEdit_KeyDownEvent e) {
            if ((this.KeyDownEvent != null)) {
                this.KeyDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyPressEvent(object sender, @__RefEdit_KeyPressEvent e) {
            if ((this.KeyPressEvent != null)) {
                this.KeyPressEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyUpEvent(object sender, @__RefEdit_KeyUpEvent e) {
            if ((this.KeyUpEvent != null)) {
                this.KeyUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseDownEvent(object sender, @__RefEdit_MouseDownEvent e) {
            if ((this.MouseDownEvent != null)) {
                this.MouseDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseMoveEvent(object sender, @__RefEdit_MouseMoveEvent e) {
            if ((this.MouseMoveEvent != null)) {
                this.MouseMoveEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseUpEvent(object sender, @__RefEdit_MouseUpEvent e) {
            if ((this.MouseUpEvent != null)) {
                this.MouseUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnBeforeBrowse(object sender, @__RefEdit_BeforeBrowseEvent e) {
            if ((this.BeforeBrowse != null)) {
                this.BeforeBrowse(sender, e);
            }
        }
        
        internal void RaiseOnBeforeBrowseWeb(object sender, @__RefEdit_BeforeBrowseWebEvent e) {
            if ((this.BeforeBrowseWeb != null)) {
                this.BeforeBrowseWeb(sender, e);
            }
        }
        
        internal void RaiseOnAfterBrowse(object sender, @__RefEdit_AfterBrowseEvent e) {
            if ((this.AfterBrowse != null)) {
                this.AfterBrowse(sender, e);
            }
        }
        
        internal void RaiseOnGetFilterRefing(object sender, @__RefEdit_GetFilterRefingEvent e) {
            if ((this.GetFilterRefing != null)) {
                this.GetFilterRefing(sender, e);
            }
        }
        
        internal void RaiseOnFillData(object sender, @__RefEdit_FillDataEvent e) {
            if ((this.FillData != null)) {
                this.FillData(sender, e);
            }
        }
        
        internal void RaiseOnUFValidate(object sender, @__RefEdit_UFValidateEvent e) {
            if ((this.UFValidate != null)) {
                this.UFValidate(sender, e);
            }
        }
        
        internal void RaiseOnUserBrowse(object sender, @__RefEdit_UserBrowseEvent e) {
            if ((this.UserBrowse != null)) {
                this.UserBrowse(sender, e);
            }
        }
        
        internal void RaiseOnTextChange(object sender, System.EventArgs e) {
            if ((this.TextChange != null)) {
                this.TextChange(sender, e);
            }
        }
    }
    
    public delegate void @__RefEdit_CustKeyDownEventHandler(object sender, @__RefEdit_CustKeyDownEvent e);
    
    public class @__RefEdit_CustKeyDownEvent {
        
        public U8Ref.KeyTypes key;
        
        public @__RefEdit_CustKeyDownEvent(U8Ref.KeyTypes key) {
            this.key = key;
        }
    }
    
    public delegate void @__RefEdit_KeyDownEventHandler(object sender, @__RefEdit_KeyDownEvent e);
    
    public class @__RefEdit_KeyDownEvent {
        
        public short keyCode;
        
        public short shift;
        
        public @__RefEdit_KeyDownEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void @__RefEdit_KeyPressEventHandler(object sender, @__RefEdit_KeyPressEvent e);
    
    public class @__RefEdit_KeyPressEvent {
        
        public short keyAscii;
        
        public @__RefEdit_KeyPressEvent(short keyAscii) {
            this.keyAscii = keyAscii;
        }
    }
    
    public delegate void @__RefEdit_KeyUpEventHandler(object sender, @__RefEdit_KeyUpEvent e);
    
    public class @__RefEdit_KeyUpEvent {
        
        public short keyCode;
        
        public short shift;
        
        public @__RefEdit_KeyUpEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void @__RefEdit_MouseDownEventHandler(object sender, @__RefEdit_MouseDownEvent e);
    
    public class @__RefEdit_MouseDownEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__RefEdit_MouseDownEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__RefEdit_MouseMoveEventHandler(object sender, @__RefEdit_MouseMoveEvent e);
    
    public class @__RefEdit_MouseMoveEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__RefEdit_MouseMoveEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__RefEdit_MouseUpEventHandler(object sender, @__RefEdit_MouseUpEvent e);
    
    public class @__RefEdit_MouseUpEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__RefEdit_MouseUpEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__RefEdit_BeforeBrowseEventHandler(object sender, @__RefEdit_BeforeBrowseEvent e);
    
    public class @__RefEdit_BeforeBrowseEvent {
        
        public string sXMLFilterPara;
        
        public string sSQL;
        
        public bool cancel;
        
        public @__RefEdit_BeforeBrowseEvent(string sXMLFilterPara, string sSQL, bool cancel) {
            this.sXMLFilterPara = sXMLFilterPara;
            this.sSQL = sSQL;
            this.cancel = cancel;
        }
    }
    
    public delegate void @__RefEdit_BeforeBrowseWebEventHandler(object sender, @__RefEdit_BeforeBrowseWebEvent e);
    
    public class @__RefEdit_BeforeBrowseWebEvent {
        
        public object sXMLFilterPara;
        
        public object sSQL;
        
        public object cancel;
        
        public @__RefEdit_BeforeBrowseWebEvent(object sXMLFilterPara, object sSQL, object cancel) {
            this.sXMLFilterPara = sXMLFilterPara;
            this.sSQL = sSQL;
            this.cancel = cancel;
        }
    }
    
    public delegate void @__RefEdit_AfterBrowseEventHandler(object sender, @__RefEdit_AfterBrowseEvent e);
    
    public class @__RefEdit_AfterBrowseEvent {
        
        public ADODB.Recordset rstClass;
        
        public ADODB.Recordset rstGrid;
        
        public string sXML;
        
        public @__RefEdit_AfterBrowseEvent(ADODB.Recordset rstClass, ADODB.Recordset rstGrid, string sXML) {
            this.rstClass = rstClass;
            this.rstGrid = rstGrid;
            this.sXML = sXML;
        }
    }
    
    public delegate void @__RefEdit_GetFilterRefingEventHandler(object sender, @__RefEdit_GetFilterRefingEvent e);
    
    public class @__RefEdit_GetFilterRefingEvent {
        
        public string sXMLFilter;
        
        public @__RefEdit_GetFilterRefingEvent(string sXMLFilter) {
            this.sXMLFilter = sXMLFilter;
        }
    }
    
    public delegate void @__RefEdit_FillDataEventHandler(object sender, @__RefEdit_FillDataEvent e);
    
    public class @__RefEdit_FillDataEvent {
        
        public ADODB.Recordset rstClass;
        
        public ADODB.Recordset rstGrid;
        
        public string sXML;
        
        public @__RefEdit_FillDataEvent(ADODB.Recordset rstClass, ADODB.Recordset rstGrid, string sXML) {
            this.rstClass = rstClass;
            this.rstGrid = rstGrid;
            this.sXML = sXML;
        }
    }
    
    public delegate void @__RefEdit_UFValidateEventHandler(object sender, @__RefEdit_UFValidateEvent e);
    
    public class @__RefEdit_UFValidateEvent {
        
        public bool cancle;
        
        public @__RefEdit_UFValidateEvent(bool cancle) {
            this.cancle = cancle;
        }
    }
    
    public delegate void @__RefEdit_UserBrowseEventHandler(object sender, @__RefEdit_UserBrowseEvent e);
    
    public class @__RefEdit_UserBrowseEvent {
        
        public string sXML;
        
        public @__RefEdit_UserBrowseEvent(string sXML) {
            this.sXML = sXML;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxRefEditEventMulticaster : U8Ref.@__RefEdit {
        
        private AxRefEdit parent;
        
        public AxRefEditEventMulticaster(AxRefEdit parent) {
            this.parent = parent;
        }
        
        public virtual void ActiveSaveBtn() {
            System.EventArgs activesavebtnEvent = new System.EventArgs();
            this.parent.RaiseOnActiveSaveBtn(this.parent, activesavebtnEvent);
        }
        
        public virtual void Change() {
            System.EventArgs changeEvent = new System.EventArgs();
            this.parent.RaiseOnChange(this.parent, changeEvent);
        }
        
        public virtual void Click() {
            System.EventArgs clickEvent = new System.EventArgs();
            this.parent.RaiseOnClickEvent(this.parent, clickEvent);
        }
        
        public virtual void CustKeyDown(U8Ref.KeyTypes key) {
            @__RefEdit_CustKeyDownEvent custkeydownEvent = new @__RefEdit_CustKeyDownEvent(key);
            this.parent.RaiseOnCustKeyDown(this.parent, custkeydownEvent);
        }
        
        public virtual void DblClick() {
            System.EventArgs dblclickEvent = new System.EventArgs();
            this.parent.RaiseOnDblClick(this.parent, dblclickEvent);
        }
        
        public virtual void Error() {
            System.EventArgs errorEvent = new System.EventArgs();
            this.parent.RaiseOnError(this.parent, errorEvent);
        }
        
        public virtual void KeyDown(ref short keyCode, ref short shift) {
            @__RefEdit_KeyDownEvent keydownEvent = new @__RefEdit_KeyDownEvent(keyCode, shift);
            this.parent.RaiseOnKeyDownEvent(this.parent, keydownEvent);
            keyCode = keydownEvent.keyCode;
            shift = keydownEvent.shift;
        }
        
        public virtual void KeyPress(ref short keyAscii) {
            @__RefEdit_KeyPressEvent keypressEvent = new @__RefEdit_KeyPressEvent(keyAscii);
            this.parent.RaiseOnKeyPressEvent(this.parent, keypressEvent);
            keyAscii = keypressEvent.keyAscii;
        }
        
        public virtual void KeyUp(ref short keyCode, ref short shift) {
            @__RefEdit_KeyUpEvent keyupEvent = new @__RefEdit_KeyUpEvent(keyCode, shift);
            this.parent.RaiseOnKeyUpEvent(this.parent, keyupEvent);
            keyCode = keyupEvent.keyCode;
            shift = keyupEvent.shift;
        }
        
        public virtual void MouseDown(ref short button, ref short shift, ref float x, ref float y) {
            @__RefEdit_MouseDownEvent mousedownEvent = new @__RefEdit_MouseDownEvent(button, shift, x, y);
            this.parent.RaiseOnMouseDownEvent(this.parent, mousedownEvent);
            button = mousedownEvent.button;
            shift = mousedownEvent.shift;
            x = mousedownEvent.x;
            y = mousedownEvent.y;
        }
        
        public virtual void MouseMove(ref short button, ref short shift, ref float x, ref float y) {
            @__RefEdit_MouseMoveEvent mousemoveEvent = new @__RefEdit_MouseMoveEvent(button, shift, x, y);
            this.parent.RaiseOnMouseMoveEvent(this.parent, mousemoveEvent);
            button = mousemoveEvent.button;
            shift = mousemoveEvent.shift;
            x = mousemoveEvent.x;
            y = mousemoveEvent.y;
        }
        
        public virtual void MouseUp(ref short button, ref short shift, ref float x, ref float y) {
            @__RefEdit_MouseUpEvent mouseupEvent = new @__RefEdit_MouseUpEvent(button, shift, x, y);
            this.parent.RaiseOnMouseUpEvent(this.parent, mouseupEvent);
            button = mouseupEvent.button;
            shift = mouseupEvent.shift;
            x = mouseupEvent.x;
            y = mouseupEvent.y;
        }
        
        public virtual void BeforeBrowse(ref string sXMLFilterPara, ref string sSQL, ref bool cancel) {
            @__RefEdit_BeforeBrowseEvent beforebrowseEvent = new @__RefEdit_BeforeBrowseEvent(sXMLFilterPara, sSQL, cancel);
            this.parent.RaiseOnBeforeBrowse(this.parent, beforebrowseEvent);
            sXMLFilterPara = beforebrowseEvent.sXMLFilterPara;
            sSQL = beforebrowseEvent.sSQL;
            cancel = beforebrowseEvent.cancel;
        }
        
        public virtual void BeforeBrowseWeb(ref object sXMLFilterPara, ref object sSQL, ref object cancel) {
            @__RefEdit_BeforeBrowseWebEvent beforebrowsewebEvent = new @__RefEdit_BeforeBrowseWebEvent(sXMLFilterPara, sSQL, cancel);
            this.parent.RaiseOnBeforeBrowseWeb(this.parent, beforebrowsewebEvent);
            sXMLFilterPara = beforebrowsewebEvent.sXMLFilterPara;
            sSQL = beforebrowsewebEvent.sSQL;
            cancel = beforebrowsewebEvent.cancel;
        }
        
        public virtual void AfterBrowse(ref ADODB.Recordset rstClass, ref ADODB.Recordset rstGrid, ref string sXML) {
            @__RefEdit_AfterBrowseEvent afterbrowseEvent = new @__RefEdit_AfterBrowseEvent(rstClass, rstGrid, sXML);
            this.parent.RaiseOnAfterBrowse(this.parent, afterbrowseEvent);
            rstClass = afterbrowseEvent.rstClass;
            rstGrid = afterbrowseEvent.rstGrid;
            sXML = afterbrowseEvent.sXML;
        }
        
        public virtual void GetFilterRefing(ref string sXMLFilter) {
            @__RefEdit_GetFilterRefingEvent getfilterrefingEvent = new @__RefEdit_GetFilterRefingEvent(sXMLFilter);
            this.parent.RaiseOnGetFilterRefing(this.parent, getfilterrefingEvent);
            sXMLFilter = getfilterrefingEvent.sXMLFilter;
        }
        
        public virtual void FillData(ref ADODB.Recordset rstClass, ref ADODB.Recordset rstGrid, ref string sXML) {
            @__RefEdit_FillDataEvent filldataEvent = new @__RefEdit_FillDataEvent(rstClass, rstGrid, sXML);
            this.parent.RaiseOnFillData(this.parent, filldataEvent);
            rstClass = filldataEvent.rstClass;
            rstGrid = filldataEvent.rstGrid;
            sXML = filldataEvent.sXML;
        }
        
        public virtual void UFValidate(ref bool cancle) {
            @__RefEdit_UFValidateEvent ufvalidateEvent = new @__RefEdit_UFValidateEvent(cancle);
            this.parent.RaiseOnUFValidate(this.parent, ufvalidateEvent);
            cancle = ufvalidateEvent.cancle;
        }
        
        public virtual void UserBrowse(ref string sXML) {
            @__RefEdit_UserBrowseEvent userbrowseEvent = new @__RefEdit_UserBrowseEvent(sXML);
            this.parent.RaiseOnUserBrowse(this.parent, userbrowseEvent);
            sXML = userbrowseEvent.sXML;
        }
        
        public virtual void TextChange() {
            System.EventArgs textchangeEvent = new System.EventArgs();
            this.parent.RaiseOnTextChange(this.parent, textchangeEvent);
        }
    }
}
