//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Reflection.AssemblyVersion("2.83.0.0")]
[assembly: System.Windows.Forms.AxHost.TypeLibraryTimeStamp("12/22/2017 11:04:08")]

namespace AxU8VouchList {
    
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{e03cb2a4-92f2-4e8c-8f89-342dffcd09ee}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("ClickEvent")]
    public class AxVouchList : System.Windows.Forms.AxHost {
        
        private U8VouchList._VouchList ocx;
        
        private AxVouchListEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxVouchList() : 
                base("e03cb2a4-92f2-4e8c-8f89-342dffcd09ee") {
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027090)]
        public virtual bool LocateState {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LocateState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LocateState;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027089)]
        public virtual string Title {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Title", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Title;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Title", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Title = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027088)]
        public virtual int Row {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Row", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Row;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Row", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Row = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027087)]
        public virtual int col {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("col", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.col;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("col", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.col = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027086)]
        public virtual int rows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("rows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.rows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("rows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.rows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027085)]
        public virtual int Cols {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Cols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Cols;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Cols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Cols = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027084)]
        public virtual int FixedRows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FixedRows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FixedRows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027083)]
        public virtual int FixedCols {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FixedCols;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixedCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FixedCols = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027080)]
        public virtual int TopRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TopRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.TopRow;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("TopRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.TopRow = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027079)]
        public virtual U8VouchList.SumStyleEum SumStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SumStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SumStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SumStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SumStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027078)]
        public virtual int pageSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("pageSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.pageSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("pageSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.pageSize = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027077)]
        public virtual U8VouchList.FillModeEnum FillMode {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FillMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FillMode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027076)]
        public virtual int RecordCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RecordCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RecordCount;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RecordCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.RecordCount = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027075)]
        public virtual bool ShowSelCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowSelCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowSelCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowSelCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowSelCol = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027074)]
        public virtual string LocWhere {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LocWhere", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LocWhere = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027073)]
        public virtual U8VouchList.SearchEum LocDirection {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LocDirection", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LocDirection = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027291)]
        public virtual int FrozenCols {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FrozenCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FrozenCols;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FrozenCols", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FrozenCols = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027391)]
        public virtual bool ReadOnly {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReadOnly", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ReadOnly;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReadOnly", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ReadOnly = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027489)]
        public virtual int BottomRow {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BottomRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BottomRow;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027488)]
        public virtual int LeftCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LeftCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LeftCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LeftCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LeftCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027487)]
        public virtual int RightCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RightCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RightCol;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027491)]
        public virtual VSFlex8U.MousePointerSettings MousePointer {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MousePointer", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MousePointer;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MousePointer", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MousePointer = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027493)]
        public virtual bool EditLocked {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditLocked", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.EditLocked;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("EditLocked", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.EditLocked = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027618)]
        public virtual int SortCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SortCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SortCol;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027617)]
        public virtual bool SortASC {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SortASC", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SortASC;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027620)]
        public virtual bool ShiftUpDown {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShiftUpDown", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShiftUpDown;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShiftUpDown", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShiftUpDown = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027619)]
        public virtual int SumRows {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SumRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SumRows;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SumRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SumRows = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027976)]
        public virtual VSFlex8U.MergeSettings MergeCells {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MergeCells", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MergeCells;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MergeCells", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MergeCells = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027979)]
        public virtual bool IsNeedFormat {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsNeedFormat", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsNeedFormat;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsNeedFormat", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsNeedFormat = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027981)]
        public virtual bool AdvanceFilterEnabled {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AdvanceFilterEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AdvanceFilterEnabled;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AdvanceFilterEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AdvanceFilterEnabled = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027983)]
        public virtual bool ListSortEnabled {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListSortEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ListSortEnabled;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListSortEnabled", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ListSortEnabled = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027989)]
        public virtual bool FltState {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FltState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FltState;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FltState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FltState = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027988)]
        public virtual bool PageDivState {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageDivState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageDivState;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageDivState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageDivState = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027987)]
        public virtual bool IsSelectAll {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsSelectAll", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsSelectAll;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsSelectAll", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsSelectAll = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027986)]
        public virtual int AlternateBackColor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AlternateBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AlternateBackColor;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AlternateBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AlternateBackColor = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027985)]
        public virtual string ListCustomShortInfo {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListCustomShortInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ListCustomShortInfo;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListCustomShortInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ListCustomShortInfo = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028000)]
        public virtual bool IsFltVerticalDisplay {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsFltVerticalDisplay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsFltVerticalDisplay;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsFltVerticalDisplay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsFltVerticalDisplay = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028004)]
        public virtual bool FltSolutionVisiable {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FltSolutionVisiable", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FltSolutionVisiable;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FltSolutionVisiable", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FltSolutionVisiable = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028014)]
        public virtual string CurrentSolutionId {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CurrentSolutionId", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CurrentSolutionId;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CurrentSolutionId", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CurrentSolutionId = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028013)]
        public virtual string CurrentSolutionName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CurrentSolutionName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CurrentSolutionName;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073939460)]
        public virtual object fltOcx {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("fltOcx", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.fltOcx;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("fltOcx", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.fltOcx = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028102)]
        public virtual ADODBV28.Recordset GetSolutionList {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSolutionList", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.GetSolutionList;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028107)]
        public virtual string HiddenTotalView {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HiddenTotalView", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HiddenTotalView = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028110)]
        public virtual bool HiddenRefreshView {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HiddenRefreshView", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HiddenRefreshView = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028111)]
        public virtual int DefTitleHeight {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DefTitleHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DefTitleHeight;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028130)]
        public virtual bool HiddenPageDiv {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HiddenPageDiv", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HiddenPageDiv = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028137)]
        public virtual string FormCode {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FormCode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FormCode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028139)]
        public virtual string GetListKey {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetListKey", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.GetListKey;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028280)]
        public virtual bool ColPosChanged {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColPosChanged", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ColPosChanged;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028286)]
        public virtual bool HiddenFoldView {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HiddenFoldView", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HiddenFoldView = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028287)]
        public virtual object ColSetObj {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ColSetObj", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ColSetObj = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028291)]
        public virtual bool ConditionState {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ConditionState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ConditionState = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028293)]
        public virtual bool NoSetColumnDisplay {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("NoSetColumnDisplay", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.NoSetColumnDisplay = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028448)]
        public virtual int OutLineCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OutLineCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.OutLineCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("OutLineCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.OutLineCol = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028450)]
        public virtual bool IsRowOutLinePrintChild {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsRowOutLinePrintChild", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsRowOutLinePrintChild = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028614)]
        public virtual short SupportRowOutlineSumType {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SupportRowOutlineSumType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SupportRowOutlineSumType = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028616)]
        public virtual short IsSubLinkageParentSelRow {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsSubLinkageParentSelRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsSubLinkageParentSelRow = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028618)]
        public virtual bool Unbound {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Unbound", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Unbound = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028781)]
        public virtual short RowOutLineType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowOutLineType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.RowOutLineType;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745028783)]
        public virtual short IsSelRowOperate {
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsSelRowOperate", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsSelRowOperate = value;
            }
        }
        
        public event System.EventHandler ClickEvent;
        
        public event System.EventHandler DblClick;
        
        public event @__VouchList_MouseDownEventHandler MouseDownEvent;
        
        public event @__VouchList_MouseUpEventHandler MouseUpEvent;
        
        public event @__VouchList_KeyDownEventHandler KeyDownEvent;
        
        public event @__VouchList_KeyPressEventHandler KeyPressEvent;
        
        public event @__VouchList_KeyUpEventHandler KeyUpEvent;
        
        public event System.EventHandler Scroll;
        
        public event @__VouchList_SelectClickEventHandler SelectClick;
        
        public event @__VouchList_SelectClick2EventHandler SelectClick2;
        
        public event @__VouchList_PrintSettingChangedEventHandler PrintSettingChanged;
        
        public event @__VouchList_CellValueChangedEventHandler CellValueChanged;
        
        public event System.EventHandler ResizeEvent;
        
        public event @__VouchList_BrowUserEventHandler BrowUser;
        
        public event @__VouchList_FillListEventHandler FillListEvent;
        
        public event @__VouchList_BeforeSortEventHandler BeforeSort;
        
        public event @__VouchList_AfterSortEventHandler AfterSort;
        
        public event @__VouchList_BeforeSort2EventHandler BeforeSort2;
        
        public event @__VouchList_BeforeEditEventHandler BeforeEdit;
        
        public event @__VouchList_BatchModifyEventHandler BatchModify;
        
        public event @__VouchList_IsAllowBatchModifyEventHandler IsAllowBatchModify;
        
        public event @__VouchList_RowDataCheckEventHandler RowDataCheck;
        
        public event @__VouchList_RowDataCheckForWebEventHandler RowDataCheckForWeb;
        
        public event System.EventHandler RowColChange;
        
        public event System.EventHandler SelChange;
        
        public event @__VouchList_FilterClickEventHandler FilterClick;
        
        public event @__VouchList_BeforeSendCommandEventHandler BeforeSendCommand;
        
        public event @__VouchList_CopySelectEventHandler CopySelect;
        
        public event @__VouchList_SelectAllEventHandler SelectAll;
        
        public event System.EventHandler AfterColumnsDisplayRule;
        
        public event @__VouchList_BeforeShowLinkQueryEventHandler BeforeShowLinkQuery;
        
        public event @__VouchList_BeforeBatchPrintToFileEventHandler BeforeBatchPrintToFile;
        
        public event @__VouchList_BeforeAutoFilterEventHandler BeforeAutoFilter;
        
        public virtual bool MergeFullList(ref bool bMerge) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MergeFullList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.MergeFullList(ref bMerge)));
            return returnValue;
        }
        
        public virtual void VchLstBatchPrintToFile() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VchLstBatchPrintToFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.VchLstBatchPrintToFile();
        }
        
        public virtual string GetEnumValuesbyType(string sType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetEnumValuesbyType", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetEnumValuesbyType(sType)));
            return returnValue;
        }
        
        public virtual bool SetCellBinaryStreamPicture(object m_Login, int row, int col, object thumbnail, string sGUID) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetCellBinaryStreamPicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SetCellBinaryStreamPicture(m_Login, row, col, thumbnail, sGUID)));
            return returnValue;
        }
        
        public virtual string get_TextMatrixEx(int row, object col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TextMatrixEx", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_TextMatrixEx(row, col)));
            return returnValue;
        }
        
        public virtual object SetAllColor(ref bool bClear) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetAllColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetAllColor(ref bClear)));
            return returnValue;
        }
        
        public virtual int GetSelRows() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetSelRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetSelRows()));
            return returnValue;
        }
        
        public virtual void set_LinkType(ref short param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_LinkType", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_LinkType(ref param0);
        }
        
        public virtual void RowOutLineSetStyle() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RowOutLineSetStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RowOutLineSetStyle();
        }
        
        public virtual void SetRowOutLineType() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetRowOutLineType", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    ((short)(0))};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("SetRowOutLineType");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void SetRowOutLineType(ref short iRowOutLineType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetRowOutLineType", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetRowOutLineType(ref iRowOutLineType);
        }
        
        public virtual void ShowBatchModify() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowBatchModify", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ShowBatchModify();
        }
        
        public virtual object get_LoginObj() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_LoginObj", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.get_LoginObj()));
            return returnValue;
        }
        
        public virtual void set_LoginObj(ref object param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_LoginObj", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_LoginObj(ref param0);
        }
        
        public virtual void ReadOnlyTextMatrix(bool bReadOnly, string sIndex, int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ReadOnlyTextMatrix", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ReadOnlyTextMatrix(bReadOnly, sIndex, row);
        }
        
        public virtual void CalcSum() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CalcSum", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CalcSum();
        }
        
        public virtual string get_TextMatrixName(int row, int col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TextMatrixName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_TextMatrixName(row, col)));
            return returnValue;
        }
        
        public virtual bool get_IsSumSelectedRows() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_IsSumSelectedRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_IsSumSelectedRows()));
            return returnValue;
        }
        
        public virtual void set_IsSumSelectedRows(ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_IsSumSelectedRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_IsSumSelectedRows(ref param0);
        }
        
        public virtual int get_ColPoint(string cFld) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColPoint", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_ColPoint(cFld)));
            return returnValue;
        }
        
        public virtual void set_ColPoint(string cFld, int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColPoint", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColPoint(cFld, param0);
        }
        
        public virtual void Dispose() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Dispose", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Dispose();
        }
        
        public virtual void ClearDataSource() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ClearDataSource", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ClearDataSource();
        }
        
        public virtual void AutoWordWrap() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoWordWrap", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AutoWordWrap();
        }
        
        public virtual string GetColumnWidthXML() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetColumnWidthXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetColumnWidthXML()));
            return returnValue;
        }
        
        public virtual string GetPrintFormatXML() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetPrintFormatXML", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetPrintFormatXML()));
            return returnValue;
        }
        
        public virtual void GetPrintData(ref string sFilePath, ref string sData) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetPrintData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.GetPrintData(ref sFilePath, ref sData);
        }
        
        public virtual bool get_MergeRow(int index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_MergeRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_MergeRow(index)));
            return returnValue;
        }
        
        public virtual void set_MergeRow(int index, bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_MergeRow", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_MergeRow(index, param0);
        }
        
        public virtual bool get_MergeCol(int index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_MergeCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_MergeCol(index)));
            return returnValue;
        }
        
        public virtual void set_MergeCol(int index, bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_MergeCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_MergeCol(index, param0);
        }
        
        public virtual void set_ColTextWidth(int index, int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColTextWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColTextWidth(index, param0);
        }
        
        public virtual int get_ColTextWidth(int index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColTextWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_ColTextWidth(index)));
            return returnValue;
        }
        
        public virtual bool BindPagediv(ref U8VouchList.Pagediv pdiv) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BindPagediv", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.BindPagediv(ref pdiv)));
            return returnValue;
        }
        
        public virtual bool UnBindPagediv() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UnBindPagediv", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.UnBindPagediv()));
            return returnValue;
        }
        
        public virtual bool ShowAll() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowAll", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.ShowAll()));
            return returnValue;
        }
        
        public virtual bool AutoFilter(ref bool bFilter) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.AutoFilter(ref bFilter)));
            return returnValue;
        }
        
        public virtual bool AutoSizeMode(ref bool bAutoSize) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AutoSizeMode", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.AutoSizeMode(ref bAutoSize)));
            return returnValue;
        }
        
        public virtual object InitFlt(object m_Login, object oFilterSrv, string sFilterID) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InitFlt", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    m_Login,
                    oFilterSrv,
                    sFilterID,
                    "",
                    "",
                    System.Reflection.Missing.Value,
                    ((bool)(false))};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("InitFlt");
            object returnValue = ((object)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual object InitFlt(object m_Login, object oFilterSrv, string sFilterID, string sReportName, string sSubID, ref object errinfo, ref bool hiddenFilter) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InitFlt", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.InitFlt(m_Login, oFilterSrv, sFilterID, sReportName, sSubID, ref errinfo, ref hiddenFilter)));
            return returnValue;
        }
        
        public virtual int GetListPartHeight(short section) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetListPartHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetListPartHeight(section)));
            return returnValue;
        }
        
        public virtual void SimpleFilter() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SimpleFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SimpleFilter();
        }
        
        public virtual bool SetColumnsDisplayRules(ref object mLogin, MSXML2.IXMLDOMDocument2 ruleMeta) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetColumnsDisplayRules", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    mLogin,
                    ruleMeta,
                    ""};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("SetColumnsDisplayRules");
            bool returnValue = ((bool)(methodToInvoke.Invoke(this.ocx, paramArray)));
            mLogin = ((object)(paramArray[0]));
            return returnValue;
        }
        
        public virtual bool SetColumnsDisplayRules(ref object mLogin, MSXML2.IXMLDOMDocument2 ruleMeta, ref string errMsg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetColumnsDisplayRules", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SetColumnsDisplayRules(ref mLogin, ruleMeta, ref errMsg)));
            return returnValue;
        }
        
        public virtual Scripting.Dictionary GetPKeyFldList(bool bSelect) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetPKeyFldList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    bSelect,
                    ""};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("GetPKeyFldList");
            Scripting.Dictionary returnValue = ((Scripting.Dictionary)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual Scripting.Dictionary GetPKeyFldList(bool bSelect, ref string sVouchKeyName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetPKeyFldList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            Scripting.Dictionary returnValue = ((Scripting.Dictionary)(this.ocx.GetPKeyFldList(bSelect, ref sVouchKeyName)));
            return returnValue;
        }
        
        public virtual object GetDisplayRules() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetDisplayRules", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    ""};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("GetDisplayRules");
            object returnValue = ((object)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual object GetDisplayRules(string sWhere) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetDisplayRules", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.GetDisplayRules(sWhere)));
            return returnValue;
        }
        
        public virtual bool ShowVoucherDesign(string sCardNum, string svt_id) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowVoucherDesign", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    sCardNum,
                    svt_id,
                    "",
                    System.Reflection.Missing.Value,
                    ((bool)(true))};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("ShowVoucherDesign");
            bool returnValue = ((bool)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual bool ShowVoucherDesign(string sCardNum, string svt_id, string sSubID, ref object modal, bool bToggle) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowVoucherDesign", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.ShowVoucherDesign(sCardNum, svt_id, sSubID, ref modal, bToggle)));
            return returnValue;
        }
        
        public virtual void MoreFilter() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoreFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.MoreFilter();
        }
        
        public virtual void set_HideTitleCaption(ref bool param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_HideTitleCaption", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_HideTitleCaption(ref param0);
        }
        
        public virtual void SetTitleHeight(ref int lheight) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetTitleHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetTitleHeight(ref lheight);
        }
        
        public virtual string GetResString(ref string strRes) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetResString", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    strRes,
                    System.Reflection.Missing.Value};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("GetResString");
            string returnValue = ((string)(methodToInvoke.Invoke(this.ocx, paramArray)));
            strRes = ((string)(paramArray[0]));
            return returnValue;
        }
        
        public virtual string GetResString(ref string strRes, ref object argArr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetResString", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetResString(ref strRes, ref argArr)));
            return returnValue;
        }
        
        public virtual Scripting.Dictionary GetListLayoutInfo(string sFunctionKey, string sMenuButtonKey) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetListLayoutInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            Scripting.Dictionary returnValue = ((Scripting.Dictionary)(this.ocx.GetListLayoutInfo(sFunctionKey, sMenuButtonKey)));
            return returnValue;
        }
        
        public virtual object SetListLayoutInfo(ref object mLogin, string sFunctionKey, string sMenuButtonKey, short iSetValue) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetListLayoutInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    mLogin,
                    sFunctionKey,
                    sMenuButtonKey,
                    iSetValue,
                    ""};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("SetListLayoutInfo");
            object returnValue = ((object)(methodToInvoke.Invoke(this.ocx, paramArray)));
            mLogin = ((object)(paramArray[0]));
            return returnValue;
        }
        
        public virtual object SetListLayoutInfo(ref object mLogin, string sFunctionKey, string sMenuButtonKey, short iSetValue, ref string errMsg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetListLayoutInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetListLayoutInfo(ref mLogin, sFunctionKey, sMenuButtonKey, iSetValue, ref errMsg)));
            return returnValue;
        }
        
        public virtual string ConvertDataType(string cDataType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ConvertDataType", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.ConvertDataType(cDataType, ((short)(0)))));
            return returnValue;
        }
        
        public virtual string ConvertDataType(string cDataType, short iDirect) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ConvertDataType", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.ConvertDataType(cDataType, iDirect)));
            return returnValue;
        }
        
        public virtual void AddItem4New(string item) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddItem4New", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    item,
                    ((int)(0))};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("AddItem4New");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void AddItem4New(string item, int index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddItem4New", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AddItem4New(item, index);
        }
        
        public virtual string get_TextMatrix(int row, int col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_TextMatrix", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.get_TextMatrix(row, col)));
            return returnValue;
        }
        
        public virtual void set_TextMatrix(int row, int col, string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_TextMatrix", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_TextMatrix(row, col, param0);
        }
        
        public virtual int get_ColWidth(int index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    index,
                    ((int)(0))};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("get_ColWidth");
            int returnValue = ((int)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual int get_ColWidth(int index, int bandNumber) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_ColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_ColWidth(index, bandNumber)));
            return returnValue;
        }
        
        public virtual void set_ColWidth(int index, int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    index,
                    ((int)(0)),
                    param0};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("set_ColWidth");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void set_ColWidth(int index, int bandNumber, int param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ColWidth(index, bandNumber, param0);
        }
        
        public virtual object InitHead(string sHeadXml) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InitHead", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    sHeadXml,
                    ((bool)(false))};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("InitHead");
            object returnValue = ((object)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual object InitHead(string sHeadXml, ref bool reInit) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InitHead", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.InitHead(sHeadXml, ref reInit)));
            return returnValue;
        }
        
        public virtual object SetVchLstRst(ref object rsBody) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetVchLstRst", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetVchLstRst(ref rsBody)));
            return returnValue;
        }
        
        public virtual object SetSumRst(ref object rsSum) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetSumRst", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetSumRst(ref rsSum)));
            return returnValue;
        }
        
        public virtual void SetFormatString(string fldname, string formatString) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetFormatString", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetFormatString(fldname, formatString);
        }
        
        public virtual void DoFormat() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DoFormat", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DoFormat();
        }
        
        public virtual void Locate(bool locState) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Locate", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Locate(locState);
        }
        
        public virtual object Find() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Find", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.Find()));
            return returnValue;
        }
        
        public virtual void AddItem(string item) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    item,
                    ((int)(0))};
            System.Type typeVar = typeof(U8VouchList._VouchList);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("AddItem");
            methodToInvoke.Invoke(this.ocx, paramArray);
        }
        
        public virtual void AddItem(string item, int index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AddItem(item, index);
        }
        
        public virtual void RemoveItem(object index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RemoveItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RemoveItem(index);
        }
        
        public virtual void HideCaption() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HideCaption", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.HideCaption();
        }
        
        public virtual void AllSelect() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllSelect", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AllSelect();
        }
        
        public virtual void AllNone() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllNone", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AllNone();
        }
        
        public virtual void InitPrintSetup(string sXML) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("InitPrintSetup", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.InitPrintSetup(sXML);
        }
        
        public virtual void SetPrintOtherInfo(string sXML) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetPrintOtherInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetPrintOtherInfo(sXML);
        }
        
        public virtual void VchLstPrintSetup() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VchLstPrintSetup", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.VchLstPrintSetup();
        }
        
        public virtual void VchLstPrint() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VchLstPrint", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.VchLstPrint();
        }
        
        public virtual void VchLstPreview() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VchLstPreview", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.VchLstPreview();
        }
        
        public virtual void VchLstPrintToFile() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("VchLstPrintToFile", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.VchLstPrintToFile();
        }
        
        public virtual bool SaveColWidth(ref object sXML) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SaveColWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SaveColWidth(ref sXML)));
            return returnValue;
        }
        
        public virtual void SetCellBackColor(int r, int c, ref int color) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetCellBackColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetCellBackColor(r, c, ref color);
        }
        
        public virtual void SetCellForeColor(int r, int c, ref int color) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetCellForeColor", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetCellForeColor(r, c, ref color);
        }
        
        public virtual void SetCellFontName(int r, int c, ref string fontName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetCellFontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetCellFontName(r, c, ref fontName);
        }
        
        public virtual void CellFontBold(int r, int c, ref bool bBold) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CellFontBold", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CellFontBold(r, c, ref bBold);
        }
        
        public virtual void FillList(ref MSXML2.IXMLDOMDocument2 oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FillList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.FillList(ref oDom);
        }
        
        public virtual void AdJustGridWidth() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AdJustGridWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AdJustGridWidth();
        }
        
        public virtual int getPageRows() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("getPageRows", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.getPageRows()));
            return returnValue;
        }
        
        public virtual int GetColPos(string colName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetColPos", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetColPos(colName)));
            return returnValue;
        }
        
        public virtual void SetFieldRevisable(ref object index, bool fEnabled) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetFieldRevisable", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetFieldRevisable(ref index, fEnabled);
        }
        
        public virtual U8VouchList.clsItem get_FieldItem(ref object index) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_FieldItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            U8VouchList.clsItem returnValue = ((U8VouchList.clsItem)(this.ocx.get_FieldItem(ref index)));
            return returnValue;
        }
        
        public virtual object GetEditControl() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetEditControl", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.GetEditControl()));
            return returnValue;
        }
        
        public virtual object GetGridBody() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetGridBody", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.GetGridBody()));
            return returnValue;
        }
        
        public virtual int get_GridColIndex(ref string key) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_GridColIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.get_GridColIndex(ref key)));
            return returnValue;
        }
        
        public virtual void DisableTextMatrix(bool bDisable, string sIndex, int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisableTextMatrix", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DisableTextMatrix(bDisable, sIndex, row);
        }
        
        public virtual MSXML2.IXMLDOMDocument2 GetListDom(bool bSelect) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetListDom", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MSXML2.IXMLDOMDocument2 returnValue = ((MSXML2.IXMLDOMDocument2)(this.ocx.GetListDom(bSelect)));
            return returnValue;
        }
        
        public virtual bool SetListDom(MSXML2.IXMLDOMDocument2 oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetListDom", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.SetListDom(oDom)));
            return returnValue;
        }
        
        public virtual MSXML2.IXMLDOMDocument2 GetHeadLine() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetHeadLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MSXML2.IXMLDOMDocument2 returnValue = ((MSXML2.IXMLDOMDocument2)(this.ocx.GetHeadLine()));
            return returnValue;
        }
        
        public virtual MSXML2.IXMLDOMDocument2 GetBodyLine(int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetBodyLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MSXML2.IXMLDOMDocument2 returnValue = ((MSXML2.IXMLDOMDocument2)(this.ocx.GetBodyLine(row)));
            return returnValue;
        }
        
        public virtual bool AddLine(int row, MSXML2.IXMLDOMDocument2 oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.AddLine(row, oDom)));
            return returnValue;
        }
        
        public virtual bool UpdateLine(int row, MSXML2.IXMLDOMDocument2 oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UpdateLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.UpdateLine(row, oDom)));
            return returnValue;
        }
        
        public virtual int GetColIndex(string colName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetColIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetColIndex(colName)));
            return returnValue;
        }
        
        public virtual string GetColName(int colIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetColName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetColName(colIndex)));
            return returnValue;
        }
        
        public virtual bool AddSumLine(int row, MSXML2.IXMLDOMDocument2 oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddSumLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.AddSumLine(row, oDom)));
            return returnValue;
        }
        
        public virtual MsSuperGrid.OpType ProtectUnload() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ProtectUnload", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MsSuperGrid.OpType returnValue = ((MsSuperGrid.OpType)(this.ocx.ProtectUnload()));
            return returnValue;
        }
        
        public virtual object SetCellFocus(int row, int col) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetCellFocus", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetCellFocus(row, col)));
            return returnValue;
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxVouchListEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(U8VouchList.@__VouchList));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((U8VouchList._VouchList)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnClickEvent(object sender, System.EventArgs e) {
            if ((this.ClickEvent != null)) {
                this.ClickEvent(sender, e);
            }
        }
        
        internal void RaiseOnDblClick(object sender, System.EventArgs e) {
            if ((this.DblClick != null)) {
                this.DblClick(sender, e);
            }
        }
        
        internal void RaiseOnMouseDownEvent(object sender, @__VouchList_MouseDownEvent e) {
            if ((this.MouseDownEvent != null)) {
                this.MouseDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseUpEvent(object sender, @__VouchList_MouseUpEvent e) {
            if ((this.MouseUpEvent != null)) {
                this.MouseUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyDownEvent(object sender, @__VouchList_KeyDownEvent e) {
            if ((this.KeyDownEvent != null)) {
                this.KeyDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyPressEvent(object sender, @__VouchList_KeyPressEvent e) {
            if ((this.KeyPressEvent != null)) {
                this.KeyPressEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyUpEvent(object sender, @__VouchList_KeyUpEvent e) {
            if ((this.KeyUpEvent != null)) {
                this.KeyUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnScroll(object sender, System.EventArgs e) {
            if ((this.Scroll != null)) {
                this.Scroll(sender, e);
            }
        }
        
        internal void RaiseOnSelectClick(object sender, @__VouchList_SelectClickEvent e) {
            if ((this.SelectClick != null)) {
                this.SelectClick(sender, e);
            }
        }
        
        internal void RaiseOnSelectClick2(object sender, @__VouchList_SelectClick2Event e) {
            if ((this.SelectClick2 != null)) {
                this.SelectClick2(sender, e);
            }
        }
        
        internal void RaiseOnPrintSettingChanged(object sender, @__VouchList_PrintSettingChangedEvent e) {
            if ((this.PrintSettingChanged != null)) {
                this.PrintSettingChanged(sender, e);
            }
        }
        
        internal void RaiseOnCellValueChanged(object sender, @__VouchList_CellValueChangedEvent e) {
            if ((this.CellValueChanged != null)) {
                this.CellValueChanged(sender, e);
            }
        }
        
        internal void RaiseOnResizeEvent(object sender, System.EventArgs e) {
            if ((this.ResizeEvent != null)) {
                this.ResizeEvent(sender, e);
            }
        }
        
        internal void RaiseOnBrowUser(object sender, @__VouchList_BrowUserEvent e) {
            if ((this.BrowUser != null)) {
                this.BrowUser(sender, e);
            }
        }
        
        internal void RaiseOnFillListEvent(object sender, @__VouchList_FillListEvent e) {
            if ((this.FillListEvent != null)) {
                this.FillListEvent(sender, e);
            }
        }
        
        internal void RaiseOnBeforeSort(object sender, @__VouchList_BeforeSortEvent e) {
            if ((this.BeforeSort != null)) {
                this.BeforeSort(sender, e);
            }
        }
        
        internal void RaiseOnAfterSort(object sender, @__VouchList_AfterSortEvent e) {
            if ((this.AfterSort != null)) {
                this.AfterSort(sender, e);
            }
        }
        
        internal void RaiseOnBeforeSort2(object sender, @__VouchList_BeforeSort2Event e) {
            if ((this.BeforeSort2 != null)) {
                this.BeforeSort2(sender, e);
            }
        }
        
        internal void RaiseOnBeforeEdit(object sender, @__VouchList_BeforeEditEvent e) {
            if ((this.BeforeEdit != null)) {
                this.BeforeEdit(sender, e);
            }
        }
        
        internal void RaiseOnBatchModify(object sender, @__VouchList_BatchModifyEvent e) {
            if ((this.BatchModify != null)) {
                this.BatchModify(sender, e);
            }
        }
        
        internal void RaiseOnIsAllowBatchModify(object sender, @__VouchList_IsAllowBatchModifyEvent e) {
            if ((this.IsAllowBatchModify != null)) {
                this.IsAllowBatchModify(sender, e);
            }
        }
        
        internal void RaiseOnRowDataCheck(object sender, @__VouchList_RowDataCheckEvent e) {
            if ((this.RowDataCheck != null)) {
                this.RowDataCheck(sender, e);
            }
        }
        
        internal void RaiseOnRowDataCheckForWeb(object sender, @__VouchList_RowDataCheckForWebEvent e) {
            if ((this.RowDataCheckForWeb != null)) {
                this.RowDataCheckForWeb(sender, e);
            }
        }
        
        internal void RaiseOnRowColChange(object sender, System.EventArgs e) {
            if ((this.RowColChange != null)) {
                this.RowColChange(sender, e);
            }
        }
        
        internal void RaiseOnSelChange(object sender, System.EventArgs e) {
            if ((this.SelChange != null)) {
                this.SelChange(sender, e);
            }
        }
        
        internal void RaiseOnFilterClick(object sender, @__VouchList_FilterClickEvent e) {
            if ((this.FilterClick != null)) {
                this.FilterClick(sender, e);
            }
        }
        
        internal void RaiseOnBeforeSendCommand(object sender, @__VouchList_BeforeSendCommandEvent e) {
            if ((this.BeforeSendCommand != null)) {
                this.BeforeSendCommand(sender, e);
            }
        }
        
        internal void RaiseOnCopySelect(object sender, @__VouchList_CopySelectEvent e) {
            if ((this.CopySelect != null)) {
                this.CopySelect(sender, e);
            }
        }
        
        internal void RaiseOnSelectAll(object sender, @__VouchList_SelectAllEvent e) {
            if ((this.SelectAll != null)) {
                this.SelectAll(sender, e);
            }
        }
        
        internal void RaiseOnAfterColumnsDisplayRule(object sender, System.EventArgs e) {
            if ((this.AfterColumnsDisplayRule != null)) {
                this.AfterColumnsDisplayRule(sender, e);
            }
        }
        
        internal void RaiseOnBeforeShowLinkQuery(object sender, @__VouchList_BeforeShowLinkQueryEvent e) {
            if ((this.BeforeShowLinkQuery != null)) {
                this.BeforeShowLinkQuery(sender, e);
            }
        }
        
        internal void RaiseOnBeforeBatchPrintToFile(object sender, @__VouchList_BeforeBatchPrintToFileEvent e) {
            if ((this.BeforeBatchPrintToFile != null)) {
                this.BeforeBatchPrintToFile(sender, e);
            }
        }
        
        internal void RaiseOnBeforeAutoFilter(object sender, @__VouchList_BeforeAutoFilterEvent e) {
            if ((this.BeforeAutoFilter != null)) {
                this.BeforeAutoFilter(sender, e);
            }
        }
    }
    
    public delegate void @__VouchList_MouseDownEventHandler(object sender, @__VouchList_MouseDownEvent e);
    
    public class @__VouchList_MouseDownEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__VouchList_MouseDownEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__VouchList_MouseUpEventHandler(object sender, @__VouchList_MouseUpEvent e);
    
    public class @__VouchList_MouseUpEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__VouchList_MouseUpEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__VouchList_KeyDownEventHandler(object sender, @__VouchList_KeyDownEvent e);
    
    public class @__VouchList_KeyDownEvent {
        
        public short keyCode;
        
        public short shift;
        
        public @__VouchList_KeyDownEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void @__VouchList_KeyPressEventHandler(object sender, @__VouchList_KeyPressEvent e);
    
    public class @__VouchList_KeyPressEvent {
        
        public short keyAscii;
        
        public @__VouchList_KeyPressEvent(short keyAscii) {
            this.keyAscii = keyAscii;
        }
    }
    
    public delegate void @__VouchList_KeyUpEventHandler(object sender, @__VouchList_KeyUpEvent e);
    
    public class @__VouchList_KeyUpEvent {
        
        public short keyCode;
        
        public short shift;
        
        public @__VouchList_KeyUpEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void @__VouchList_SelectClickEventHandler(object sender, @__VouchList_SelectClickEvent e);
    
    public class @__VouchList_SelectClickEvent {
        
        public bool selected;
        
        public @__VouchList_SelectClickEvent(bool selected) {
            this.selected = selected;
        }
    }
    
    public delegate void @__VouchList_SelectClick2EventHandler(object sender, @__VouchList_SelectClick2Event e);
    
    public class @__VouchList_SelectClick2Event {
        
        public bool selected;
        
        public int row;
        
        public @__VouchList_SelectClick2Event(bool selected, int row) {
            this.selected = selected;
            this.row = row;
        }
    }
    
    public delegate void @__VouchList_PrintSettingChangedEventHandler(object sender, @__VouchList_PrintSettingChangedEvent e);
    
    public class @__VouchList_PrintSettingChangedEvent {
        
        public object varLocalSettings;
        
        public object varModuleSettings;
        
        public @__VouchList_PrintSettingChangedEvent(object varLocalSettings, object varModuleSettings) {
            this.varLocalSettings = varLocalSettings;
            this.varModuleSettings = varModuleSettings;
        }
    }
    
    public delegate void @__VouchList_CellValueChangedEventHandler(object sender, @__VouchList_CellValueChangedEvent e);
    
    public class @__VouchList_CellValueChangedEvent {
        
        public short row;
        
        public short col;
        
        public object newValue;
        
        public object oldValue;
        
        public bool keepFocus;
        
        public @__VouchList_CellValueChangedEvent(short row, short col, object newValue, object oldValue, bool keepFocus) {
            this.row = row;
            this.col = col;
            this.newValue = newValue;
            this.oldValue = oldValue;
            this.keepFocus = keepFocus;
        }
    }
    
    public delegate void @__VouchList_BrowUserEventHandler(object sender, @__VouchList_BrowUserEvent e);
    
    public class @__VouchList_BrowUserEvent {
        
        public object retValue;
        
        public int row;
        
        public int col;
        
        public @__VouchList_BrowUserEvent(object retValue, int row, int col) {
            this.retValue = retValue;
            this.row = row;
            this.col = col;
        }
    }
    
    public delegate void @__VouchList_FillListEventHandler(object sender, @__VouchList_FillListEvent e);
    
    public class @__VouchList_FillListEvent {
        
        public int r;
        
        public int c;
        
        public object pCom;
        
        public @__VouchList_FillListEvent(int r, int c, object pCom) {
            this.r = r;
            this.c = c;
            this.pCom = pCom;
        }
    }
    
    public delegate void @__VouchList_BeforeSortEventHandler(object sender, @__VouchList_BeforeSortEvent e);
    
    public class @__VouchList_BeforeSortEvent {
        
        public int col;
        
        public bool bAsc;
        
        public @__VouchList_BeforeSortEvent(int col, bool bAsc) {
            this.col = col;
            this.bAsc = bAsc;
        }
    }
    
    public delegate void @__VouchList_AfterSortEventHandler(object sender, @__VouchList_AfterSortEvent e);
    
    public class @__VouchList_AfterSortEvent {
        
        public int col;
        
        public bool bAsc;
        
        public @__VouchList_AfterSortEvent(int col, bool bAsc) {
            this.col = col;
            this.bAsc = bAsc;
        }
    }
    
    public delegate void @__VouchList_BeforeSort2EventHandler(object sender, @__VouchList_BeforeSort2Event e);
    
    public class @__VouchList_BeforeSort2Event {
        
        public bool bSort;
        
        public int col;
        
        public bool bAsc;
        
        public @__VouchList_BeforeSort2Event(bool bSort, int col, bool bAsc) {
            this.bSort = bSort;
            this.col = col;
            this.bAsc = bAsc;
        }
    }
    
    public delegate void @__VouchList_BeforeEditEventHandler(object sender, @__VouchList_BeforeEditEvent e);
    
    public class @__VouchList_BeforeEditEvent {
        
        public bool cancel;
        
        public @__VouchList_BeforeEditEvent(bool cancel) {
            this.cancel = cancel;
        }
    }
    
    public delegate void @__VouchList_BatchModifyEventHandler(object sender, @__VouchList_BatchModifyEvent e);
    
    public class @__VouchList_BatchModifyEvent {
        
        public string sItemXML;
        
        public @__VouchList_BatchModifyEvent(string sItemXML) {
            this.sItemXML = sItemXML;
        }
    }
    
    public delegate void @__VouchList_IsAllowBatchModifyEventHandler(object sender, @__VouchList_IsAllowBatchModifyEvent e);
    
    public class @__VouchList_IsAllowBatchModifyEvent {
        
        public bool bCanModify;
        
        public int row;
        
        public string colkey;
        
        public @__VouchList_IsAllowBatchModifyEvent(bool bCanModify, int row, string colkey) {
            this.bCanModify = bCanModify;
            this.row = row;
            this.colkey = colkey;
        }
    }
    
    public delegate void @__VouchList_RowDataCheckEventHandler(object sender, @__VouchList_RowDataCheckEvent e);
    
    public class @__VouchList_RowDataCheckEvent {
        
        public MsSuperGrid.OpType retState;
        
        public int r;
        
        public int iCol;
        
        public @__VouchList_RowDataCheckEvent(MsSuperGrid.OpType retState, int r, int iCol) {
            this.retState = retState;
            this.r = r;
            this.iCol = iCol;
        }
    }
    
    public delegate void @__VouchList_RowDataCheckForWebEventHandler(object sender, @__VouchList_RowDataCheckForWebEvent e);
    
    public class @__VouchList_RowDataCheckForWebEvent {
        
        public object retState;
        
        public int r;
        
        public int iCol;
        
        public @__VouchList_RowDataCheckForWebEvent(object retState, int r, int iCol) {
            this.retState = retState;
            this.r = r;
            this.iCol = iCol;
        }
    }
    
    public delegate void @__VouchList_FilterClickEventHandler(object sender, @__VouchList_FilterClickEvent e);
    
    public class @__VouchList_FilterClickEvent {
        
        public object fldsrv;
        
        public @__VouchList_FilterClickEvent(object fldsrv) {
            this.fldsrv = fldsrv;
        }
    }
    
    public delegate void @__VouchList_BeforeSendCommandEventHandler(object sender, @__VouchList_BeforeSendCommandEvent e);
    
    public class @__VouchList_BeforeSendCommandEvent {
        
        public U8VouchList.UFCommandType cmdType;
        
        public int pageSize;
        
        public int pageCurrent;
        
        public @__VouchList_BeforeSendCommandEvent(U8VouchList.UFCommandType cmdType, int pageSize, int pageCurrent) {
            this.cmdType = cmdType;
            this.pageSize = pageSize;
            this.pageCurrent = pageCurrent;
        }
    }
    
    public delegate void @__VouchList_CopySelectEventHandler(object sender, @__VouchList_CopySelectEvent e);
    
    public class @__VouchList_CopySelectEvent {
        
        public bool bAuther;
        
        public @__VouchList_CopySelectEvent(bool bAuther) {
            this.bAuther = bAuther;
        }
    }
    
    public delegate void @__VouchList_SelectAllEventHandler(object sender, @__VouchList_SelectAllEvent e);
    
    public class @__VouchList_SelectAllEvent {
        
        public bool selected;
        
        public bool isOverWrite;
        
        public @__VouchList_SelectAllEvent(bool selected, bool isOverWrite) {
            this.selected = selected;
            this.isOverWrite = isOverWrite;
        }
    }
    
    public delegate void @__VouchList_BeforeShowLinkQueryEventHandler(object sender, @__VouchList_BeforeShowLinkQueryEvent e);
    
    public class @__VouchList_BeforeShowLinkQueryEvent {
        
        public string sPrefixCode;
        
        public @__VouchList_BeforeShowLinkQueryEvent(string sPrefixCode) {
            this.sPrefixCode = sPrefixCode;
        }
    }
    
    public delegate void @__VouchList_BeforeBatchPrintToFileEventHandler(object sender, @__VouchList_BeforeBatchPrintToFileEvent e);
    
    public class @__VouchList_BeforeBatchPrintToFileEvent {
        
        public string sBatchPrintToFileSql;
        
        public string sTmpTbKeyName;
        
        public string sOrderSQL;
        
        public @__VouchList_BeforeBatchPrintToFileEvent(string sBatchPrintToFileSql, string sTmpTbKeyName, string sOrderSQL) {
            this.sBatchPrintToFileSql = sBatchPrintToFileSql;
            this.sTmpTbKeyName = sTmpTbKeyName;
            this.sOrderSQL = sOrderSQL;
        }
    }
    
    public delegate void @__VouchList_BeforeAutoFilterEventHandler(object sender, @__VouchList_BeforeAutoFilterEvent e);
    
    public class @__VouchList_BeforeAutoFilterEvent {
        
        public bool bFilter;
        
        public @__VouchList_BeforeAutoFilterEvent(bool bFilter) {
            this.bFilter = bFilter;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxVouchListEventMulticaster : U8VouchList.@__VouchList {
        
        private AxVouchList parent;
        
        public AxVouchListEventMulticaster(AxVouchList parent) {
            this.parent = parent;
        }
        
        public virtual void Click() {
            System.EventArgs clickEvent = new System.EventArgs();
            this.parent.RaiseOnClickEvent(this.parent, clickEvent);
        }
        
        public virtual void DblClick() {
            System.EventArgs dblclickEvent = new System.EventArgs();
            this.parent.RaiseOnDblClick(this.parent, dblclickEvent);
        }
        
        public virtual void MouseDown(short button, short shift, float x, float y) {
            @__VouchList_MouseDownEvent mousedownEvent = new @__VouchList_MouseDownEvent(button, shift, x, y);
            this.parent.RaiseOnMouseDownEvent(this.parent, mousedownEvent);
        }
        
        public virtual void MouseUp(short button, short shift, float x, float y) {
            @__VouchList_MouseUpEvent mouseupEvent = new @__VouchList_MouseUpEvent(button, shift, x, y);
            this.parent.RaiseOnMouseUpEvent(this.parent, mouseupEvent);
        }
        
        public virtual void KeyDown(short keyCode, short shift) {
            @__VouchList_KeyDownEvent keydownEvent = new @__VouchList_KeyDownEvent(keyCode, shift);
            this.parent.RaiseOnKeyDownEvent(this.parent, keydownEvent);
        }
        
        public virtual void KeyPress(short keyAscii) {
            @__VouchList_KeyPressEvent keypressEvent = new @__VouchList_KeyPressEvent(keyAscii);
            this.parent.RaiseOnKeyPressEvent(this.parent, keypressEvent);
        }
        
        public virtual void KeyUp(short keyCode, short shift) {
            @__VouchList_KeyUpEvent keyupEvent = new @__VouchList_KeyUpEvent(keyCode, shift);
            this.parent.RaiseOnKeyUpEvent(this.parent, keyupEvent);
        }
        
        public virtual void Scroll() {
            System.EventArgs scrollEvent = new System.EventArgs();
            this.parent.RaiseOnScroll(this.parent, scrollEvent);
        }
        
        public virtual void SelectClick(bool selected) {
            @__VouchList_SelectClickEvent selectclickEvent = new @__VouchList_SelectClickEvent(selected);
            this.parent.RaiseOnSelectClick(this.parent, selectclickEvent);
        }
        
        public virtual void SelectClick2(bool selected, int row) {
            @__VouchList_SelectClick2Event selectclick2Event = new @__VouchList_SelectClick2Event(selected, row);
            this.parent.RaiseOnSelectClick2(this.parent, selectclick2Event);
        }
        
        public virtual void PrintSettingChanged(object varLocalSettings, object varModuleSettings) {
            @__VouchList_PrintSettingChangedEvent printsettingchangedEvent = new @__VouchList_PrintSettingChangedEvent(varLocalSettings, varModuleSettings);
            this.parent.RaiseOnPrintSettingChanged(this.parent, printsettingchangedEvent);
        }
        
        public virtual void CellValueChanged(short row, short col, ref object newValue, ref object oldValue, ref bool keepFocus) {
            @__VouchList_CellValueChangedEvent cellvaluechangedEvent = new @__VouchList_CellValueChangedEvent(row, col, newValue, oldValue, keepFocus);
            this.parent.RaiseOnCellValueChanged(this.parent, cellvaluechangedEvent);
            newValue = cellvaluechangedEvent.newValue;
            oldValue = cellvaluechangedEvent.oldValue;
            keepFocus = cellvaluechangedEvent.keepFocus;
        }
        
        public virtual void Resize() {
            System.EventArgs resizeEvent = new System.EventArgs();
            this.parent.RaiseOnResizeEvent(this.parent, resizeEvent);
        }
        
        public virtual void BrowUser(ref object retValue, ref int row, ref int col) {
            @__VouchList_BrowUserEvent browuserEvent = new @__VouchList_BrowUserEvent(retValue, row, col);
            this.parent.RaiseOnBrowUser(this.parent, browuserEvent);
            retValue = browuserEvent.retValue;
            row = browuserEvent.row;
            col = browuserEvent.col;
        }
        
        public virtual void FillList(int r, int c, ref object pCom) {
            @__VouchList_FillListEvent filllistEvent = new @__VouchList_FillListEvent(r, c, pCom);
            this.parent.RaiseOnFillListEvent(this.parent, filllistEvent);
            pCom = filllistEvent.pCom;
        }
        
        public virtual void BeforeSort(int col, bool bAsc) {
            @__VouchList_BeforeSortEvent beforesortEvent = new @__VouchList_BeforeSortEvent(col, bAsc);
            this.parent.RaiseOnBeforeSort(this.parent, beforesortEvent);
        }
        
        public virtual void AfterSort(int col, bool bAsc) {
            @__VouchList_AfterSortEvent aftersortEvent = new @__VouchList_AfterSortEvent(col, bAsc);
            this.parent.RaiseOnAfterSort(this.parent, aftersortEvent);
        }
        
        public virtual void BeforeSort2(ref bool bSort, int col, bool bAsc) {
            @__VouchList_BeforeSort2Event beforesort2Event = new @__VouchList_BeforeSort2Event(bSort, col, bAsc);
            this.parent.RaiseOnBeforeSort2(this.parent, beforesort2Event);
            bSort = beforesort2Event.bSort;
        }
        
        public virtual void BeforeEdit(ref bool cancel) {
            @__VouchList_BeforeEditEvent beforeeditEvent = new @__VouchList_BeforeEditEvent(cancel);
            this.parent.RaiseOnBeforeEdit(this.parent, beforeeditEvent);
            cancel = beforeeditEvent.cancel;
        }
        
        public virtual void BatchModify(ref string sItemXML) {
            @__VouchList_BatchModifyEvent batchmodifyEvent = new @__VouchList_BatchModifyEvent(sItemXML);
            this.parent.RaiseOnBatchModify(this.parent, batchmodifyEvent);
            sItemXML = batchmodifyEvent.sItemXML;
        }
        
        public virtual void IsAllowBatchModify(ref bool bCanModify, int row, string colkey) {
            @__VouchList_IsAllowBatchModifyEvent isallowbatchmodifyEvent = new @__VouchList_IsAllowBatchModifyEvent(bCanModify, row, colkey);
            this.parent.RaiseOnIsAllowBatchModify(this.parent, isallowbatchmodifyEvent);
            bCanModify = isallowbatchmodifyEvent.bCanModify;
        }
        
        public virtual void RowDataCheck(ref MsSuperGrid.OpType retState, int r, ref int iCol) {
            @__VouchList_RowDataCheckEvent rowdatacheckEvent = new @__VouchList_RowDataCheckEvent(retState, r, iCol);
            this.parent.RaiseOnRowDataCheck(this.parent, rowdatacheckEvent);
            retState = rowdatacheckEvent.retState;
            iCol = rowdatacheckEvent.iCol;
        }
        
        public virtual void RowDataCheckForWeb(ref object retState, int r, ref int iCol) {
            @__VouchList_RowDataCheckForWebEvent rowdatacheckforwebEvent = new @__VouchList_RowDataCheckForWebEvent(retState, r, iCol);
            this.parent.RaiseOnRowDataCheckForWeb(this.parent, rowdatacheckforwebEvent);
            retState = rowdatacheckforwebEvent.retState;
            iCol = rowdatacheckforwebEvent.iCol;
        }
        
        public virtual void RowColChange() {
            System.EventArgs rowcolchangeEvent = new System.EventArgs();
            this.parent.RaiseOnRowColChange(this.parent, rowcolchangeEvent);
        }
        
        public virtual void SelChange() {
            System.EventArgs selchangeEvent = new System.EventArgs();
            this.parent.RaiseOnSelChange(this.parent, selchangeEvent);
        }
        
        public virtual void FilterClick(ref object fldsrv) {
            @__VouchList_FilterClickEvent filterclickEvent = new @__VouchList_FilterClickEvent(fldsrv);
            this.parent.RaiseOnFilterClick(this.parent, filterclickEvent);
            fldsrv = filterclickEvent.fldsrv;
        }
        
        public virtual void BeforeSendCommand(ref U8VouchList.UFCommandType cmdType, ref int pageSize, ref int pageCurrent) {
            @__VouchList_BeforeSendCommandEvent beforesendcommandEvent = new @__VouchList_BeforeSendCommandEvent(cmdType, pageSize, pageCurrent);
            this.parent.RaiseOnBeforeSendCommand(this.parent, beforesendcommandEvent);
            cmdType = beforesendcommandEvent.cmdType;
            pageSize = beforesendcommandEvent.pageSize;
            pageCurrent = beforesendcommandEvent.pageCurrent;
        }
        
        public virtual void CopySelect(ref bool bAuther) {
            @__VouchList_CopySelectEvent copyselectEvent = new @__VouchList_CopySelectEvent(bAuther);
            this.parent.RaiseOnCopySelect(this.parent, copyselectEvent);
            bAuther = copyselectEvent.bAuther;
        }
        
        public virtual void SelectAll(bool selected, ref bool isOverWrite) {
            @__VouchList_SelectAllEvent selectallEvent = new @__VouchList_SelectAllEvent(selected, isOverWrite);
            this.parent.RaiseOnSelectAll(this.parent, selectallEvent);
            isOverWrite = selectallEvent.isOverWrite;
        }
        
        public virtual void AfterColumnsDisplayRule() {
            System.EventArgs aftercolumnsdisplayruleEvent = new System.EventArgs();
            this.parent.RaiseOnAfterColumnsDisplayRule(this.parent, aftercolumnsdisplayruleEvent);
        }
        
        public virtual void BeforeShowLinkQuery(ref string sPrefixCode) {
            @__VouchList_BeforeShowLinkQueryEvent beforeshowlinkqueryEvent = new @__VouchList_BeforeShowLinkQueryEvent(sPrefixCode);
            this.parent.RaiseOnBeforeShowLinkQuery(this.parent, beforeshowlinkqueryEvent);
            sPrefixCode = beforeshowlinkqueryEvent.sPrefixCode;
        }
        
        public virtual void BeforeBatchPrintToFile(ref string sBatchPrintToFileSql, ref string sTmpTbKeyName, ref string sOrderSQL) {
            @__VouchList_BeforeBatchPrintToFileEvent beforebatchprinttofileEvent = new @__VouchList_BeforeBatchPrintToFileEvent(sBatchPrintToFileSql, sTmpTbKeyName, sOrderSQL);
            this.parent.RaiseOnBeforeBatchPrintToFile(this.parent, beforebatchprinttofileEvent);
            sBatchPrintToFileSql = beforebatchprinttofileEvent.sBatchPrintToFileSql;
            sTmpTbKeyName = beforebatchprinttofileEvent.sTmpTbKeyName;
            sOrderSQL = beforebatchprinttofileEvent.sOrderSQL;
        }
        
        public virtual void BeforeAutoFilter(bool bFilter) {
            @__VouchList_BeforeAutoFilterEvent beforeautofilterEvent = new @__VouchList_BeforeAutoFilterEvent(bFilter);
            this.parent.RaiseOnBeforeAutoFilter(this.parent, beforeautofilterEvent);
        }
    }
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{e907d7b5-67ee-4d2c-bb8c-76c0299b4175}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("BeforeSendCommand")]
    public class AxPagedivCtl : System.Windows.Forms.AxHost {
        
        private U8VouchList._PagedivCtl ocx;
        
        private AxPagedivCtlEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxPagedivCtl() : 
                base("e907d7b5-67ee-4d2c-bb8c-76c0299b4175") {
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027107)]
        public virtual bool PageDivState {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageDivState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageDivState;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageDivState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageDivState = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027106)]
        public virtual int ListNumber {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListNumber", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ListNumber;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ListNumber", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ListNumber = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027105)]
        public virtual string SelectedSum {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectedSum", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelectedSum;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectedSum", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelectedSum = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027136)]
        public virtual string SelectedFilter {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectedFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelectedFilter;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectedFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelectedFilter = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027137)]
        public virtual string SelectedLines {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectedLines", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.SelectedLines;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectedLines", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.SelectedLines = value;
            }
        }
        
        public event @__PagedivCtl_BeforeSendCommandEventHandler BeforeSendCommand;
        
        public event @__PagedivCtl_ChangeEventHandler Change;
        
        public virtual bool BindPagediv(ref U8VouchList.Pagediv pdiv) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BindPagediv", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.BindPagediv(ref pdiv)));
            return returnValue;
        }
        
        public virtual bool UnBindPagediv() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UnBindPagediv", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.UnBindPagediv()));
            return returnValue;
        }
        
        public virtual bool ShowAll() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowAll", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.ShowAll()));
            return returnValue;
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxPagedivCtlEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(U8VouchList.@__PagedivCtl));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((U8VouchList._PagedivCtl)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnBeforeSendCommand(object sender, @__PagedivCtl_BeforeSendCommandEvent e) {
            if ((this.BeforeSendCommand != null)) {
                this.BeforeSendCommand(sender, e);
            }
        }
        
        internal void RaiseOnChange(object sender, @__PagedivCtl_ChangeEvent e) {
            if ((this.Change != null)) {
                this.Change(sender, e);
            }
        }
    }
    
    public delegate void @__PagedivCtl_BeforeSendCommandEventHandler(object sender, @__PagedivCtl_BeforeSendCommandEvent e);
    
    public class @__PagedivCtl_BeforeSendCommandEvent {
        
        public U8VouchList.UFCommandType cmdType;
        
        public int pageSize;
        
        public int pageCurrent;
        
        public @__PagedivCtl_BeforeSendCommandEvent(U8VouchList.UFCommandType cmdType, int pageSize, int pageCurrent) {
            this.cmdType = cmdType;
            this.pageSize = pageSize;
            this.pageCurrent = pageCurrent;
        }
    }
    
    public delegate void @__PagedivCtl_ChangeEventHandler(object sender, @__PagedivCtl_ChangeEvent e);
    
    public class @__PagedivCtl_ChangeEvent {
        
        public U8VouchList.UFCommandType cmdType;
        
        public int pageSize;
        
        public int pageCurrent;
        
        public @__PagedivCtl_ChangeEvent(U8VouchList.UFCommandType cmdType, int pageSize, int pageCurrent) {
            this.cmdType = cmdType;
            this.pageSize = pageSize;
            this.pageCurrent = pageCurrent;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxPagedivCtlEventMulticaster : U8VouchList.@__PagedivCtl {
        
        private AxPagedivCtl parent;
        
        public AxPagedivCtlEventMulticaster(AxPagedivCtl parent) {
            this.parent = parent;
        }
        
        public virtual void BeforeSendCommand(ref U8VouchList.UFCommandType cmdType, ref int pageSize, ref int pageCurrent) {
            @__PagedivCtl_BeforeSendCommandEvent beforesendcommandEvent = new @__PagedivCtl_BeforeSendCommandEvent(cmdType, pageSize, pageCurrent);
            this.parent.RaiseOnBeforeSendCommand(this.parent, beforesendcommandEvent);
            cmdType = beforesendcommandEvent.cmdType;
            pageSize = beforesendcommandEvent.pageSize;
            pageCurrent = beforesendcommandEvent.pageCurrent;
        }
        
        public virtual void Change(ref U8VouchList.UFCommandType cmdType, ref int pageSize, ref int pageCurrent) {
            @__PagedivCtl_ChangeEvent changeEvent = new @__PagedivCtl_ChangeEvent(cmdType, pageSize, pageCurrent);
            this.parent.RaiseOnChange(this.parent, changeEvent);
            cmdType = changeEvent.cmdType;
            pageSize = changeEvent.pageSize;
            pageCurrent = changeEvent.pageCurrent;
        }
    }
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{d6fd5c4a-7621-4bf3-8873-95b9b980e3ac}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("ProcessWaitInfoChanged")]
    public class AxProgressAnimation : System.Windows.Forms.AxHost {
        
        private U8VouchList._ProgressAnimation ocx;
        
        private AxProgressAnimationEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxProgressAnimation() : 
                base("d6fd5c4a-7621-4bf3-8873-95b9b980e3ac") {
        }
        
        public event @__ProgressAnimation_ProcessWaitInfoChangedEventHandler ProcessWaitInfoChanged;
        
        public virtual void set_ProcessWaitInfo(ref string param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_ProcessWaitInfo", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_ProcessWaitInfo(ref param0);
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxProgressAnimationEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(U8VouchList.@__ProgressAnimation));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((U8VouchList._ProgressAnimation)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnProcessWaitInfoChanged(object sender, @__ProgressAnimation_ProcessWaitInfoChangedEvent e) {
            if ((this.ProcessWaitInfoChanged != null)) {
                this.ProcessWaitInfoChanged(sender, e);
            }
        }
    }
    
    public delegate void @__ProgressAnimation_ProcessWaitInfoChangedEventHandler(object sender, @__ProgressAnimation_ProcessWaitInfoChangedEvent e);
    
    public class @__ProgressAnimation_ProcessWaitInfoChangedEvent {
        
        public int lLeft;
        
        public int lWith;
        
        public @__ProgressAnimation_ProcessWaitInfoChangedEvent(int lLeft, int lWith) {
            this.lLeft = lLeft;
            this.lWith = lWith;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxProgressAnimationEventMulticaster : U8VouchList.@__ProgressAnimation {
        
        private AxProgressAnimation parent;
        
        public AxProgressAnimationEventMulticaster(AxProgressAnimation parent) {
            this.parent = parent;
        }
        
        public virtual void ProcessWaitInfoChanged(int lLeft, int lWith) {
            @__ProgressAnimation_ProcessWaitInfoChangedEvent processwaitinfochangedEvent = new @__ProgressAnimation_ProcessWaitInfoChangedEvent(lLeft, lWith);
            this.parent.RaiseOnProcessWaitInfoChanged(this.parent, processwaitinfochangedEvent);
        }
    }
}
