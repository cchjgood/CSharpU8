//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Reflection.AssemblyVersion("1.6.0.0")]
[assembly: System.Windows.Forms.AxHost.TypeLibraryTimeStamp("11/30/2015 15:32:58")]

namespace AxReferMakeVouch {
    
    
    [System.Windows.Forms.AxHost.ClsidAttribute("{d8a97656-8b4c-4423-b725-b0fc296bb568}")]
    [System.ComponentModel.DesignTimeVisibleAttribute(true)]
    [System.ComponentModel.DefaultEvent("onHeadSelecting")]
    public class AxctlReferMakeVouch : System.Windows.Forms.AxHost {
        
        private ReferMakeVouch._ctlReferMakeVouch ocx;
        
        private AxctlReferMakeVouchEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxctlReferMakeVouch() : 
                base("d8a97656-8b4c-4423-b725-b0fc296bb568") {
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938447)]
        public virtual string cAccName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("cAccName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.cAccName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("cAccName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.cAccName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938448)]
        public virtual string cUserName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("cUserName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.cUserName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("cUserName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.cUserName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938449)]
        public virtual string UfDbName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UfDbName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UfDbName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UfDbName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.UfDbName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938450)]
        public virtual string cUserId {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("cUserId", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.cUserId;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("cUserId", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.cUserId = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938451)]
        public virtual bool IsBS {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsBS", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsBS;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsBS", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsBS = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938452)]
        public virtual short Mode {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Mode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Mode;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Mode", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Mode = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938453)]
        public virtual bool IsSum {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsSum", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsSum;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsSum", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsSum = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938454)]
        public virtual bool IsSumB {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsSumB", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsSumB;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsSumB", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.IsSumB = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938455)]
        public virtual bool m_bShowMsgbox {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("m_bShowMsgbox", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.m_bShowMsgbox;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("m_bShowMsgbox", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.m_bShowMsgbox = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027094)]
        public virtual object CtlWidth {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Width;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Width = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027093)]
        public virtual object CtlHeight {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Height;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CtlHeight", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Height = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027092)]
        public virtual object Filters {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Filters", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Filters;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Filters", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Filters = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027088)]
        public virtual object BodyList {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BodyList", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BodyList;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027087)]
        public virtual object HeadList {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HeadList", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.HeadList;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027086)]
        public virtual object UFToolbar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UFToolbar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UFToolbar;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027085)]
        public virtual object Toolbar {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Toolbar", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Toolbar;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027084)]
        public virtual object ImageList {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ImageList", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ImageList;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027083)]
        public virtual object UFLabel {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UFLabel", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UFLabel;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027082)]
        public virtual object UFCheckBox {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UFCheckBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UFCheckBox;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027081)]
        public virtual object UFShowBody {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UFShowBody", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UFShowBody;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027080)]
        public virtual int pageSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("pageSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.pageSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("pageSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.pageSize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027079)]
        public virtual int PageCount {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.PageCount;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("PageCount", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.PageCount = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027078)]
        public virtual int CurrentPage {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CurrentPage", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CurrentPage;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CurrentPage", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CurrentPage = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027077)]
        public virtual string HeadColSetXml {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HeadColSetXml", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.HeadColSetXml;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HeadColSetXml", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HeadColSetXml = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027076)]
        public virtual string BodyColSetXml {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BodyColSetXml", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BodyColSetXml;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BodyColSetXml", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BodyColSetXml = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027075)]
        public virtual string LanguageID {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LanguageID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LanguageID;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LanguageID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LanguageID = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938614)]
        public virtual object g_business {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("g_business", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.g_business;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("g_business", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.g_business = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1073938699)]
        public virtual object o_USCLogin {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("o_USCLogin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.o_USCLogin;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("o_USCLogin", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.o_USCLogin = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027415)]
        public virtual int HeadSelCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HeadSelCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.HeadSelCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HeadSelCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HeadSelCol = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispIdAttribute(1745027414)]
        public virtual int BodySelCol {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BodySelCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BodySelCol;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BodySelCol", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BodySelCol = value;
            }
        }
        
        public event @__ctlReferMakeVouch_onHeadSelectingEventHandler onHeadSelecting;
        
        public event @__ctlReferMakeVouch_onBodySelectingEventHandler onBodySelecting;
        
        public event @__ctlReferMakeVouch_onHeadSelectedEventHandler onHeadSelected;
        
        public event @__ctlReferMakeVouch_onBodySelectedEventHandler onBodySelected;
        
        public event @__ctlReferMakeVouch_onHeadBrowUserEventHandler onHeadBrowUser;
        
        public event @__ctlReferMakeVouch_onBodyBrowUserEventHandler onBodyBrowUser;
        
        public event @__ctlReferMakeVouch_onHeadCellCheckEventHandler onHeadCellCheck;
        
        public event @__ctlReferMakeVouch_onBodyCellCheckEventHandler onBodyCellCheck;
        
        public event @__ctlReferMakeVouch_onPageEventHandler onPage;
        
        public event @__ctlReferMakeVouch_onButtonClickPreEventHandler onButtonClickPre;
        
        public event @__ctlReferMakeVouch_onButtonClickEventHandler onButtonClick;
        
        public event @__ctlReferMakeVouch_onTurnPageEventHandler onTurnPage;
        
        public event System.EventHandler onHelp;
        
        public event @__ctlReferMakeVouch_GetFilterEventHandler GetFilterEvent;
        
        public event @__ctlReferMakeVouch_HeadBrowUserEventHandler HeadBrowUser;
        
        public event @__ctlReferMakeVouch_HeadCellValueChangedEventHandler HeadCellValueChanged;
        
        public event System.EventHandler HeadClick;
        
        public event System.EventHandler HeadDblClick;
        
        public event @__ctlReferMakeVouch_HeadDragDropEventHandler HeadDragDrop;
        
        public event @__ctlReferMakeVouch_HeadDragOverEventHandler HeadDragOver;
        
        public event @__ctlReferMakeVouch_HeadFillListEventHandler HeadFillList;
        
        public event System.EventHandler HeadGotFocus;
        
        public event @__ctlReferMakeVouch_HeadKeyDownEventHandler HeadKeyDown;
        
        public event @__ctlReferMakeVouch_HeadKeyPressEventHandler HeadKeyPress;
        
        public event @__ctlReferMakeVouch_HeadKeyUpEventHandler HeadKeyUp;
        
        public event System.EventHandler HeadLostFocus;
        
        public event @__ctlReferMakeVouch_HeadMouseDownEventHandler HeadMouseDown;
        
        public event @__ctlReferMakeVouch_HeadMouseUpEventHandler HeadMouseUp;
        
        public event @__ctlReferMakeVouch_HeadPrintSettingChangedEventHandler HeadPrintSettingChanged;
        
        public event System.EventHandler HeadResize;
        
        public event System.EventHandler HeadScroll;
        
        public event @__ctlReferMakeVouch_HeadSelectClickEventHandler HeadSelectClick;
        
        public event @__ctlReferMakeVouch_HeadValidateEventHandler HeadValidate;
        
        public event @__ctlReferMakeVouch_HeadShiftSelectEventHandler HeadShiftSelect;
        
        public event @__ctlReferMakeVouch_HeadSumStyleEventHandler HeadSumStyle;
        
        public event @__ctlReferMakeVouch_BodyBrowUserEventHandler BodyBrowUser;
        
        public event @__ctlReferMakeVouch_BodyCellValueChangedEventHandler BodyCellValueChanged;
        
        public event System.EventHandler BodyClick;
        
        public event System.EventHandler BodyDblClick;
        
        public event @__ctlReferMakeVouch_BodyDragDropEventHandler BodyDragDrop;
        
        public event @__ctlReferMakeVouch_BodyDragOverEventHandler BodyDragOver;
        
        public event @__ctlReferMakeVouch_BodyFillListEventHandler BodyFillList;
        
        public event System.EventHandler BodyGotFocus;
        
        public event @__ctlReferMakeVouch_BodyKeyDownEventHandler BodyKeyDown;
        
        public event @__ctlReferMakeVouch_BodyKeyPressEventHandler BodyKeyPress;
        
        public event @__ctlReferMakeVouch_BodyKeyUpEventHandler BodyKeyUp;
        
        public event System.EventHandler BodyLostFocus;
        
        public event @__ctlReferMakeVouch_BodyMouseDownEventHandler BodyMouseDown;
        
        public event @__ctlReferMakeVouch_BodyMouseUpEventHandler BodyMouseUp;
        
        public event @__ctlReferMakeVouch_BodyPrintSettingChangedEventHandler BodyPrintSettingChanged;
        
        public event System.EventHandler BodyResize;
        
        public event System.EventHandler BodyScroll;
        
        public event @__ctlReferMakeVouch_BodySelectClickEventHandler BodySelectClick;
        
        public event @__ctlReferMakeVouch_BodyValidateEventHandler BodyValidate;
        
        public event @__ctlReferMakeVouch_BodyShiftSelectEventHandler BodyShiftSelect;
        
        public event @__ctlReferMakeVouch_BodySumStyleEventHandler BodySumStyle;
        
        public event @__ctlReferMakeVouch_ButtonClickEventHandler ButtonClick;
        
        public event @__ctlReferMakeVouch_ButtonDropDownEventHandler ButtonDropDown;
        
        public event @__ctlReferMakeVouch_ButtonMenuClickEventHandler ButtonMenuClick;
        
        public event @__ctlReferMakeVouch_ButtonOnCommandEventHandler ButtonOnCommand;
        
        public event @__ctlReferMakeVouch_ButtonOnPreCommandEventHandler ButtonOnPreCommand;
        
        public event @__ctlReferMakeVouch_CheckClickEventHandler CheckClick;
        
        public event @__ctlReferMakeVouch_DisplayStyleChangeEventHandler DisplayStyleChange;
        
        public event System.EventHandler EdtAccepted;
        
        public event @__ctlReferMakeVouch_ShowBodyEventHandler ShowBody;
        
        public event @__ctlReferMakeVouch_IsAllowBatchModifyEventHandler IsAllowBatchModify;
        
        public event @__ctlReferMakeVouch_BatchModifyEventHandler BatchModify;
        
        public virtual void SelectHeadAll() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectHeadAll", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SelectHeadAll();
        }
        
        public virtual void SelectBodyAll() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectBodyAll", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SelectBodyAll();
        }
        
        public virtual void AddSumLine(ref object gridBody, ref bool isBody) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddSumLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AddSumLine(ref gridBody, ref isBody);
        }
        
        public virtual void RefreshSumLine(ref object gridBody, ref bool isBody) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RefreshSumLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RefreshSumLine(ref gridBody, ref isBody);
        }
        
        public virtual object get_DomRefSet() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_DomRefSet", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.get_DomRefSet()));
            return returnValue;
        }
        
        public virtual void set_DomRefSet(ref object param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_DomRefSet", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_DomRefSet(ref param0);
        }
        
        public virtual bool AppendBodyData(ref object oAppendData, ref string errMsg) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AppendBodyData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.AppendBodyData(ref oAppendData, ref errMsg)));
            return returnValue;
        }
        
        public virtual object SetbShowMsgbox(ref bool bShow) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetbShowMsgbox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetbShowMsgbox(ref bShow)));
            return returnValue;
        }
        
        public virtual void SetIsListBody() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetIsListBody", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetIsListBody();
        }
        
        public virtual object SetBodyScreenMax(bool bBodyScreenMax) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetBodyScreenMax", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetBodyScreenMax(bBodyScreenMax)));
            return returnValue;
        }
        
        public virtual void SelectBodyAllWithOutMsg() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SelectBodyAllWithOutMsg", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SelectBodyAllWithOutMsg();
        }
        
        public virtual void DisableHeadTextMatrix(bool bDisable, object col, int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisableHeadTextMatrix", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DisableHeadTextMatrix(bDisable, col, row);
        }
        
        public virtual void DisableBodyTextMatrix(bool bDisable, object col, int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisableBodyTextMatrix", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.DisableBodyTextMatrix(bDisable, col, row);
        }
        
        public virtual object AddHeadLine(int row, MSXML2.IXMLDOMDocument2 oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddHeadLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.AddHeadLine(row, oDom)));
            return returnValue;
        }
        
        public virtual object AddBodyLine(int row, MSXML2.IXMLDOMDocument2 oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddBodyLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.AddBodyLine(row, oDom)));
            return returnValue;
        }
        
        public virtual object UpdateHeadLine(int row, MSXML2.IXMLDOMDocument2 oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UpdateHeadLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.UpdateHeadLine(row, oDom)));
            return returnValue;
        }
        
        public virtual object UpdateBodyLine(int row, MSXML2.IXMLDOMDocument2 oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UpdateBodyLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.UpdateBodyLine(row, oDom)));
            return returnValue;
        }
        
        public virtual MSXML2.IXMLDOMDocument2 GetHeadLine(int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetHeadLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MSXML2.IXMLDOMDocument2 returnValue = ((MSXML2.IXMLDOMDocument2)(this.ocx.GetHeadLine(row)));
            return returnValue;
        }
        
        public virtual MSXML2.IXMLDOMDocument2 GetBodyLine(int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetBodyLine", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MSXML2.IXMLDOMDocument2 returnValue = ((MSXML2.IXMLDOMDocument2)(this.ocx.GetBodyLine(row)));
            return returnValue;
        }
        
        public virtual MSXML2.IXMLDOMDocument2 GetHeadDom(bool bSelect) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetHeadDom", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MSXML2.IXMLDOMDocument2 returnValue = ((MSXML2.IXMLDOMDocument2)(this.ocx.GetHeadDom(bSelect)));
            return returnValue;
        }
        
        public virtual MSXML2.IXMLDOMDocument2 GetBodyDom(bool bSelect) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetBodyDom", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            MSXML2.IXMLDOMDocument2 returnValue = ((MSXML2.IXMLDOMDocument2)(this.ocx.GetBodyDom(bSelect)));
            return returnValue;
        }
        
        public virtual object SetHeadDom(object oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetHeadDom", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetHeadDom(oDom)));
            return returnValue;
        }
        
        public virtual object SetBodyDom(object oDom) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetBodyDom", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetBodyDom(oDom)));
            return returnValue;
        }
        
        public virtual object SetListDom(object domHead, object domBody) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetListDom", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.SetListDom(domHead, domBody)));
            return returnValue;
        }
        
        public virtual object Init(bool bList, object domColSetHead, MSXML2.IXMLDOMDocument2 domControl, int iPageSize, int iPageCount, int iCurPage) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Init", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    bList,
                    domColSetHead,
                    domControl,
                    iPageSize,
                    iPageCount,
                    iCurPage,
                    System.Reflection.Missing.Value,
                    System.Reflection.Missing.Value};
            System.Type typeVar = typeof(ReferMakeVouch._ctlReferMakeVouch);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("Init");
            object returnValue = ((object)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual object Init(bool bList, object domColSetHead, MSXML2.IXMLDOMDocument2 domControl, int iPageSize, int iPageCount, int iCurPage, ref object domColSetBody, object login) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Init", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.Init(bList, domColSetHead, domControl, iPageSize, iPageCount, iCurPage, ref domColSetBody, login)));
            return returnValue;
        }
        
        public virtual void SetKey(string colSetHeadKey, string colSetBodyKey) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetKey", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetKey(colSetHeadKey, colSetBodyKey);
        }
        
        public virtual string GetControlValue(string sName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetControlValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetControlValue(sName)));
            return returnValue;
        }
        
        public virtual short GetCheckValue(string checkBoxName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetCheckValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            short returnValue = ((short)(this.ocx.GetCheckValue(checkBoxName)));
            return returnValue;
        }
        
        public virtual int GetHeadColIndex(ref string colName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetHeadColIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetHeadColIndex(ref colName)));
            return returnValue;
        }
        
        public virtual string GetHeadColName(ref int colIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetHeadColName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetHeadColName(ref colIndex)));
            return returnValue;
        }
        
        public virtual int GetBodyColIndex(ref string colName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetBodyColIndex", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.GetBodyColIndex(ref colName)));
            return returnValue;
        }
        
        public virtual string GetBodyColName(ref int colIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetBodyColName", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetBodyColName(ref colIndex)));
            return returnValue;
        }
        
        public virtual void SetHeadFieldRevisable(ref object index, ref bool fEnabled) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetHeadFieldRevisable", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetHeadFieldRevisable(ref index, ref fEnabled);
        }
        
        public virtual void SetBodyFieldRevisable(ref object index, ref bool fEnabled) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetBodyFieldRevisable", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetBodyFieldRevisable(ref index, ref fEnabled);
        }
        
        public virtual object get_LineSelected(int row) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_LineSelected", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.get_LineSelected(row)));
            return returnValue;
        }
        
        public virtual void set_LineSelected(int row, object param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_LineSelected", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_LineSelected(row, param0);
        }
        
        public virtual object get_HeadTextMatrix(int row, object sIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_HeadTextMatrix", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.get_HeadTextMatrix(row, sIndex)));
            return returnValue;
        }
        
        public virtual void set_HeadTextMatrix(int row, object sIndex, object param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_HeadTextMatrix", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_HeadTextMatrix(row, sIndex, param0);
        }
        
        public virtual object get_BodyTextMatrix(int row, object sIndex) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_BodyTextMatrix", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.get_BodyTextMatrix(row, sIndex)));
            return returnValue;
        }
        
        public virtual void set_BodyTextMatrix(int row, object sIndex, object param0) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_BodyTextMatrix", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_BodyTextMatrix(row, sIndex, param0);
        }
        
        public virtual object GetFilterValue(ref MSXML2.IXMLDOMDocument2 domFilterValue) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetFilterValue", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object returnValue = ((object)(this.ocx.GetFilterValue(ref domFilterValue)));
            return returnValue;
        }
        
        public virtual bool GetFilter(string sName, object oLogin, ref MSXML2.IXMLDOMDocument2 domFilter, ref string sErr) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetFilter", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.GetFilter(sName, oLogin, ref domFilter, ref sErr)));
            return returnValue;
        }
        
        public virtual bool GetVchData(string sRefName, object oFilter, object oLogin, ref string sColKey, ref string sErr, ref int iPageSize, ref int iPageCount, ref int iCurPage, ref MSXML2.IXMLDOMDocument2 domHead) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetVchData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    sRefName,
                    oFilter,
                    oLogin,
                    sColKey,
                    sErr,
                    iPageSize,
                    iPageCount,
                    iCurPage,
                    domHead,
                    null};
            System.Type typeVar = typeof(ReferMakeVouch._ctlReferMakeVouch);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("GetVchData");
            bool returnValue = ((bool)(methodToInvoke.Invoke(this.ocx, paramArray)));
            sColKey = ((string)(paramArray[3]));
            sErr = ((string)(paramArray[4]));
            iPageSize = ((int)(paramArray[5]));
            iPageCount = ((int)(paramArray[6]));
            iCurPage = ((int)(paramArray[7]));
            domHead = ((MSXML2.IXMLDOMDocument2)(paramArray[8]));
            return returnValue;
        }
        
        public virtual bool GetVchData(string sRefName, object oFilter, object oLogin, ref string sColKey, ref string sErr, ref int iPageSize, ref int iPageCount, ref int iCurPage, ref MSXML2.IXMLDOMDocument2 domHead, ref MSXML2.IXMLDOMDocument2 domBody) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetVchData", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.GetVchData(sRefName, oFilter, oLogin, ref sColKey, ref sErr, ref iPageSize, ref iPageCount, ref iCurPage, ref domHead, ref domBody)));
            return returnValue;
        }
        
        public virtual void CTBCtrl1_OnCommand(UFToolBarCtrl.ENUM_MENU_OR_BUTTON enumType, string cButtonId, string cMenuId) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CTBCtrl1_OnCommand", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CTBCtrl1_OnCommand(enumType, cButtonId, cMenuId);
        }
        
        public virtual void AddGraph(ref object img, ref short iNum, ref string ckey, ref short iResNum) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddGraph", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    img,
                    iNum,
                    ckey,
                    iResNum,
                    ((short)(0))};
            System.Type typeVar = typeof(ReferMakeVouch._ctlReferMakeVouch);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("AddGraph");
            methodToInvoke.Invoke(this.ocx, paramArray);
            img = ((object)(paramArray[0]));
            iNum = ((short)(paramArray[1]));
            ckey = ((string)(paramArray[2]));
            iResNum = ((short)(paramArray[3]));
        }
        
        public virtual void AddGraph(ref object img, ref short iNum, ref string ckey, ref short iResNum, ref short iFormat) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AddGraph", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.AddGraph(ref img, ref iNum, ref ckey, ref iResNum, ref iFormat);
        }
        
        public virtual int MsgBox(string text) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MsgBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                    text,
                    ((int)(0)),
                    "",
                    "",
                    ((int)(0))};
            System.Type typeVar = typeof(ReferMakeVouch._ctlReferMakeVouch);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("MsgBox");
            int returnValue = ((int)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual int MsgBox(string text, int buttons, string caption, string helpfile, int context) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MsgBox", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            int returnValue = ((int)(this.ocx.MsgBox(text, buttons, caption, helpfile, context)));
            return returnValue;
        }
        
        public virtual void RemoveHeadAll() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RemoveHeadAll", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RemoveHeadAll();
        }
        
        public virtual void RemoveBodyAll() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RemoveBodyAll", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RemoveBodyAll();
        }
        
        public virtual void SetFilterOne() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetFilterOne", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetFilterOne();
        }
        
        public virtual void UpdateToolbar() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UpdateToolbar", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.UpdateToolbar();
        }
        
        public virtual void SetIsList() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetIsList", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetIsList();
        }
        
        public virtual void SetRulesString(string rules) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetRulesString", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetRulesString(rules);
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxctlReferMakeVouchEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(ReferMakeVouch.@__ctlReferMakeVouch));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((ReferMakeVouch._ctlReferMakeVouch)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnonHeadSelecting(object sender, @__ctlReferMakeVouch_onHeadSelectingEvent e) {
            if ((this.onHeadSelecting != null)) {
                this.onHeadSelecting(sender, e);
            }
        }
        
        internal void RaiseOnonBodySelecting(object sender, @__ctlReferMakeVouch_onBodySelectingEvent e) {
            if ((this.onBodySelecting != null)) {
                this.onBodySelecting(sender, e);
            }
        }
        
        internal void RaiseOnonHeadSelected(object sender, @__ctlReferMakeVouch_onHeadSelectedEvent e) {
            if ((this.onHeadSelected != null)) {
                this.onHeadSelected(sender, e);
            }
        }
        
        internal void RaiseOnonBodySelected(object sender, @__ctlReferMakeVouch_onBodySelectedEvent e) {
            if ((this.onBodySelected != null)) {
                this.onBodySelected(sender, e);
            }
        }
        
        internal void RaiseOnonHeadBrowUser(object sender, @__ctlReferMakeVouch_onHeadBrowUserEvent e) {
            if ((this.onHeadBrowUser != null)) {
                this.onHeadBrowUser(sender, e);
            }
        }
        
        internal void RaiseOnonBodyBrowUser(object sender, @__ctlReferMakeVouch_onBodyBrowUserEvent e) {
            if ((this.onBodyBrowUser != null)) {
                this.onBodyBrowUser(sender, e);
            }
        }
        
        internal void RaiseOnonHeadCellCheck(object sender, @__ctlReferMakeVouch_onHeadCellCheckEvent e) {
            if ((this.onHeadCellCheck != null)) {
                this.onHeadCellCheck(sender, e);
            }
        }
        
        internal void RaiseOnonBodyCellCheck(object sender, @__ctlReferMakeVouch_onBodyCellCheckEvent e) {
            if ((this.onBodyCellCheck != null)) {
                this.onBodyCellCheck(sender, e);
            }
        }
        
        internal void RaiseOnonPage(object sender, @__ctlReferMakeVouch_onPageEvent e) {
            if ((this.onPage != null)) {
                this.onPage(sender, e);
            }
        }
        
        internal void RaiseOnonButtonClickPre(object sender, @__ctlReferMakeVouch_onButtonClickPreEvent e) {
            if ((this.onButtonClickPre != null)) {
                this.onButtonClickPre(sender, e);
            }
        }
        
        internal void RaiseOnonButtonClick(object sender, @__ctlReferMakeVouch_onButtonClickEvent e) {
            if ((this.onButtonClick != null)) {
                this.onButtonClick(sender, e);
            }
        }
        
        internal void RaiseOnonTurnPage(object sender, @__ctlReferMakeVouch_onTurnPageEvent e) {
            if ((this.onTurnPage != null)) {
                this.onTurnPage(sender, e);
            }
        }
        
        internal void RaiseOnonHelp(object sender, System.EventArgs e) {
            if ((this.onHelp != null)) {
                this.onHelp(sender, e);
            }
        }
        
        internal void RaiseOnGetFilterEvent(object sender, @__ctlReferMakeVouch_GetFilterEvent e) {
            if ((this.GetFilterEvent != null)) {
                this.GetFilterEvent(sender, e);
            }
        }
        
        internal void RaiseOnHeadBrowUser(object sender, @__ctlReferMakeVouch_HeadBrowUserEvent e) {
            if ((this.HeadBrowUser != null)) {
                this.HeadBrowUser(sender, e);
            }
        }
        
        internal void RaiseOnHeadCellValueChanged(object sender, @__ctlReferMakeVouch_HeadCellValueChangedEvent e) {
            if ((this.HeadCellValueChanged != null)) {
                this.HeadCellValueChanged(sender, e);
            }
        }
        
        internal void RaiseOnHeadClick(object sender, System.EventArgs e) {
            if ((this.HeadClick != null)) {
                this.HeadClick(sender, e);
            }
        }
        
        internal void RaiseOnHeadDblClick(object sender, System.EventArgs e) {
            if ((this.HeadDblClick != null)) {
                this.HeadDblClick(sender, e);
            }
        }
        
        internal void RaiseOnHeadDragDrop(object sender, @__ctlReferMakeVouch_HeadDragDropEvent e) {
            if ((this.HeadDragDrop != null)) {
                this.HeadDragDrop(sender, e);
            }
        }
        
        internal void RaiseOnHeadDragOver(object sender, @__ctlReferMakeVouch_HeadDragOverEvent e) {
            if ((this.HeadDragOver != null)) {
                this.HeadDragOver(sender, e);
            }
        }
        
        internal void RaiseOnHeadFillList(object sender, @__ctlReferMakeVouch_HeadFillListEvent e) {
            if ((this.HeadFillList != null)) {
                this.HeadFillList(sender, e);
            }
        }
        
        internal void RaiseOnHeadGotFocus(object sender, System.EventArgs e) {
            if ((this.HeadGotFocus != null)) {
                this.HeadGotFocus(sender, e);
            }
        }
        
        internal void RaiseOnHeadKeyDown(object sender, @__ctlReferMakeVouch_HeadKeyDownEvent e) {
            if ((this.HeadKeyDown != null)) {
                this.HeadKeyDown(sender, e);
            }
        }
        
        internal void RaiseOnHeadKeyPress(object sender, @__ctlReferMakeVouch_HeadKeyPressEvent e) {
            if ((this.HeadKeyPress != null)) {
                this.HeadKeyPress(sender, e);
            }
        }
        
        internal void RaiseOnHeadKeyUp(object sender, @__ctlReferMakeVouch_HeadKeyUpEvent e) {
            if ((this.HeadKeyUp != null)) {
                this.HeadKeyUp(sender, e);
            }
        }
        
        internal void RaiseOnHeadLostFocus(object sender, System.EventArgs e) {
            if ((this.HeadLostFocus != null)) {
                this.HeadLostFocus(sender, e);
            }
        }
        
        internal void RaiseOnHeadMouseDown(object sender, @__ctlReferMakeVouch_HeadMouseDownEvent e) {
            if ((this.HeadMouseDown != null)) {
                this.HeadMouseDown(sender, e);
            }
        }
        
        internal void RaiseOnHeadMouseUp(object sender, @__ctlReferMakeVouch_HeadMouseUpEvent e) {
            if ((this.HeadMouseUp != null)) {
                this.HeadMouseUp(sender, e);
            }
        }
        
        internal void RaiseOnHeadPrintSettingChanged(object sender, @__ctlReferMakeVouch_HeadPrintSettingChangedEvent e) {
            if ((this.HeadPrintSettingChanged != null)) {
                this.HeadPrintSettingChanged(sender, e);
            }
        }
        
        internal void RaiseOnHeadResize(object sender, System.EventArgs e) {
            if ((this.HeadResize != null)) {
                this.HeadResize(sender, e);
            }
        }
        
        internal void RaiseOnHeadScroll(object sender, System.EventArgs e) {
            if ((this.HeadScroll != null)) {
                this.HeadScroll(sender, e);
            }
        }
        
        internal void RaiseOnHeadSelectClick(object sender, @__ctlReferMakeVouch_HeadSelectClickEvent e) {
            if ((this.HeadSelectClick != null)) {
                this.HeadSelectClick(sender, e);
            }
        }
        
        internal void RaiseOnHeadValidate(object sender, @__ctlReferMakeVouch_HeadValidateEvent e) {
            if ((this.HeadValidate != null)) {
                this.HeadValidate(sender, e);
            }
        }
        
        internal void RaiseOnHeadShiftSelect(object sender, @__ctlReferMakeVouch_HeadShiftSelectEvent e) {
            if ((this.HeadShiftSelect != null)) {
                this.HeadShiftSelect(sender, e);
            }
        }
        
        internal void RaiseOnHeadSumStyle(object sender, @__ctlReferMakeVouch_HeadSumStyleEvent e) {
            if ((this.HeadSumStyle != null)) {
                this.HeadSumStyle(sender, e);
            }
        }
        
        internal void RaiseOnBodyBrowUser(object sender, @__ctlReferMakeVouch_BodyBrowUserEvent e) {
            if ((this.BodyBrowUser != null)) {
                this.BodyBrowUser(sender, e);
            }
        }
        
        internal void RaiseOnBodyCellValueChanged(object sender, @__ctlReferMakeVouch_BodyCellValueChangedEvent e) {
            if ((this.BodyCellValueChanged != null)) {
                this.BodyCellValueChanged(sender, e);
            }
        }
        
        internal void RaiseOnBodyClick(object sender, System.EventArgs e) {
            if ((this.BodyClick != null)) {
                this.BodyClick(sender, e);
            }
        }
        
        internal void RaiseOnBodyDblClick(object sender, System.EventArgs e) {
            if ((this.BodyDblClick != null)) {
                this.BodyDblClick(sender, e);
            }
        }
        
        internal void RaiseOnBodyDragDrop(object sender, @__ctlReferMakeVouch_BodyDragDropEvent e) {
            if ((this.BodyDragDrop != null)) {
                this.BodyDragDrop(sender, e);
            }
        }
        
        internal void RaiseOnBodyDragOver(object sender, @__ctlReferMakeVouch_BodyDragOverEvent e) {
            if ((this.BodyDragOver != null)) {
                this.BodyDragOver(sender, e);
            }
        }
        
        internal void RaiseOnBodyFillList(object sender, @__ctlReferMakeVouch_BodyFillListEvent e) {
            if ((this.BodyFillList != null)) {
                this.BodyFillList(sender, e);
            }
        }
        
        internal void RaiseOnBodyGotFocus(object sender, System.EventArgs e) {
            if ((this.BodyGotFocus != null)) {
                this.BodyGotFocus(sender, e);
            }
        }
        
        internal void RaiseOnBodyKeyDown(object sender, @__ctlReferMakeVouch_BodyKeyDownEvent e) {
            if ((this.BodyKeyDown != null)) {
                this.BodyKeyDown(sender, e);
            }
        }
        
        internal void RaiseOnBodyKeyPress(object sender, @__ctlReferMakeVouch_BodyKeyPressEvent e) {
            if ((this.BodyKeyPress != null)) {
                this.BodyKeyPress(sender, e);
            }
        }
        
        internal void RaiseOnBodyKeyUp(object sender, @__ctlReferMakeVouch_BodyKeyUpEvent e) {
            if ((this.BodyKeyUp != null)) {
                this.BodyKeyUp(sender, e);
            }
        }
        
        internal void RaiseOnBodyLostFocus(object sender, System.EventArgs e) {
            if ((this.BodyLostFocus != null)) {
                this.BodyLostFocus(sender, e);
            }
        }
        
        internal void RaiseOnBodyMouseDown(object sender, @__ctlReferMakeVouch_BodyMouseDownEvent e) {
            if ((this.BodyMouseDown != null)) {
                this.BodyMouseDown(sender, e);
            }
        }
        
        internal void RaiseOnBodyMouseUp(object sender, @__ctlReferMakeVouch_BodyMouseUpEvent e) {
            if ((this.BodyMouseUp != null)) {
                this.BodyMouseUp(sender, e);
            }
        }
        
        internal void RaiseOnBodyPrintSettingChanged(object sender, @__ctlReferMakeVouch_BodyPrintSettingChangedEvent e) {
            if ((this.BodyPrintSettingChanged != null)) {
                this.BodyPrintSettingChanged(sender, e);
            }
        }
        
        internal void RaiseOnBodyResize(object sender, System.EventArgs e) {
            if ((this.BodyResize != null)) {
                this.BodyResize(sender, e);
            }
        }
        
        internal void RaiseOnBodyScroll(object sender, System.EventArgs e) {
            if ((this.BodyScroll != null)) {
                this.BodyScroll(sender, e);
            }
        }
        
        internal void RaiseOnBodySelectClick(object sender, @__ctlReferMakeVouch_BodySelectClickEvent e) {
            if ((this.BodySelectClick != null)) {
                this.BodySelectClick(sender, e);
            }
        }
        
        internal void RaiseOnBodyValidate(object sender, @__ctlReferMakeVouch_BodyValidateEvent e) {
            if ((this.BodyValidate != null)) {
                this.BodyValidate(sender, e);
            }
        }
        
        internal void RaiseOnBodyShiftSelect(object sender, @__ctlReferMakeVouch_BodyShiftSelectEvent e) {
            if ((this.BodyShiftSelect != null)) {
                this.BodyShiftSelect(sender, e);
            }
        }
        
        internal void RaiseOnBodySumStyle(object sender, @__ctlReferMakeVouch_BodySumStyleEvent e) {
            if ((this.BodySumStyle != null)) {
                this.BodySumStyle(sender, e);
            }
        }
        
        internal void RaiseOnButtonClick(object sender, @__ctlReferMakeVouch_ButtonClickEvent e) {
            if ((this.ButtonClick != null)) {
                this.ButtonClick(sender, e);
            }
        }
        
        internal void RaiseOnButtonDropDown(object sender, @__ctlReferMakeVouch_ButtonDropDownEvent e) {
            if ((this.ButtonDropDown != null)) {
                this.ButtonDropDown(sender, e);
            }
        }
        
        internal void RaiseOnButtonMenuClick(object sender, @__ctlReferMakeVouch_ButtonMenuClickEvent e) {
            if ((this.ButtonMenuClick != null)) {
                this.ButtonMenuClick(sender, e);
            }
        }
        
        internal void RaiseOnButtonOnCommand(object sender, @__ctlReferMakeVouch_ButtonOnCommandEvent e) {
            if ((this.ButtonOnCommand != null)) {
                this.ButtonOnCommand(sender, e);
            }
        }
        
        internal void RaiseOnButtonOnPreCommand(object sender, @__ctlReferMakeVouch_ButtonOnPreCommandEvent e) {
            if ((this.ButtonOnPreCommand != null)) {
                this.ButtonOnPreCommand(sender, e);
            }
        }
        
        internal void RaiseOnCheckClick(object sender, @__ctlReferMakeVouch_CheckClickEvent e) {
            if ((this.CheckClick != null)) {
                this.CheckClick(sender, e);
            }
        }
        
        internal void RaiseOnDisplayStyleChange(object sender, @__ctlReferMakeVouch_DisplayStyleChangeEvent e) {
            if ((this.DisplayStyleChange != null)) {
                this.DisplayStyleChange(sender, e);
            }
        }
        
        internal void RaiseOnEdtAccepted(object sender, System.EventArgs e) {
            if ((this.EdtAccepted != null)) {
                this.EdtAccepted(sender, e);
            }
        }
        
        internal void RaiseOnShowBody(object sender, @__ctlReferMakeVouch_ShowBodyEvent e) {
            if ((this.ShowBody != null)) {
                this.ShowBody(sender, e);
            }
        }
        
        internal void RaiseOnIsAllowBatchModify(object sender, @__ctlReferMakeVouch_IsAllowBatchModifyEvent e) {
            if ((this.IsAllowBatchModify != null)) {
                this.IsAllowBatchModify(sender, e);
            }
        }
        
        internal void RaiseOnBatchModify(object sender, @__ctlReferMakeVouch_BatchModifyEvent e) {
            if ((this.BatchModify != null)) {
                this.BatchModify(sender, e);
            }
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onHeadSelectingEventHandler(object sender, @__ctlReferMakeVouch_onHeadSelectingEvent e);
    
    public class @__ctlReferMakeVouch_onHeadSelectingEvent {
        
        public int row;
        
        public bool bChange;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onHeadSelectingEvent(int row, bool bChange, string sErr) {
            this.row = row;
            this.bChange = bChange;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onBodySelectingEventHandler(object sender, @__ctlReferMakeVouch_onBodySelectingEvent e);
    
    public class @__ctlReferMakeVouch_onBodySelectingEvent {
        
        public int row;
        
        public bool bChange;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onBodySelectingEvent(int row, bool bChange, string sErr) {
            this.row = row;
            this.bChange = bChange;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onHeadSelectedEventHandler(object sender, @__ctlReferMakeVouch_onHeadSelectedEvent e);
    
    public class @__ctlReferMakeVouch_onHeadSelectedEvent {
        
        public int row;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onHeadSelectedEvent(int row, string sErr) {
            this.row = row;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onBodySelectedEventHandler(object sender, @__ctlReferMakeVouch_onBodySelectedEvent e);
    
    public class @__ctlReferMakeVouch_onBodySelectedEvent {
        
        public int row;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onBodySelectedEvent(int row, string sErr) {
            this.row = row;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onHeadBrowUserEventHandler(object sender, @__ctlReferMakeVouch_onHeadBrowUserEvent e);
    
    public class @__ctlReferMakeVouch_onHeadBrowUserEvent {
        
        public int row;
        
        public int col;
        
        public string sKey;
        
        public string sRet;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onHeadBrowUserEvent(int row, int col, string sKey, string sRet, string sErr) {
            this.row = row;
            this.col = col;
            this.sKey = sKey;
            this.sRet = sRet;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onBodyBrowUserEventHandler(object sender, @__ctlReferMakeVouch_onBodyBrowUserEvent e);
    
    public class @__ctlReferMakeVouch_onBodyBrowUserEvent {
        
        public int row;
        
        public int col;
        
        public string sKey;
        
        public string sRet;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onBodyBrowUserEvent(int row, int col, string sKey, string sRet, string sErr) {
            this.row = row;
            this.col = col;
            this.sKey = sKey;
            this.sRet = sRet;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onHeadCellCheckEventHandler(object sender, @__ctlReferMakeVouch_onHeadCellCheckEvent e);
    
    public class @__ctlReferMakeVouch_onHeadCellCheckEvent {
        
        public string sKey;
        
        public string sRet;
        
        public bool bChange;
        
        public int row;
        
        public int col;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onHeadCellCheckEvent(string sKey, string sRet, bool bChange, int row, int col, string sErr) {
            this.sKey = sKey;
            this.sRet = sRet;
            this.bChange = bChange;
            this.row = row;
            this.col = col;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onBodyCellCheckEventHandler(object sender, @__ctlReferMakeVouch_onBodyCellCheckEvent e);
    
    public class @__ctlReferMakeVouch_onBodyCellCheckEvent {
        
        public string sKey;
        
        public string sRet;
        
        public bool bChange;
        
        public int row;
        
        public int col;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onBodyCellCheckEvent(string sKey, string sRet, bool bChange, int row, int col, string sErr) {
            this.sKey = sKey;
            this.sRet = sRet;
            this.bChange = bChange;
            this.row = row;
            this.col = col;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onPageEventHandler(object sender, @__ctlReferMakeVouch_onPageEvent e);
    
    public class @__ctlReferMakeVouch_onPageEvent {
        
        public MSXML2.IXMLDOMDocument2 domFilters;
        
        public int iPageSize;
        
        public int iPageCount;
        
        public int iCurPage;
        
        public MSXML2.IXMLDOMDocument2 domHead;
        
        public MSXML2.IXMLDOMDocument2 domBody;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onPageEvent(MSXML2.IXMLDOMDocument2 domFilters, int iPageSize, int iPageCount, int iCurPage, MSXML2.IXMLDOMDocument2 domHead, MSXML2.IXMLDOMDocument2 domBody, string sErr) {
            this.domFilters = domFilters;
            this.iPageSize = iPageSize;
            this.iPageCount = iPageCount;
            this.iCurPage = iCurPage;
            this.domHead = domHead;
            this.domBody = domBody;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onButtonClickPreEventHandler(object sender, @__ctlReferMakeVouch_onButtonClickPreEvent e);
    
    public class @__ctlReferMakeVouch_onButtonClickPreEvent {
        
        public string sBtnKey;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onButtonClickPreEvent(string sBtnKey, string sErr) {
            this.sBtnKey = sBtnKey;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onButtonClickEventHandler(object sender, @__ctlReferMakeVouch_onButtonClickEvent e);
    
    public class @__ctlReferMakeVouch_onButtonClickEvent {
        
        public string sBtnKey;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_onButtonClickEvent(string sBtnKey, string sErr) {
            this.sBtnKey = sBtnKey;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_onTurnPageEventHandler(object sender, @__ctlReferMakeVouch_onTurnPageEvent e);
    
    public class @__ctlReferMakeVouch_onTurnPageEvent {
        
        public int m_iCurPage;
        
        public int pageSize;
        
        public @__ctlReferMakeVouch_onTurnPageEvent(int m_iCurPage, int pageSize) {
            this.m_iCurPage = m_iCurPage;
            this.pageSize = pageSize;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_GetFilterEventHandler(object sender, @__ctlReferMakeVouch_GetFilterEvent e);
    
    public class @__ctlReferMakeVouch_GetFilterEvent {
        
        public string sName;
        
        public MSXML2.IXMLDOMDocument2 domFilter;
        
        public string sErr;
        
        public @__ctlReferMakeVouch_GetFilterEvent(string sName, MSXML2.IXMLDOMDocument2 domFilter, string sErr) {
            this.sName = sName;
            this.domFilter = domFilter;
            this.sErr = sErr;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadBrowUserEventHandler(object sender, @__ctlReferMakeVouch_HeadBrowUserEvent e);
    
    public class @__ctlReferMakeVouch_HeadBrowUserEvent {
        
        public object retValue;
        
        public int row;
        
        public int col;
        
        public @__ctlReferMakeVouch_HeadBrowUserEvent(object retValue, int row, int col) {
            this.retValue = retValue;
            this.row = row;
            this.col = col;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadCellValueChangedEventHandler(object sender, @__ctlReferMakeVouch_HeadCellValueChangedEvent e);
    
    public class @__ctlReferMakeVouch_HeadCellValueChangedEvent {
        
        public short row;
        
        public short col;
        
        public object newValue;
        
        public object oldValue;
        
        public bool keepFocus;
        
        public @__ctlReferMakeVouch_HeadCellValueChangedEvent(short row, short col, object newValue, object oldValue, bool keepFocus) {
            this.row = row;
            this.col = col;
            this.newValue = newValue;
            this.oldValue = oldValue;
            this.keepFocus = keepFocus;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadDragDropEventHandler(object sender, @__ctlReferMakeVouch_HeadDragDropEvent e);
    
    public class @__ctlReferMakeVouch_HeadDragDropEvent {
        
        public object source;
        
        public float x;
        
        public float y;
        
        public @__ctlReferMakeVouch_HeadDragDropEvent(object source, float x, float y) {
            this.source = source;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadDragOverEventHandler(object sender, @__ctlReferMakeVouch_HeadDragOverEvent e);
    
    public class @__ctlReferMakeVouch_HeadDragOverEvent {
        
        public object source;
        
        public float x;
        
        public float y;
        
        public short state;
        
        public @__ctlReferMakeVouch_HeadDragOverEvent(object source, float x, float y, short state) {
            this.source = source;
            this.x = x;
            this.y = y;
            this.state = state;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadFillListEventHandler(object sender, @__ctlReferMakeVouch_HeadFillListEvent e);
    
    public class @__ctlReferMakeVouch_HeadFillListEvent {
        
        public int r;
        
        public int c;
        
        public object pCom;
        
        public @__ctlReferMakeVouch_HeadFillListEvent(int r, int c, object pCom) {
            this.r = r;
            this.c = c;
            this.pCom = pCom;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadKeyDownEventHandler(object sender, @__ctlReferMakeVouch_HeadKeyDownEvent e);
    
    public class @__ctlReferMakeVouch_HeadKeyDownEvent {
        
        public short keyCode;
        
        public short shift;
        
        public @__ctlReferMakeVouch_HeadKeyDownEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadKeyPressEventHandler(object sender, @__ctlReferMakeVouch_HeadKeyPressEvent e);
    
    public class @__ctlReferMakeVouch_HeadKeyPressEvent {
        
        public short keyAscii;
        
        public @__ctlReferMakeVouch_HeadKeyPressEvent(short keyAscii) {
            this.keyAscii = keyAscii;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadKeyUpEventHandler(object sender, @__ctlReferMakeVouch_HeadKeyUpEvent e);
    
    public class @__ctlReferMakeVouch_HeadKeyUpEvent {
        
        public short keyCode;
        
        public short shift;
        
        public @__ctlReferMakeVouch_HeadKeyUpEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadMouseDownEventHandler(object sender, @__ctlReferMakeVouch_HeadMouseDownEvent e);
    
    public class @__ctlReferMakeVouch_HeadMouseDownEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__ctlReferMakeVouch_HeadMouseDownEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadMouseUpEventHandler(object sender, @__ctlReferMakeVouch_HeadMouseUpEvent e);
    
    public class @__ctlReferMakeVouch_HeadMouseUpEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__ctlReferMakeVouch_HeadMouseUpEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadPrintSettingChangedEventHandler(object sender, @__ctlReferMakeVouch_HeadPrintSettingChangedEvent e);
    
    public class @__ctlReferMakeVouch_HeadPrintSettingChangedEvent {
        
        public object varLocalSettings;
        
        public object varModuleSettings;
        
        public @__ctlReferMakeVouch_HeadPrintSettingChangedEvent(object varLocalSettings, object varModuleSettings) {
            this.varLocalSettings = varLocalSettings;
            this.varModuleSettings = varModuleSettings;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadSelectClickEventHandler(object sender, @__ctlReferMakeVouch_HeadSelectClickEvent e);
    
    public class @__ctlReferMakeVouch_HeadSelectClickEvent {
        
        public bool selected;
        
        public @__ctlReferMakeVouch_HeadSelectClickEvent(bool selected) {
            this.selected = selected;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadValidateEventHandler(object sender, @__ctlReferMakeVouch_HeadValidateEvent e);
    
    public class @__ctlReferMakeVouch_HeadValidateEvent {
        
        public bool cancel;
        
        public @__ctlReferMakeVouch_HeadValidateEvent(bool cancel) {
            this.cancel = cancel;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadShiftSelectEventHandler(object sender, @__ctlReferMakeVouch_HeadShiftSelectEvent e);
    
    public class @__ctlReferMakeVouch_HeadShiftSelectEvent {
        
        public int lFromRow;
        
        public int lToRow;
        
        public object other;
        
        public @__ctlReferMakeVouch_HeadShiftSelectEvent(int lFromRow, int lToRow, object other) {
            this.lFromRow = lFromRow;
            this.lToRow = lToRow;
            this.other = other;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_HeadSumStyleEventHandler(object sender, @__ctlReferMakeVouch_HeadSumStyleEvent e);
    
    public class @__ctlReferMakeVouch_HeadSumStyleEvent {
        
        public bool selected;
        
        public @__ctlReferMakeVouch_HeadSumStyleEvent(bool selected) {
            this.selected = selected;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyBrowUserEventHandler(object sender, @__ctlReferMakeVouch_BodyBrowUserEvent e);
    
    public class @__ctlReferMakeVouch_BodyBrowUserEvent {
        
        public object retValue;
        
        public int row;
        
        public int col;
        
        public @__ctlReferMakeVouch_BodyBrowUserEvent(object retValue, int row, int col) {
            this.retValue = retValue;
            this.row = row;
            this.col = col;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyCellValueChangedEventHandler(object sender, @__ctlReferMakeVouch_BodyCellValueChangedEvent e);
    
    public class @__ctlReferMakeVouch_BodyCellValueChangedEvent {
        
        public short row;
        
        public short col;
        
        public object newValue;
        
        public object oldValue;
        
        public bool keepFocus;
        
        public @__ctlReferMakeVouch_BodyCellValueChangedEvent(short row, short col, object newValue, object oldValue, bool keepFocus) {
            this.row = row;
            this.col = col;
            this.newValue = newValue;
            this.oldValue = oldValue;
            this.keepFocus = keepFocus;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyDragDropEventHandler(object sender, @__ctlReferMakeVouch_BodyDragDropEvent e);
    
    public class @__ctlReferMakeVouch_BodyDragDropEvent {
        
        public object source;
        
        public float x;
        
        public float y;
        
        public @__ctlReferMakeVouch_BodyDragDropEvent(object source, float x, float y) {
            this.source = source;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyDragOverEventHandler(object sender, @__ctlReferMakeVouch_BodyDragOverEvent e);
    
    public class @__ctlReferMakeVouch_BodyDragOverEvent {
        
        public object source;
        
        public float x;
        
        public float y;
        
        public short state;
        
        public @__ctlReferMakeVouch_BodyDragOverEvent(object source, float x, float y, short state) {
            this.source = source;
            this.x = x;
            this.y = y;
            this.state = state;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyFillListEventHandler(object sender, @__ctlReferMakeVouch_BodyFillListEvent e);
    
    public class @__ctlReferMakeVouch_BodyFillListEvent {
        
        public int r;
        
        public int c;
        
        public object pCom;
        
        public @__ctlReferMakeVouch_BodyFillListEvent(int r, int c, object pCom) {
            this.r = r;
            this.c = c;
            this.pCom = pCom;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyKeyDownEventHandler(object sender, @__ctlReferMakeVouch_BodyKeyDownEvent e);
    
    public class @__ctlReferMakeVouch_BodyKeyDownEvent {
        
        public short keyCode;
        
        public short shift;
        
        public @__ctlReferMakeVouch_BodyKeyDownEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyKeyPressEventHandler(object sender, @__ctlReferMakeVouch_BodyKeyPressEvent e);
    
    public class @__ctlReferMakeVouch_BodyKeyPressEvent {
        
        public short keyAscii;
        
        public @__ctlReferMakeVouch_BodyKeyPressEvent(short keyAscii) {
            this.keyAscii = keyAscii;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyKeyUpEventHandler(object sender, @__ctlReferMakeVouch_BodyKeyUpEvent e);
    
    public class @__ctlReferMakeVouch_BodyKeyUpEvent {
        
        public short keyCode;
        
        public short shift;
        
        public @__ctlReferMakeVouch_BodyKeyUpEvent(short keyCode, short shift) {
            this.keyCode = keyCode;
            this.shift = shift;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyMouseDownEventHandler(object sender, @__ctlReferMakeVouch_BodyMouseDownEvent e);
    
    public class @__ctlReferMakeVouch_BodyMouseDownEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__ctlReferMakeVouch_BodyMouseDownEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyMouseUpEventHandler(object sender, @__ctlReferMakeVouch_BodyMouseUpEvent e);
    
    public class @__ctlReferMakeVouch_BodyMouseUpEvent {
        
        public short button;
        
        public short shift;
        
        public float x;
        
        public float y;
        
        public @__ctlReferMakeVouch_BodyMouseUpEvent(short button, short shift, float x, float y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyPrintSettingChangedEventHandler(object sender, @__ctlReferMakeVouch_BodyPrintSettingChangedEvent e);
    
    public class @__ctlReferMakeVouch_BodyPrintSettingChangedEvent {
        
        public object varLocalSettings;
        
        public object varModuleSettings;
        
        public @__ctlReferMakeVouch_BodyPrintSettingChangedEvent(object varLocalSettings, object varModuleSettings) {
            this.varLocalSettings = varLocalSettings;
            this.varModuleSettings = varModuleSettings;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodySelectClickEventHandler(object sender, @__ctlReferMakeVouch_BodySelectClickEvent e);
    
    public class @__ctlReferMakeVouch_BodySelectClickEvent {
        
        public bool selected;
        
        public @__ctlReferMakeVouch_BodySelectClickEvent(bool selected) {
            this.selected = selected;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyValidateEventHandler(object sender, @__ctlReferMakeVouch_BodyValidateEvent e);
    
    public class @__ctlReferMakeVouch_BodyValidateEvent {
        
        public bool cancel;
        
        public @__ctlReferMakeVouch_BodyValidateEvent(bool cancel) {
            this.cancel = cancel;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodyShiftSelectEventHandler(object sender, @__ctlReferMakeVouch_BodyShiftSelectEvent e);
    
    public class @__ctlReferMakeVouch_BodyShiftSelectEvent {
        
        public int lFromRow;
        
        public int lToRow;
        
        public object other;
        
        public @__ctlReferMakeVouch_BodyShiftSelectEvent(int lFromRow, int lToRow, object other) {
            this.lFromRow = lFromRow;
            this.lToRow = lToRow;
            this.other = other;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BodySumStyleEventHandler(object sender, @__ctlReferMakeVouch_BodySumStyleEvent e);
    
    public class @__ctlReferMakeVouch_BodySumStyleEvent {
        
        public bool selected;
        
        public @__ctlReferMakeVouch_BodySumStyleEvent(bool selected) {
            this.selected = selected;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_ButtonClickEventHandler(object sender, @__ctlReferMakeVouch_ButtonClickEvent e);
    
    public class @__ctlReferMakeVouch_ButtonClickEvent {
        
        public MSComctlLib.Button button;
        
        public @__ctlReferMakeVouch_ButtonClickEvent(MSComctlLib.Button button) {
            this.button = button;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_ButtonDropDownEventHandler(object sender, @__ctlReferMakeVouch_ButtonDropDownEvent e);
    
    public class @__ctlReferMakeVouch_ButtonDropDownEvent {
        
        public MSComctlLib.Button button;
        
        public @__ctlReferMakeVouch_ButtonDropDownEvent(MSComctlLib.Button button) {
            this.button = button;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_ButtonMenuClickEventHandler(object sender, @__ctlReferMakeVouch_ButtonMenuClickEvent e);
    
    public class @__ctlReferMakeVouch_ButtonMenuClickEvent {
        
        public MSComctlLib.ButtonMenu buttonMenu;
        
        public @__ctlReferMakeVouch_ButtonMenuClickEvent(MSComctlLib.ButtonMenu buttonMenu) {
            this.buttonMenu = buttonMenu;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_ButtonOnCommandEventHandler(object sender, @__ctlReferMakeVouch_ButtonOnCommandEvent e);
    
    public class @__ctlReferMakeVouch_ButtonOnCommandEvent {
        
        public UFToolBarCtrl.ENUM_MENU_OR_BUTTON enumType;
        
        public string cButtonId;
        
        public string cMenuId;
        
        public @__ctlReferMakeVouch_ButtonOnCommandEvent(UFToolBarCtrl.ENUM_MENU_OR_BUTTON enumType, string cButtonId, string cMenuId) {
            this.enumType = enumType;
            this.cButtonId = cButtonId;
            this.cMenuId = cMenuId;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_ButtonOnPreCommandEventHandler(object sender, @__ctlReferMakeVouch_ButtonOnPreCommandEvent e);
    
    public class @__ctlReferMakeVouch_ButtonOnPreCommandEvent {
        
        public UFToolBarCtrl.ENUM_MENU_OR_BUTTON enumType;
        
        public string cButtonId;
        
        public string cMenuId;
        
        public @__ctlReferMakeVouch_ButtonOnPreCommandEvent(UFToolBarCtrl.ENUM_MENU_OR_BUTTON enumType, string cButtonId, string cMenuId) {
            this.enumType = enumType;
            this.cButtonId = cButtonId;
            this.cMenuId = cMenuId;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_CheckClickEventHandler(object sender, @__ctlReferMakeVouch_CheckClickEvent e);
    
    public class @__ctlReferMakeVouch_CheckClickEvent {
        
        public short index;
        
        public string name;
        
        public string caption;
        
        public string progID;
        
        public @__ctlReferMakeVouch_CheckClickEvent(short index, string name, string caption, string progID) {
            this.index = index;
            this.name = name;
            this.caption = caption;
            this.progID = progID;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_DisplayStyleChangeEventHandler(object sender, @__ctlReferMakeVouch_DisplayStyleChangeEvent e);
    
    public class @__ctlReferMakeVouch_DisplayStyleChangeEvent {
        
        public string style;
        
        public short index;
        
        public int data;
        
        public @__ctlReferMakeVouch_DisplayStyleChangeEvent(string style, short index, int data) {
            this.style = style;
            this.index = index;
            this.data = data;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_ShowBodyEventHandler(object sender, @__ctlReferMakeVouch_ShowBodyEvent e);
    
    public class @__ctlReferMakeVouch_ShowBodyEvent {
        
        public short value;
        
        public @__ctlReferMakeVouch_ShowBodyEvent(short value) {
            this.value = value;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_IsAllowBatchModifyEventHandler(object sender, @__ctlReferMakeVouch_IsAllowBatchModifyEvent e);
    
    public class @__ctlReferMakeVouch_IsAllowBatchModifyEvent {
        
        public bool bCanModify;
        
        public int row;
        
        public string colkey;
        
        public bool bIsBody;
        
        public @__ctlReferMakeVouch_IsAllowBatchModifyEvent(bool bCanModify, int row, string colkey, bool bIsBody) {
            this.bCanModify = bCanModify;
            this.row = row;
            this.colkey = colkey;
            this.bIsBody = bIsBody;
        }
    }
    
    public delegate void @__ctlReferMakeVouch_BatchModifyEventHandler(object sender, @__ctlReferMakeVouch_BatchModifyEvent e);
    
    public class @__ctlReferMakeVouch_BatchModifyEvent {
        
        public string sItemXML;
        
        public bool bIsBody;
        
        public @__ctlReferMakeVouch_BatchModifyEvent(string sItemXML, bool bIsBody) {
            this.sItemXML = sItemXML;
            this.bIsBody = bIsBody;
        }
    }
    
    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    public class AxctlReferMakeVouchEventMulticaster : ReferMakeVouch.@__ctlReferMakeVouch {
        
        private AxctlReferMakeVouch parent;
        
        public AxctlReferMakeVouchEventMulticaster(AxctlReferMakeVouch parent) {
            this.parent = parent;
        }
        
        public virtual void onHeadSelecting(int row, ref bool bChange, ref string sErr) {
            @__ctlReferMakeVouch_onHeadSelectingEvent onheadselectingEvent = new @__ctlReferMakeVouch_onHeadSelectingEvent(row, bChange, sErr);
            this.parent.RaiseOnonHeadSelecting(this.parent, onheadselectingEvent);
            bChange = onheadselectingEvent.bChange;
            sErr = onheadselectingEvent.sErr;
        }
        
        public virtual void onBodySelecting(int row, ref bool bChange, ref string sErr) {
            @__ctlReferMakeVouch_onBodySelectingEvent onbodyselectingEvent = new @__ctlReferMakeVouch_onBodySelectingEvent(row, bChange, sErr);
            this.parent.RaiseOnonBodySelecting(this.parent, onbodyselectingEvent);
            bChange = onbodyselectingEvent.bChange;
            sErr = onbodyselectingEvent.sErr;
        }
        
        public virtual void onHeadSelected(int row, ref string sErr) {
            @__ctlReferMakeVouch_onHeadSelectedEvent onheadselectedEvent = new @__ctlReferMakeVouch_onHeadSelectedEvent(row, sErr);
            this.parent.RaiseOnonHeadSelected(this.parent, onheadselectedEvent);
            sErr = onheadselectedEvent.sErr;
        }
        
        public virtual void onBodySelected(int row, ref string sErr) {
            @__ctlReferMakeVouch_onBodySelectedEvent onbodyselectedEvent = new @__ctlReferMakeVouch_onBodySelectedEvent(row, sErr);
            this.parent.RaiseOnonBodySelected(this.parent, onbodyselectedEvent);
            sErr = onbodyselectedEvent.sErr;
        }
        
        public virtual void onHeadBrowUser(int row, int col, string sKey, ref string sRet, ref string sErr) {
            @__ctlReferMakeVouch_onHeadBrowUserEvent onheadbrowuserEvent = new @__ctlReferMakeVouch_onHeadBrowUserEvent(row, col, sKey, sRet, sErr);
            this.parent.RaiseOnonHeadBrowUser(this.parent, onheadbrowuserEvent);
            sRet = onheadbrowuserEvent.sRet;
            sErr = onheadbrowuserEvent.sErr;
        }
        
        public virtual void onBodyBrowUser(int row, int col, string sKey, ref string sRet, ref string sErr) {
            @__ctlReferMakeVouch_onBodyBrowUserEvent onbodybrowuserEvent = new @__ctlReferMakeVouch_onBodyBrowUserEvent(row, col, sKey, sRet, sErr);
            this.parent.RaiseOnonBodyBrowUser(this.parent, onbodybrowuserEvent);
            sRet = onbodybrowuserEvent.sRet;
            sErr = onbodybrowuserEvent.sErr;
        }
        
        public virtual void onHeadCellCheck(string sKey, ref string sRet, ref bool bChange, int row, int col, ref string sErr) {
            @__ctlReferMakeVouch_onHeadCellCheckEvent onheadcellcheckEvent = new @__ctlReferMakeVouch_onHeadCellCheckEvent(sKey, sRet, bChange, row, col, sErr);
            this.parent.RaiseOnonHeadCellCheck(this.parent, onheadcellcheckEvent);
            sRet = onheadcellcheckEvent.sRet;
            bChange = onheadcellcheckEvent.bChange;
            sErr = onheadcellcheckEvent.sErr;
        }
        
        public virtual void onBodyCellCheck(string sKey, ref string sRet, ref bool bChange, int row, int col, ref string sErr) {
            @__ctlReferMakeVouch_onBodyCellCheckEvent onbodycellcheckEvent = new @__ctlReferMakeVouch_onBodyCellCheckEvent(sKey, sRet, bChange, row, col, sErr);
            this.parent.RaiseOnonBodyCellCheck(this.parent, onbodycellcheckEvent);
            sRet = onbodycellcheckEvent.sRet;
            bChange = onbodycellcheckEvent.bChange;
            sErr = onbodycellcheckEvent.sErr;
        }
        
        public virtual void onPage(MSXML2.IXMLDOMDocument2 domFilters, ref int iPageSize, ref int iPageCount, ref int iCurPage, ref MSXML2.IXMLDOMDocument2 domHead, ref MSXML2.IXMLDOMDocument2 domBody, ref string sErr) {
            @__ctlReferMakeVouch_onPageEvent onpageEvent = new @__ctlReferMakeVouch_onPageEvent(domFilters, iPageSize, iPageCount, iCurPage, domHead, domBody, sErr);
            this.parent.RaiseOnonPage(this.parent, onpageEvent);
            iPageSize = onpageEvent.iPageSize;
            iPageCount = onpageEvent.iPageCount;
            iCurPage = onpageEvent.iCurPage;
            domHead = onpageEvent.domHead;
            domBody = onpageEvent.domBody;
            sErr = onpageEvent.sErr;
        }
        
        public virtual void onButtonClickPre(string sBtnKey, ref string sErr) {
            @__ctlReferMakeVouch_onButtonClickPreEvent onbuttonclickpreEvent = new @__ctlReferMakeVouch_onButtonClickPreEvent(sBtnKey, sErr);
            this.parent.RaiseOnonButtonClickPre(this.parent, onbuttonclickpreEvent);
            sErr = onbuttonclickpreEvent.sErr;
        }
        
        public virtual void onButtonClick(string sBtnKey, ref string sErr) {
            @__ctlReferMakeVouch_onButtonClickEvent onbuttonclickEvent = new @__ctlReferMakeVouch_onButtonClickEvent(sBtnKey, sErr);
            this.parent.RaiseOnonButtonClick(this.parent, onbuttonclickEvent);
            sErr = onbuttonclickEvent.sErr;
        }
        
        public virtual void onTurnPage(int m_iCurPage, int pageSize) {
            @__ctlReferMakeVouch_onTurnPageEvent onturnpageEvent = new @__ctlReferMakeVouch_onTurnPageEvent(m_iCurPage, pageSize);
            this.parent.RaiseOnonTurnPage(this.parent, onturnpageEvent);
        }
        
        public virtual void onHelp() {
            System.EventArgs onhelpEvent = new System.EventArgs();
            this.parent.RaiseOnonHelp(this.parent, onhelpEvent);
        }
        
        public virtual void GetFilter(string sName, ref MSXML2.IXMLDOMDocument2 domFilter, ref string sErr) {
            @__ctlReferMakeVouch_GetFilterEvent getfilterEvent = new @__ctlReferMakeVouch_GetFilterEvent(sName, domFilter, sErr);
            this.parent.RaiseOnGetFilterEvent(this.parent, getfilterEvent);
            domFilter = getfilterEvent.domFilter;
            sErr = getfilterEvent.sErr;
        }
        
        public virtual void HeadBrowUser(ref object retValue, ref int row, ref int col) {
            @__ctlReferMakeVouch_HeadBrowUserEvent headbrowuserEvent = new @__ctlReferMakeVouch_HeadBrowUserEvent(retValue, row, col);
            this.parent.RaiseOnHeadBrowUser(this.parent, headbrowuserEvent);
            retValue = headbrowuserEvent.retValue;
            row = headbrowuserEvent.row;
            col = headbrowuserEvent.col;
        }
        
        public virtual void HeadCellValueChanged(short row, short col, ref object newValue, ref object oldValue, ref bool keepFocus) {
            @__ctlReferMakeVouch_HeadCellValueChangedEvent headcellvaluechangedEvent = new @__ctlReferMakeVouch_HeadCellValueChangedEvent(row, col, newValue, oldValue, keepFocus);
            this.parent.RaiseOnHeadCellValueChanged(this.parent, headcellvaluechangedEvent);
            newValue = headcellvaluechangedEvent.newValue;
            oldValue = headcellvaluechangedEvent.oldValue;
            keepFocus = headcellvaluechangedEvent.keepFocus;
        }
        
        public virtual void HeadClick() {
            System.EventArgs headclickEvent = new System.EventArgs();
            this.parent.RaiseOnHeadClick(this.parent, headclickEvent);
        }
        
        public virtual void HeadDblClick() {
            System.EventArgs headdblclickEvent = new System.EventArgs();
            this.parent.RaiseOnHeadDblClick(this.parent, headdblclickEvent);
        }
        
        public virtual void HeadDragDrop(ref object source, ref float x, ref float y) {
            @__ctlReferMakeVouch_HeadDragDropEvent headdragdropEvent = new @__ctlReferMakeVouch_HeadDragDropEvent(source, x, y);
            this.parent.RaiseOnHeadDragDrop(this.parent, headdragdropEvent);
            source = headdragdropEvent.source;
            x = headdragdropEvent.x;
            y = headdragdropEvent.y;
        }
        
        public virtual void HeadDragOver(ref object source, ref float x, ref float y, ref short state) {
            @__ctlReferMakeVouch_HeadDragOverEvent headdragoverEvent = new @__ctlReferMakeVouch_HeadDragOverEvent(source, x, y, state);
            this.parent.RaiseOnHeadDragOver(this.parent, headdragoverEvent);
            source = headdragoverEvent.source;
            x = headdragoverEvent.x;
            y = headdragoverEvent.y;
            state = headdragoverEvent.state;
        }
        
        public virtual void HeadFillList(int r, int c, ref object pCom) {
            @__ctlReferMakeVouch_HeadFillListEvent headfilllistEvent = new @__ctlReferMakeVouch_HeadFillListEvent(r, c, pCom);
            this.parent.RaiseOnHeadFillList(this.parent, headfilllistEvent);
            pCom = headfilllistEvent.pCom;
        }
        
        public virtual void HeadGotFocus() {
            System.EventArgs headgotfocusEvent = new System.EventArgs();
            this.parent.RaiseOnHeadGotFocus(this.parent, headgotfocusEvent);
        }
        
        public virtual void HeadKeyDown(short keyCode, short shift) {
            @__ctlReferMakeVouch_HeadKeyDownEvent headkeydownEvent = new @__ctlReferMakeVouch_HeadKeyDownEvent(keyCode, shift);
            this.parent.RaiseOnHeadKeyDown(this.parent, headkeydownEvent);
        }
        
        public virtual void HeadKeyPress(short keyAscii) {
            @__ctlReferMakeVouch_HeadKeyPressEvent headkeypressEvent = new @__ctlReferMakeVouch_HeadKeyPressEvent(keyAscii);
            this.parent.RaiseOnHeadKeyPress(this.parent, headkeypressEvent);
        }
        
        public virtual void HeadKeyUp(short keyCode, short shift) {
            @__ctlReferMakeVouch_HeadKeyUpEvent headkeyupEvent = new @__ctlReferMakeVouch_HeadKeyUpEvent(keyCode, shift);
            this.parent.RaiseOnHeadKeyUp(this.parent, headkeyupEvent);
        }
        
        public virtual void HeadLostFocus() {
            System.EventArgs headlostfocusEvent = new System.EventArgs();
            this.parent.RaiseOnHeadLostFocus(this.parent, headlostfocusEvent);
        }
        
        public virtual void HeadMouseDown(short button, short shift, float x, float y) {
            @__ctlReferMakeVouch_HeadMouseDownEvent headmousedownEvent = new @__ctlReferMakeVouch_HeadMouseDownEvent(button, shift, x, y);
            this.parent.RaiseOnHeadMouseDown(this.parent, headmousedownEvent);
        }
        
        public virtual void HeadMouseUp(short button, short shift, float x, float y) {
            @__ctlReferMakeVouch_HeadMouseUpEvent headmouseupEvent = new @__ctlReferMakeVouch_HeadMouseUpEvent(button, shift, x, y);
            this.parent.RaiseOnHeadMouseUp(this.parent, headmouseupEvent);
        }
        
        public virtual void HeadPrintSettingChanged(object varLocalSettings, object varModuleSettings) {
            @__ctlReferMakeVouch_HeadPrintSettingChangedEvent headprintsettingchangedEvent = new @__ctlReferMakeVouch_HeadPrintSettingChangedEvent(varLocalSettings, varModuleSettings);
            this.parent.RaiseOnHeadPrintSettingChanged(this.parent, headprintsettingchangedEvent);
        }
        
        public virtual void HeadResize() {
            System.EventArgs headresizeEvent = new System.EventArgs();
            this.parent.RaiseOnHeadResize(this.parent, headresizeEvent);
        }
        
        public virtual void HeadScroll() {
            System.EventArgs headscrollEvent = new System.EventArgs();
            this.parent.RaiseOnHeadScroll(this.parent, headscrollEvent);
        }
        
        public virtual void HeadSelectClick(bool selected) {
            @__ctlReferMakeVouch_HeadSelectClickEvent headselectclickEvent = new @__ctlReferMakeVouch_HeadSelectClickEvent(selected);
            this.parent.RaiseOnHeadSelectClick(this.parent, headselectclickEvent);
        }
        
        public virtual void HeadValidate(ref bool cancel) {
            @__ctlReferMakeVouch_HeadValidateEvent headvalidateEvent = new @__ctlReferMakeVouch_HeadValidateEvent(cancel);
            this.parent.RaiseOnHeadValidate(this.parent, headvalidateEvent);
            cancel = headvalidateEvent.cancel;
        }
        
        public virtual void HeadShiftSelect(int lFromRow, int lToRow, ref object other) {
            @__ctlReferMakeVouch_HeadShiftSelectEvent headshiftselectEvent = new @__ctlReferMakeVouch_HeadShiftSelectEvent(lFromRow, lToRow, other);
            this.parent.RaiseOnHeadShiftSelect(this.parent, headshiftselectEvent);
            other = headshiftselectEvent.other;
        }
        
        public virtual void HeadSumStyle(bool selected) {
            @__ctlReferMakeVouch_HeadSumStyleEvent headsumstyleEvent = new @__ctlReferMakeVouch_HeadSumStyleEvent(selected);
            this.parent.RaiseOnHeadSumStyle(this.parent, headsumstyleEvent);
        }
        
        public virtual void BodyBrowUser(ref object retValue, ref int row, ref int col) {
            @__ctlReferMakeVouch_BodyBrowUserEvent bodybrowuserEvent = new @__ctlReferMakeVouch_BodyBrowUserEvent(retValue, row, col);
            this.parent.RaiseOnBodyBrowUser(this.parent, bodybrowuserEvent);
            retValue = bodybrowuserEvent.retValue;
            row = bodybrowuserEvent.row;
            col = bodybrowuserEvent.col;
        }
        
        public virtual void BodyCellValueChanged(short row, short col, ref object newValue, ref object oldValue, ref bool keepFocus) {
            @__ctlReferMakeVouch_BodyCellValueChangedEvent bodycellvaluechangedEvent = new @__ctlReferMakeVouch_BodyCellValueChangedEvent(row, col, newValue, oldValue, keepFocus);
            this.parent.RaiseOnBodyCellValueChanged(this.parent, bodycellvaluechangedEvent);
            newValue = bodycellvaluechangedEvent.newValue;
            oldValue = bodycellvaluechangedEvent.oldValue;
            keepFocus = bodycellvaluechangedEvent.keepFocus;
        }
        
        public virtual void BodyClick() {
            System.EventArgs bodyclickEvent = new System.EventArgs();
            this.parent.RaiseOnBodyClick(this.parent, bodyclickEvent);
        }
        
        public virtual void BodyDblClick() {
            System.EventArgs bodydblclickEvent = new System.EventArgs();
            this.parent.RaiseOnBodyDblClick(this.parent, bodydblclickEvent);
        }
        
        public virtual void BodyDragDrop(ref object source, ref float x, ref float y) {
            @__ctlReferMakeVouch_BodyDragDropEvent bodydragdropEvent = new @__ctlReferMakeVouch_BodyDragDropEvent(source, x, y);
            this.parent.RaiseOnBodyDragDrop(this.parent, bodydragdropEvent);
            source = bodydragdropEvent.source;
            x = bodydragdropEvent.x;
            y = bodydragdropEvent.y;
        }
        
        public virtual void BodyDragOver(ref object source, ref float x, ref float y, ref short state) {
            @__ctlReferMakeVouch_BodyDragOverEvent bodydragoverEvent = new @__ctlReferMakeVouch_BodyDragOverEvent(source, x, y, state);
            this.parent.RaiseOnBodyDragOver(this.parent, bodydragoverEvent);
            source = bodydragoverEvent.source;
            x = bodydragoverEvent.x;
            y = bodydragoverEvent.y;
            state = bodydragoverEvent.state;
        }
        
        public virtual void BodyFillList(int r, int c, ref object pCom) {
            @__ctlReferMakeVouch_BodyFillListEvent bodyfilllistEvent = new @__ctlReferMakeVouch_BodyFillListEvent(r, c, pCom);
            this.parent.RaiseOnBodyFillList(this.parent, bodyfilllistEvent);
            pCom = bodyfilllistEvent.pCom;
        }
        
        public virtual void BodyGotFocus() {
            System.EventArgs bodygotfocusEvent = new System.EventArgs();
            this.parent.RaiseOnBodyGotFocus(this.parent, bodygotfocusEvent);
        }
        
        public virtual void BodyKeyDown(short keyCode, short shift) {
            @__ctlReferMakeVouch_BodyKeyDownEvent bodykeydownEvent = new @__ctlReferMakeVouch_BodyKeyDownEvent(keyCode, shift);
            this.parent.RaiseOnBodyKeyDown(this.parent, bodykeydownEvent);
        }
        
        public virtual void BodyKeyPress(short keyAscii) {
            @__ctlReferMakeVouch_BodyKeyPressEvent bodykeypressEvent = new @__ctlReferMakeVouch_BodyKeyPressEvent(keyAscii);
            this.parent.RaiseOnBodyKeyPress(this.parent, bodykeypressEvent);
        }
        
        public virtual void BodyKeyUp(short keyCode, short shift) {
            @__ctlReferMakeVouch_BodyKeyUpEvent bodykeyupEvent = new @__ctlReferMakeVouch_BodyKeyUpEvent(keyCode, shift);
            this.parent.RaiseOnBodyKeyUp(this.parent, bodykeyupEvent);
        }
        
        public virtual void BodyLostFocus() {
            System.EventArgs bodylostfocusEvent = new System.EventArgs();
            this.parent.RaiseOnBodyLostFocus(this.parent, bodylostfocusEvent);
        }
        
        public virtual void BodyMouseDown(short button, short shift, float x, float y) {
            @__ctlReferMakeVouch_BodyMouseDownEvent bodymousedownEvent = new @__ctlReferMakeVouch_BodyMouseDownEvent(button, shift, x, y);
            this.parent.RaiseOnBodyMouseDown(this.parent, bodymousedownEvent);
        }
        
        public virtual void BodyMouseUp(short button, short shift, float x, float y) {
            @__ctlReferMakeVouch_BodyMouseUpEvent bodymouseupEvent = new @__ctlReferMakeVouch_BodyMouseUpEvent(button, shift, x, y);
            this.parent.RaiseOnBodyMouseUp(this.parent, bodymouseupEvent);
        }
        
        public virtual void BodyPrintSettingChanged(object varLocalSettings, object varModuleSettings) {
            @__ctlReferMakeVouch_BodyPrintSettingChangedEvent bodyprintsettingchangedEvent = new @__ctlReferMakeVouch_BodyPrintSettingChangedEvent(varLocalSettings, varModuleSettings);
            this.parent.RaiseOnBodyPrintSettingChanged(this.parent, bodyprintsettingchangedEvent);
        }
        
        public virtual void BodyResize() {
            System.EventArgs bodyresizeEvent = new System.EventArgs();
            this.parent.RaiseOnBodyResize(this.parent, bodyresizeEvent);
        }
        
        public virtual void BodyScroll() {
            System.EventArgs bodyscrollEvent = new System.EventArgs();
            this.parent.RaiseOnBodyScroll(this.parent, bodyscrollEvent);
        }
        
        public virtual void BodySelectClick(bool selected) {
            @__ctlReferMakeVouch_BodySelectClickEvent bodyselectclickEvent = new @__ctlReferMakeVouch_BodySelectClickEvent(selected);
            this.parent.RaiseOnBodySelectClick(this.parent, bodyselectclickEvent);
        }
        
        public virtual void BodyValidate(ref bool cancel) {
            @__ctlReferMakeVouch_BodyValidateEvent bodyvalidateEvent = new @__ctlReferMakeVouch_BodyValidateEvent(cancel);
            this.parent.RaiseOnBodyValidate(this.parent, bodyvalidateEvent);
            cancel = bodyvalidateEvent.cancel;
        }
        
        public virtual void BodyShiftSelect(int lFromRow, int lToRow, ref object other) {
            @__ctlReferMakeVouch_BodyShiftSelectEvent bodyshiftselectEvent = new @__ctlReferMakeVouch_BodyShiftSelectEvent(lFromRow, lToRow, other);
            this.parent.RaiseOnBodyShiftSelect(this.parent, bodyshiftselectEvent);
            other = bodyshiftselectEvent.other;
        }
        
        public virtual void BodySumStyle(bool selected) {
            @__ctlReferMakeVouch_BodySumStyleEvent bodysumstyleEvent = new @__ctlReferMakeVouch_BodySumStyleEvent(selected);
            this.parent.RaiseOnBodySumStyle(this.parent, bodysumstyleEvent);
        }
        
        public virtual void ButtonClick(MSComctlLib.Button button) {
            @__ctlReferMakeVouch_ButtonClickEvent buttonclickEvent = new @__ctlReferMakeVouch_ButtonClickEvent(button);
            this.parent.RaiseOnButtonClick(this.parent, buttonclickEvent);
        }
        
        public virtual void ButtonDropDown(MSComctlLib.Button button) {
            @__ctlReferMakeVouch_ButtonDropDownEvent buttondropdownEvent = new @__ctlReferMakeVouch_ButtonDropDownEvent(button);
            this.parent.RaiseOnButtonDropDown(this.parent, buttondropdownEvent);
        }
        
        public virtual void ButtonMenuClick(MSComctlLib.ButtonMenu buttonMenu) {
            @__ctlReferMakeVouch_ButtonMenuClickEvent buttonmenuclickEvent = new @__ctlReferMakeVouch_ButtonMenuClickEvent(buttonMenu);
            this.parent.RaiseOnButtonMenuClick(this.parent, buttonmenuclickEvent);
        }
        
        public virtual void ButtonOnCommand(UFToolBarCtrl.ENUM_MENU_OR_BUTTON enumType, string cButtonId, string cMenuId) {
            @__ctlReferMakeVouch_ButtonOnCommandEvent buttononcommandEvent = new @__ctlReferMakeVouch_ButtonOnCommandEvent(enumType, cButtonId, cMenuId);
            this.parent.RaiseOnButtonOnCommand(this.parent, buttononcommandEvent);
        }
        
        public virtual void ButtonOnPreCommand(UFToolBarCtrl.ENUM_MENU_OR_BUTTON enumType, string cButtonId, string cMenuId) {
            @__ctlReferMakeVouch_ButtonOnPreCommandEvent buttononprecommandEvent = new @__ctlReferMakeVouch_ButtonOnPreCommandEvent(enumType, cButtonId, cMenuId);
            this.parent.RaiseOnButtonOnPreCommand(this.parent, buttononprecommandEvent);
        }
        
        public virtual void CheckClick(short index, string name, string caption, string progID) {
            @__ctlReferMakeVouch_CheckClickEvent checkclickEvent = new @__ctlReferMakeVouch_CheckClickEvent(index, name, caption, progID);
            this.parent.RaiseOnCheckClick(this.parent, checkclickEvent);
        }
        
        public virtual void DisplayStyleChange(string style, short index, int data) {
            @__ctlReferMakeVouch_DisplayStyleChangeEvent displaystylechangeEvent = new @__ctlReferMakeVouch_DisplayStyleChangeEvent(style, index, data);
            this.parent.RaiseOnDisplayStyleChange(this.parent, displaystylechangeEvent);
        }
        
        public virtual void EdtAccepted() {
            System.EventArgs edtacceptedEvent = new System.EventArgs();
            this.parent.RaiseOnEdtAccepted(this.parent, edtacceptedEvent);
        }
        
        public virtual void ShowBody(short value) {
            @__ctlReferMakeVouch_ShowBodyEvent showbodyEvent = new @__ctlReferMakeVouch_ShowBodyEvent(value);
            this.parent.RaiseOnShowBody(this.parent, showbodyEvent);
        }
        
        public virtual void IsAllowBatchModify(ref bool bCanModify, int row, string colkey, ref bool bIsBody) {
            @__ctlReferMakeVouch_IsAllowBatchModifyEvent isallowbatchmodifyEvent = new @__ctlReferMakeVouch_IsAllowBatchModifyEvent(bCanModify, row, colkey, bIsBody);
            this.parent.RaiseOnIsAllowBatchModify(this.parent, isallowbatchmodifyEvent);
            bCanModify = isallowbatchmodifyEvent.bCanModify;
            bIsBody = isallowbatchmodifyEvent.bIsBody;
        }
        
        public virtual void BatchModify(ref string sItemXML, ref bool bIsBody) {
            @__ctlReferMakeVouch_BatchModifyEvent batchmodifyEvent = new @__ctlReferMakeVouch_BatchModifyEvent(sItemXML, bIsBody);
            this.parent.RaiseOnBatchModify(this.parent, batchmodifyEvent);
            sItemXML = batchmodifyEvent.sItemXML;
            bIsBody = batchmodifyEvent.bIsBody;
        }
    }
}
